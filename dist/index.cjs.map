{"version":3,"file":"index.cjs","sources":["../src/presets/offscreen.ts","../src/presets/node.ts","../src/util/string.ts","../src/util/styles.ts","../src/util/math.ts","../src/Property.ts","../src/ViewPort.ts","../src/Point.ts","../src/Mouse.ts","../src/Screen.ts","../src/Parser.ts","../src/Transform/Translate.ts","../src/Transform/Rotate.ts","../src/Transform/Scale.ts","../src/Transform/Matrix.ts","../src/Transform/Skew.ts","../src/Transform/SkewX.ts","../src/Transform/SkewY.ts","../src/Transform/Transform.ts","../src/Document/Element.ts","../src/Document/UnknownElement.ts","../src/Font.ts","../src/BoundingBox.ts","../src/Document/RenderedElement.ts","../src/Document/TextElement.ts","../src/Document/TSpanElement.ts","../src/Document/TextNode.ts","../src/PathParser.ts","../src/Document/PathElement.ts","../src/Document/SVGElement.ts","../src/Document/RectElement.ts","../src/Document/CircleElement.ts","../src/Document/EllipseElement.ts","../src/Document/LineElement.ts","../src/Document/PolylineElement.ts","../src/Document/PolygonElement.ts","../src/Document/PatternElement.ts","../src/Document/MarkerElement.ts","../src/Document/DefsElement.ts","../src/Document/GElement.ts","../src/Document/GradientElement.ts","../src/Document/LinearGradientElement.ts","../src/Document/RadialGradientElement.ts","../src/Document/StopElement.ts","../src/Document/AnimateElement.ts","../src/Document/AnimateColorElement.ts","../src/Document/AnimateTransformElement.ts","../src/Document/FontFaceElement.ts","../src/Document/GlyphElement.ts","../src/Document/MissingGlyphElement.ts","../src/Document/FontElement.ts","../src/Document/TRefElement.ts","../src/Document/AElement.ts","../src/Document/TextPathElement.ts","../src/Document/ImageElement.ts","../src/Document/SymbolElement.ts","../src/SVGFontLoader.ts","../src/Document/StyleElement.ts","../src/Document/UseElement.ts","../src/Document/FeColorMatrixElement.ts","../src/Document/MaskElement.ts","../src/Document/ClipPathElement.ts","../src/Document/FilterElement.ts","../src/Document/FeDropShadowElement.ts","../src/Document/FeMorphologyElement.ts","../src/Document/FeCompositeElement.ts","../src/Document/FeGaussianBlurElement.ts","../src/Document/TitleElement.ts","../src/Document/DescElement.ts","../src/Document/elements.ts","../src/Document/Document.ts","../src/Canvg.ts"],"sourcesContent":["import { DOMParser } from './types'\n\ninterface IConfig {\n  /**\n   * XML/HTML parser from string into DOM Document.\n   */\n  DOMParser?: DOMParser\n}\n\n/**\n * Options preset for `OffscreenCanvas`.\n * @param config - Preset requirements.\n * @param config.DOMParser - XML/HTML parser from string into DOM Document.\n * @returns Preset object.\n */\nexport function offscreen({ DOMParser: DOMParserFallback }: IConfig = {}) {\n  const preset = {\n    window: null,\n    ignoreAnimation: true,\n    ignoreMouse: true,\n    DOMParser: DOMParserFallback,\n    createCanvas(width: number, height: number) {\n      return new OffscreenCanvas(width, height)\n    },\n    async createImage(url: string) {\n      const response = await fetch(url)\n      const blob = await response.blob()\n      const img = await createImageBitmap(blob)\n\n      return img\n    }\n  }\n\n  if (typeof globalThis.DOMParser !== 'undefined'\n    || typeof DOMParserFallback === 'undefined'\n  ) {\n    Reflect.deleteProperty(preset, 'DOMParser')\n  }\n\n  return preset\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { DOMParser } from './types'\n\n/**\n * `node-canvas` exports.\n */\ninterface ICanvas {\n  createCanvas(width: number, height: number): any\n  loadImage(src: string): Promise<any>\n}\n\n/**\n * WHATWG-compatible `fetch` function.\n */\ntype Fetch = (input: any, config?: any) => Promise<any>\n\ninterface IConfig {\n  /**\n   * XML/HTML parser from string into DOM Document.\n   */\n  DOMParser: DOMParser\n  /**\n   * `node-canvas` exports.\n   */\n  canvas: ICanvas\n  /**\n   * WHATWG-compatible `fetch` function.\n   */\n  fetch: Fetch\n}\n\n/**\n * Options preset for `node-canvas`.\n * @param config - Preset requirements.\n * @param config.DOMParser - XML/HTML parser from string into DOM Document.\n * @param config.canvas - `node-canvas` exports.\n * @param config.fetch - WHATWG-compatible `fetch` function.\n * @returns Preset object.\n */\nexport function node({\n  DOMParser,\n  canvas,\n  fetch\n}: IConfig) {\n  return {\n    window: null,\n    ignoreAnimation: true,\n    ignoreMouse: true,\n    DOMParser,\n    fetch,\n    createCanvas: canvas.createCanvas,\n    createImage: canvas.loadImage\n  }\n}\n","import { MatrixValue } from '../types'\n\n/**\n * HTML-safe compress white-spaces.\n * @param str - String to compress.\n * @returns String.\n */\nexport function compressSpaces(str: string) {\n  return str.replace(/(?!\\u3000)\\s+/gm, ' ')\n}\n\n/**\n * HTML-safe left trim.\n * @param str - String to trim.\n * @returns String.\n */\nexport function trimLeft(str: string) {\n  return str.replace(/^[\\n \\t]+/, '')\n}\n\n/**\n * HTML-safe right trim.\n * @param str - String to trim.\n * @returns String.\n */\nexport function trimRight(str: string) {\n  return str.replace(/[\\n \\t]+$/, '')\n}\n\n/**\n * String to numbers array.\n * @param str - Numbers string.\n * @returns Numbers array.\n */\nexport function toNumbers(str: string) {\n  const matches = str.match(/-?(\\d+(?:\\.\\d*(?:[eE][+-]?\\d+)?)?|\\.\\d+)(?=\\D|$)/gm)\n\n  return matches ? matches.map(parseFloat) : []\n}\n\n/**\n * String to matrix value.\n * @param str - Numbers string.\n * @returns Matrix value.\n */\nexport function toMatrixValue(str: string): MatrixValue {\n  const numbers = toNumbers(str)\n  const matrix = [\n    numbers[0] || 0,\n    numbers[1] || 0,\n    numbers[2] || 0,\n    numbers[3] || 0,\n    numbers[4] || 0,\n    numbers[5] || 0\n  ] as const\n\n  return matrix\n}\n\n// Microsoft Edge fix\nconst allUppercase = /^[A-Z-]+$/\n\n/**\n * Normalize attribute name.\n * @param name - Attribute name.\n * @returns Normalized attribute name.\n */\nexport function normalizeAttributeName(name: string) {\n  if (allUppercase.test(name)) {\n    return name.toLowerCase()\n  }\n\n  return name\n}\n\n/**\n * Parse external URL.\n * @param url - CSS url string.\n * @returns Parsed URL.\n */\nexport function parseExternalUrl(url: string): string {\n  //                      single quotes [2]\n  //                      v         double quotes [3]\n  //                      v         v         no quotes [4]\n  //                      v         v         v\n  const urlMatch = /url\\(('([^']+)'|\"([^\"]+)\"|([^'\")]+))\\)/.exec(url)\n\n  if (!urlMatch) {\n    return ''\n  }\n\n  return urlMatch[2] || urlMatch[3] || urlMatch[4] || ''\n}\n\n/**\n * Transform floats to integers in rgb colors.\n * @param color - Color to normalize.\n * @returns Normalized color.\n */\nexport function normalizeColor(color: string) {\n  if (!color.startsWith('rgb')) {\n    return color\n  }\n\n  let rgbParts = 3\n  const normalizedColor = color.replace(\n    /\\d+(\\.\\d+)?/g,\n    (num, isFloat) => (rgbParts-- && isFloat\n      ? String(Math.round(parseFloat(num)))\n      : num)\n  )\n\n  return normalizedColor\n}\n","\n// slightly modified version of https://github.com/keeganstreet/specificity/blob/master/specificity.js\nconst attributeRegex = /(\\[[^\\]]+\\])/g\nconst idRegex = /(#[^\\s+>~.[:]+)/g\nconst classRegex = /(\\.[^\\s+>~.[:]+)/g\nconst pseudoElementRegex = /(::[^\\s+>~.[:]+|:first-line|:first-letter|:before|:after)/gi\nconst pseudoClassWithBracketsRegex = /(:[\\w-]+\\([^)]*\\))/gi\nconst pseudoClassRegex = /(:[^\\s+>~.[:]+)/g\nconst elementRegex = /([^\\s+>~.[:]+)/g\n\nfunction findSelectorMatch(selector: string, regex: RegExp): [string, number] {\n  const matches = regex.exec(selector)\n\n  if (!matches) {\n    return [selector, 0]\n  }\n\n  return [selector.replace(regex, ' '), matches.length]\n}\n\n/**\n * Measure selector specificity.\n * @param selector - Selector to measure.\n * @returns Specificity.\n */\nexport function getSelectorSpecificity(selector: string) {\n  const specificity = [\n    0,\n    0,\n    0\n  ]\n  let currentSelector = selector\n    .replace(/:not\\(([^)]*)\\)/g, '     $1 ')\n    .replace(/{[\\s\\S]*/gm, ' ')\n  let delta = 0;\n\n  [currentSelector, delta] = findSelectorMatch(currentSelector, attributeRegex)\n  specificity[1] += delta;\n\n  [currentSelector, delta] = findSelectorMatch(currentSelector, idRegex)\n  specificity[0] += delta;\n\n  [currentSelector, delta] = findSelectorMatch(currentSelector, classRegex)\n  specificity[1] += delta;\n\n  [currentSelector, delta] = findSelectorMatch(currentSelector, pseudoElementRegex)\n  specificity[2] += delta;\n\n  [currentSelector, delta] = findSelectorMatch(currentSelector, pseudoClassWithBracketsRegex)\n  specificity[1] += delta;\n\n  [currentSelector, delta] = findSelectorMatch(currentSelector, pseudoClassRegex)\n  specificity[1] += delta\n\n  currentSelector = currentSelector\n    .replace(/[*\\s+>~]/g, ' ')\n    .replace(/[#.]/g, ' ');\n\n  [currentSelector, delta] = findSelectorMatch(currentSelector, elementRegex) // lgtm [js/useless-assignment-to-local]\n  specificity[2] += delta\n\n  return specificity.join('')\n}\n","import { VectorValue } from '../types'\n\nexport const PSEUDO_ZERO = .00000001\n\n/**\n * Vector magnitude.\n * @param v\n * @returns Number result.\n */\nexport function vectorMagnitude(v: VectorValue) {\n  return Math.sqrt(Math.pow(v[0], 2) + Math.pow(v[1], 2))\n}\n\n/**\n * Ratio between two vectors.\n * @param u\n * @param v\n * @returns Number result.\n */\nexport function vectorsRatio(u: VectorValue, v: VectorValue) {\n  return (u[0] * v[0] + u[1] * v[1]) / (vectorMagnitude(u) * vectorMagnitude(v))\n}\n\n/**\n * Angle between two vectors.\n * @param u\n * @param v\n * @returns Number result.\n */\nexport function vectorsAngle(u: VectorValue, v: VectorValue) {\n  return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(vectorsRatio(u, v))\n}\n\nexport function CB1(t: number) {\n  return t * t * t\n}\n\nexport function CB2(t: number) {\n  return 3 * t * t * (1 - t)\n}\n\nexport function CB3(t: number) {\n  return 3 * t * (1 - t) * (1 - t)\n}\n\nexport function CB4(t: number) {\n  return (1 - t) * (1 - t) * (1 - t)\n}\n\nexport function QB1(t: number) {\n  return t * t\n}\n\nexport function QB2(t: number) {\n  return 2 * t * (1 - t)\n}\n\nexport function QB3(t: number) {\n  return (1 - t) * (1 - t)\n}\n","import RGBColor from 'rgbcolor'\nimport {\n  compressSpaces,\n  normalizeColor\n} from './util'\nimport { Axis } from './ViewPort'\nimport {\n  Document,\n  Element,\n  PathElement,\n  PatternElement,\n  GradientElement\n} from './Document'\n\nexport class Property<T = unknown> {\n  static empty(document: Document) {\n    return new Property(document, 'EMPTY', '')\n  }\n\n  static readonly textBaselineMapping: Record<string, string> = {\n    'baseline': 'alphabetic',\n    'before-edge': 'top',\n    'text-before-edge': 'top',\n    'middle': 'middle',\n    'central': 'middle',\n    'after-edge': 'bottom',\n    'text-after-edge': 'bottom',\n    'ideographic': 'ideographic',\n    'alphabetic': 'alphabetic',\n    'hanging': 'hanging',\n    'mathematical': 'alphabetic'\n  }\n\n  private isNormalizedColor = false\n\n  constructor(\n    private readonly document: Document,\n    private readonly name: string,\n    private value: T\n  ) {}\n\n  split(separator = ' ') {\n    const {\n      document,\n      name\n    } = this\n\n    return compressSpaces(this.getString())\n      .trim()\n      .split(separator)\n      .map(value => new Property<string>(document, name, value))\n  }\n\n  hasValue(zeroIsValue?: boolean) {\n    const value = this.value as unknown\n\n    return value !== null\n      && value !== ''\n      && (zeroIsValue || value !== 0)\n      && typeof value !== 'undefined'\n  }\n\n  isString(regexp?: RegExp) {\n    const { value } = this\n    const result = typeof value === 'string'\n\n    if (!result || !regexp) {\n      return result\n    }\n\n    return regexp.test(value)\n  }\n\n  isUrlDefinition() {\n    return this.isString(/^url\\(/)\n  }\n\n  isPixels() {\n    if (!this.hasValue()) {\n      return false\n    }\n\n    const asString = this.getString()\n\n    switch (true) {\n      case asString.endsWith('px'):\n      case /^[0-9]+$/.test(asString):\n        return true\n\n      default:\n        return false\n    }\n  }\n\n  setValue(value: T) {\n    this.value = value\n    return this\n  }\n\n  getValue(def?: T) {\n    if (typeof def === 'undefined' || this.hasValue()) {\n      return this.value\n    }\n\n    return def\n  }\n\n  getNumber(def?: T) {\n    if (!this.hasValue()) {\n      if (typeof def === 'undefined') {\n        return 0\n      }\n\n      // @ts-expect-error Parse unknown value.\n      return parseFloat(def)\n    }\n\n    const { value } = this\n    // @ts-expect-error Parse unknown value.\n    let n = parseFloat(value)\n\n    if (this.isString(/%$/)) {\n      n /= 100.0\n    }\n\n    return n\n  }\n\n  getString(def?: T) {\n    if (typeof def === 'undefined' || this.hasValue()) {\n      return typeof this.value === 'undefined'\n        ? ''\n        : String(this.value)\n    }\n\n    return String(def)\n  }\n\n  getColor(def?: T) {\n    let color = this.getString(def)\n\n    if (this.isNormalizedColor) {\n      return color\n    }\n\n    this.isNormalizedColor = true\n    color = normalizeColor(color)\n    this.value = color as unknown as T\n\n    return color\n  }\n\n  getDpi() {\n    return 96.0 // TODO: compute?\n  }\n\n  getRem() {\n    return this.document.rootEmSize\n  }\n\n  getEm() {\n    return this.document.emSize\n  }\n\n  getUnits() {\n    return this.getString().replace(/[0-9.-]/g, '')\n  }\n\n  getPixels(axis?: Axis, processPercent?: boolean): number\n  getPixels(isFontSize?: boolean): number\n  getPixels(axisOrIsFontSize?: Axis | boolean, processPercent = false): number {\n    if (!this.hasValue()) {\n      return 0\n    }\n\n    const [axis, isFontSize] = typeof axisOrIsFontSize === 'boolean'\n      ? [undefined, axisOrIsFontSize]\n      : [axisOrIsFontSize]\n    const { viewPort } = this.document.screen\n\n    switch (true) {\n      case this.isString(/vmin$/):\n        return this.getNumber()\n          / 100.0\n          * Math.min(\n            viewPort.computeSize('x'),\n            viewPort.computeSize('y')\n          )\n\n      case this.isString(/vmax$/):\n        return this.getNumber()\n          / 100.0\n          * Math.max(\n            viewPort.computeSize('x'),\n            viewPort.computeSize('y')\n          )\n\n      case this.isString(/vw$/):\n        return this.getNumber()\n          / 100.0\n          * viewPort.computeSize('x')\n\n      case this.isString(/vh$/):\n        return this.getNumber()\n          / 100.0\n          * viewPort.computeSize('y')\n\n      case this.isString(/rem$/):\n        return this.getNumber() * this.getRem(/* viewPort */)\n\n      case this.isString(/em$/):\n        return this.getNumber() * this.getEm(/* viewPort */)\n\n      case this.isString(/ex$/):\n        return this.getNumber() * this.getEm(/* viewPort */) / 2.0\n\n      case this.isString(/px$/):\n        return this.getNumber()\n\n      case this.isString(/pt$/):\n        return this.getNumber() * this.getDpi(/* viewPort */) * (1.0 / 72.0)\n\n      case this.isString(/pc$/):\n        return this.getNumber() * 15\n\n      case this.isString(/cm$/):\n        return this.getNumber() * this.getDpi(/* viewPort */) / 2.54\n\n      case this.isString(/mm$/):\n        return this.getNumber() * this.getDpi(/* viewPort */) / 25.4\n\n      case this.isString(/in$/):\n        return this.getNumber() * this.getDpi(/* viewPort */)\n\n      case this.isString(/%$/) && isFontSize:\n        return this.getNumber() * this.getEm(/* viewPort */)\n\n      case this.isString(/%$/):\n        return this.getNumber() * viewPort.computeSize(axis)\n\n      default: {\n        const n = this.getNumber()\n\n        if (processPercent && n < 1.0) {\n          return n * viewPort.computeSize(axis)\n        }\n\n        return n\n      }\n    }\n  }\n\n  getMilliseconds() {\n    if (!this.hasValue()) {\n      return 0\n    }\n\n    if (this.isString(/ms$/)) {\n      return this.getNumber()\n    }\n\n    return this.getNumber() * 1000\n  }\n\n  getRadians() {\n    if (!this.hasValue()) {\n      return 0\n    }\n\n    switch (true) {\n      case this.isString(/deg$/):\n        return this.getNumber() * (Math.PI / 180.0)\n\n      case this.isString(/grad$/):\n        return this.getNumber() * (Math.PI / 200.0)\n\n      case this.isString(/rad$/):\n        return this.getNumber()\n\n      default:\n        return this.getNumber() * (Math.PI / 180.0)\n    }\n  }\n\n  getDefinition<T extends Element>() {\n    const asString = this.getString()\n    const match = /#([^)'\"]+)/.exec(asString)\n    const name = match?.[1] || asString\n\n    return this.document.definitions[name] as T | undefined\n  }\n\n  getFillStyleDefinition(element: Element | PathElement, opacity: Property) {\n    let def = this.getDefinition<PatternElement & GradientElement>()\n\n    if (!def) {\n      return null\n    }\n\n    // gradient\n    if (typeof def.createGradient === 'function' && 'getBoundingBox' in element) {\n      return def.createGradient(\n        this.document.ctx,\n        element,\n        opacity\n      )\n    }\n\n    // pattern\n    if (typeof def.createPattern === 'function') {\n      if (def.getHrefAttribute().hasValue()) {\n        const patternTransform = def.getAttribute('patternTransform')\n\n        def = def.getHrefAttribute().getDefinition()\n\n        if (def && patternTransform.hasValue()) {\n          def.getAttribute('patternTransform', true).setValue(patternTransform.value)\n        }\n      }\n\n      if (def) {\n        return def.createPattern(this.document.ctx, element, opacity)\n      }\n    }\n\n    return null\n  }\n\n  getTextBaseline() {\n    if (!this.hasValue()) {\n      return null\n    }\n\n    const key = this.getString()\n\n    return Property.textBaselineMapping[key] || null\n  }\n\n  addOpacity(opacity: Property) {\n    let value = this.getColor()\n    const len = value.length\n    let commas = 0\n\n    // Simulate old RGBColor version, which can't parse rgba.\n    for (let i = 0; i < len; i++) {\n      if (value[i] === ',') {\n        commas++\n      }\n\n      if (commas === 3) {\n        break\n      }\n    }\n\n    if (opacity.hasValue() && this.isString() && commas !== 3) {\n      const color = new RGBColor(value)\n\n      if (color.ok) {\n        color.alpha = opacity.getNumber()\n        value = color.toRGBA()\n      }\n    }\n\n    return new Property<string>(this.document, this.name, value)\n  }\n}\n","\nexport interface IViewPortSize {\n  width: number\n  height: number\n}\n\nexport type Axis = 'x' | 'y'\n\nexport class ViewPort {\n  static DEFAULT_VIEWPORT_WIDTH = 800\n  static DEFAULT_VIEWPORT_HEIGHT = 600\n\n  viewPorts: IViewPortSize[] = []\n\n  clear() {\n    this.viewPorts = []\n  }\n\n  setCurrent(width: number, height: number) {\n    this.viewPorts.push({\n      width,\n      height\n    })\n  }\n\n  removeCurrent() {\n    this.viewPorts.pop()\n  }\n\n  getRoot() {\n    const [root] = this.viewPorts\n\n    if (!root) {\n      return getDefault()\n    }\n\n    return root\n  }\n\n  getCurrent() {\n    const { viewPorts } = this\n    const current = viewPorts[viewPorts.length - 1]\n\n    if (!current) {\n      return getDefault()\n    }\n\n    return current\n  }\n\n  get width() {\n    return this.getCurrent().width\n  }\n\n  get height() {\n    return this.getCurrent().height\n  }\n\n  computeSize(d?: number|Axis) {\n    if (typeof d === 'number') {\n      return d\n    }\n\n    if (d === 'x') {\n      return this.width\n    }\n\n    if (d === 'y') {\n      return this.height\n    }\n\n    return Math.sqrt(\n      Math.pow(this.width, 2) + Math.pow(this.height, 2)\n    ) / Math.sqrt(2)\n  }\n}\n\nfunction getDefault() {\n  return {\n    width: ViewPort.DEFAULT_VIEWPORT_WIDTH,\n    height: ViewPort.DEFAULT_VIEWPORT_HEIGHT\n  }\n}\n","import { MatrixValue } from './types'\nimport { toNumbers } from './util'\n\nexport class Point {\n  static parse(point: string, defaultValue = 0) {\n    const [x = defaultValue, y = defaultValue] = toNumbers(point)\n\n    return new Point(x, y)\n  }\n\n  static parseScale(scale: string, defaultValue = 1) {\n    const [x = defaultValue, y = x] = toNumbers(scale)\n\n    return new Point(x, y)\n  }\n\n  static parsePath(path: string) {\n    const points = toNumbers(path)\n    const len = points.length\n    const pathPoints: Point[] = []\n\n    for (let i = 0; i < len; i += 2) {\n      pathPoints.push(new Point(points[i], points[i + 1]))\n    }\n\n    return pathPoints\n  }\n\n  constructor(\n    public x: number,\n    public y: number\n  ) {}\n\n  angleTo(point: Point) {\n    return Math.atan2(point.y - this.y, point.x - this.x)\n  }\n\n  applyTransform(transform: MatrixValue) {\n    const {\n      x,\n      y\n    } = this\n    const xp = x * transform[0] + y * transform[2] + transform[4]\n    const yp = x * transform[1] + y * transform[3] + transform[5]\n\n    this.x = xp\n    this.y = yp\n  }\n}\n","import { RenderingContext2D } from './types'\nimport { BoundingBox } from './BoundingBox'\nimport { Point } from './Point'\nimport { Screen } from './Screen'\nimport { Element } from './Document'\n\ninterface IEventTarget {\n  onClick?(): void\n  onMouseMove?(): void\n}\n\nexport interface IEvent {\n  type: string\n  x: number\n  y: number\n  run(eventTarget: IEventTarget): void\n}\n\nexport class Mouse {\n  private working = false\n  private events: IEvent[] = []\n  private eventElements: Element[] = []\n\n  constructor(\n    private readonly screen: Screen\n  ) {\n    this.onClick = this.onClick.bind(this)\n    this.onMouseMove = this.onMouseMove.bind(this)\n  }\n\n  isWorking() {\n    return this.working\n  }\n\n  start() {\n    if (this.working) {\n      return\n    }\n\n    const {\n      screen,\n      onClick,\n      onMouseMove\n    } = this\n    const canvas = screen.ctx.canvas as HTMLCanvasElement\n\n    canvas.onclick = onClick\n    canvas.onmousemove = onMouseMove\n    this.working = true\n  }\n\n  stop() {\n    if (!this.working) {\n      return\n    }\n\n    const canvas = this.screen.ctx.canvas as HTMLCanvasElement\n\n    this.working = false\n    canvas.onclick = null\n    canvas.onmousemove = null\n  }\n\n  hasEvents() {\n    return this.working && this.events.length > 0\n  }\n\n  runEvents() {\n    if (!this.working) {\n      return\n    }\n\n    const {\n      screen: document,\n      events,\n      eventElements\n    } = this\n    const { style } = document.ctx.canvas as HTMLCanvasElement\n    let element: Element | null | undefined\n\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n    if (style) {\n      style.cursor = ''\n    }\n\n    events.forEach(({ run }, i) => {\n      element = eventElements[i]\n\n      while (element) {\n        run(element as IEventTarget)\n        element = element.parent\n      }\n    })\n\n    // done running, clear\n    this.events = []\n    this.eventElements = []\n  }\n\n  checkPath(element: Element, ctx: RenderingContext2D | null) {\n    if (!this.working || !ctx) {\n      return\n    }\n\n    const {\n      events,\n      eventElements\n    } = this\n\n    events.forEach(({ x, y }, i) => {\n      // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n      if (!eventElements[i] && ctx.isPointInPath && ctx.isPointInPath(x, y)) {\n        eventElements[i] = element\n      }\n    })\n  }\n\n  checkBoundingBox(element: Element, boundingBox: BoundingBox | null) {\n    if (!this.working || !boundingBox) {\n      return\n    }\n\n    const {\n      events,\n      eventElements\n    } = this\n\n    events.forEach(({ x, y }, i) => {\n      if (!eventElements[i] && boundingBox.isPointInBox(x, y)) {\n        eventElements[i] = element\n      }\n    })\n  }\n\n  private mapXY(x: number, y: number) {\n    const {\n      window,\n      ctx\n    } = this.screen\n    const point = new Point(x, y)\n    let element = ctx.canvas as HTMLElement | null\n\n    while (element) {\n      point.x -= element.offsetLeft\n      point.y -= element.offsetTop\n      element = element.offsetParent as HTMLElement | null\n    }\n\n    if (window?.scrollX) {\n      point.x += window.scrollX\n    }\n\n    if (window?.scrollY) {\n      point.y += window.scrollY\n    }\n\n    return point\n  }\n\n  private onClick(event: MouseEvent) {\n    const {\n      x,\n      y\n    } = this.mapXY(\n      event.clientX,\n      event.clientY\n    )\n\n    this.events.push({\n      type: 'onclick',\n      x,\n      y,\n      run(eventTarget) {\n        if (eventTarget.onClick) {\n          eventTarget.onClick()\n        }\n      }\n    })\n  }\n\n  private onMouseMove(event: MouseEvent) {\n    const {\n      x,\n      y\n    } = this.mapXY(\n      event.clientX,\n      event.clientY\n    )\n\n    this.events.push({\n      type: 'onmousemove',\n      x,\n      y,\n      run(eventTarget) {\n        if (eventTarget.onMouseMove) {\n          eventTarget.onMouseMove()\n        }\n      }\n    })\n  }\n}\n","import { RenderingContext2D, Fetch } from \"./types\";\nimport { compressSpaces, toNumbers } from \"./util\";\nimport { Property } from \"./Property\";\nimport { ViewPort } from \"./ViewPort\";\nimport { Mouse } from \"./Mouse\";\nimport { Document, Element, AnimateElement } from \"./Document\";\n\nexport interface IScreenOptions {\n  /**\n   * Window object.\n   */\n  window?: Window | null;\n  /**\n   * WHATWG-compatible `fetch` function.\n   */\n  fetch?: Fetch;\n}\n\nexport interface IScreenStartOptions {\n  /**\n   * Whether enable the redraw.\n   */\n  enableRedraw?: boolean;\n  /**\n   * Ignore mouse events.\n   */\n  ignoreMouse?: boolean;\n  /**\n   * Ignore animations.\n   */\n  ignoreAnimation?: boolean;\n  /**\n   * Does not try to resize canvas.\n   */\n  ignoreDimensions?: boolean;\n  /**\n   * Does not clear canvas.\n   */\n  ignoreClear?: boolean;\n  /**\n   * Scales horizontally to width.\n   */\n  scaleWidth?: number;\n  /**\n   * Scales vertically to height.\n   */\n  scaleHeight?: number;\n  /**\n   * Draws at a x offset.\n   */\n  offsetX?: number;\n  /**\n   * Draws at a y offset.\n   */\n  offsetY?: number;\n  /**\n   * Will call the function on every frame, if it returns true, will redraw.\n   */\n  forceRedraw?(): boolean;\n}\n\nexport interface IScreenViewBoxConfig {\n  document: Document;\n  ctx: RenderingContext2D;\n  aspectRatio: string;\n  width: number;\n  desiredWidth: number;\n  height: number;\n  desiredHeight: number;\n  minX?: number;\n  minY?: number;\n  refX?: number;\n  refY?: number;\n  clip?: boolean;\n  clipX?: number;\n  clipY?: number;\n}\n\nconst defaultWindow = typeof window !== \"undefined\" ? window : null;\nconst defaultFetch =\n  typeof fetch !== \"undefined\"\n    ? fetch.bind(undefined) // `fetch` depends on context: `someObject.fetch(...)` will throw error.\n    : undefined;\n\nexport class Screen {\n  static readonly defaultWindow = defaultWindow;\n  static readonly defaultFetch = defaultFetch;\n  static FRAMERATE = 30;\n  static MAX_VIRTUAL_PIXELS = 30000;\n\n  readonly window: Window | null;\n  readonly fetch: Fetch;\n  readonly viewPort = new ViewPort();\n  readonly mouse = new Mouse(this);\n  readonly animations: AnimateElement[] = [];\n  private readyPromise: Promise<void> | undefined;\n  private resolveReady: (() => void) | undefined;\n  private waits: (() => boolean)[] = [];\n  private frameDuration = 0;\n  private isReadyLock = false;\n  private isFirstRender = true;\n  private intervalId: number | null = null;\n\n  constructor(\n    readonly ctx: RenderingContext2D,\n    { fetch = defaultFetch, window = defaultWindow }: IScreenOptions = {}\n  ) {\n    this.window = window;\n\n    if (!fetch) {\n      throw new Error(\n        `Can't find 'fetch' in 'globalThis', please provide it via options`\n      );\n    }\n\n    this.fetch = fetch;\n  }\n\n  wait(checker: () => boolean) {\n    this.waits.push(checker);\n  }\n\n  ready() {\n    // eslint-disable-next-line @typescript-eslint/no-misused-promises\n    if (!this.readyPromise) {\n      return Promise.resolve();\n    }\n\n    return this.readyPromise;\n  }\n\n  isReady() {\n    if (this.isReadyLock) {\n      return true;\n    }\n\n    const isReadyLock = this.waits.every((_) => _());\n\n    if (isReadyLock) {\n      this.waits = [];\n\n      if (this.resolveReady) {\n        this.resolveReady();\n      }\n    }\n\n    this.isReadyLock = isReadyLock;\n\n    return isReadyLock;\n  }\n\n  setDefaults(ctx: RenderingContext2D) {\n    // initial values and defaults\n    ctx.strokeStyle = \"rgba(0,0,0,0)\";\n    ctx.lineCap = \"butt\";\n    ctx.lineJoin = \"miter\";\n    ctx.miterLimit = 4;\n  }\n\n  setViewBox({\n    document,\n    ctx,\n    aspectRatio,\n    width,\n    desiredWidth,\n    height,\n    desiredHeight,\n    minX = 0,\n    minY = 0,\n    refX,\n    refY,\n    clip = false,\n    clipX = 0,\n    clipY = 0,\n  }: IScreenViewBoxConfig) {\n    // aspect ratio - http://www.w3.org/TR/SVG/coords.html#PreserveAspectRatioAttribute\n    const cleanAspectRatio = compressSpaces(aspectRatio).replace(\n      /^defer\\s/,\n      \"\"\n    ); // ignore defer\n    const [aspectRatioAlign, aspectRatioMeetOrSlice] =\n      cleanAspectRatio.split(\" \");\n    const align = aspectRatioAlign || \"xMidYMid\";\n    const meetOrSlice = aspectRatioMeetOrSlice || \"meet\";\n    // calculate scale\n    const scaleX = width / desiredWidth;\n    const scaleY = height / desiredHeight;\n    const scaleMin = Math.min(scaleX, scaleY);\n    const scaleMax = Math.max(scaleX, scaleY);\n    let finalDesiredWidth = desiredWidth;\n    let finalDesiredHeight = desiredHeight;\n\n    if (meetOrSlice === \"meet\") {\n      finalDesiredWidth *= scaleMin;\n      finalDesiredHeight *= scaleMin;\n    }\n\n    if (meetOrSlice === \"slice\") {\n      finalDesiredWidth *= scaleMax;\n      finalDesiredHeight *= scaleMax;\n    }\n\n    const refXProp = new Property(document, \"refX\", refX);\n    const refYProp = new Property(document, \"refY\", refY);\n    const hasRefs = refXProp.hasValue() && refYProp.hasValue();\n\n    if (hasRefs) {\n      ctx.translate(\n        -scaleMin * refXProp.getPixels(\"x\"),\n        -scaleMin * refYProp.getPixels(\"y\")\n      );\n    }\n\n    if (clip) {\n      const scaledClipX = scaleMin * clipX;\n      const scaledClipY = scaleMin * clipY;\n\n      ctx.beginPath();\n      ctx.moveTo(scaledClipX, scaledClipY);\n      ctx.lineTo(width, scaledClipY);\n      ctx.lineTo(width, height);\n      ctx.lineTo(scaledClipX, height);\n      ctx.closePath();\n      ctx.clip();\n    }\n\n    if (!hasRefs) {\n      const isMeetMinY = meetOrSlice === \"meet\" && scaleMin === scaleY;\n      const isSliceMaxY = meetOrSlice === \"slice\" && scaleMax === scaleY;\n      const isMeetMinX = meetOrSlice === \"meet\" && scaleMin === scaleX;\n      const isSliceMaxX = meetOrSlice === \"slice\" && scaleMax === scaleX;\n\n      if (align.startsWith(\"xMid\") && (isMeetMinY || isSliceMaxY)) {\n        ctx.translate(width / 2.0 - finalDesiredWidth / 2.0, 0);\n      }\n\n      if (align.endsWith(\"YMid\") && (isMeetMinX || isSliceMaxX)) {\n        ctx.translate(0, height / 2.0 - finalDesiredHeight / 2.0);\n      }\n\n      if (align.startsWith(\"xMax\") && (isMeetMinY || isSliceMaxY)) {\n        ctx.translate(width - finalDesiredWidth, 0);\n      }\n\n      if (align.endsWith(\"YMax\") && (isMeetMinX || isSliceMaxX)) {\n        ctx.translate(0, height - finalDesiredHeight);\n      }\n    }\n\n    // scale\n    switch (true) {\n      case align === \"none\":\n        ctx.scale(scaleX, scaleY);\n        break;\n\n      case meetOrSlice === \"meet\":\n        ctx.scale(scaleMin, scaleMin);\n        break;\n\n      case meetOrSlice === \"slice\":\n        ctx.scale(scaleMax, scaleMax);\n        break;\n    }\n\n    // translate\n    ctx.translate(-minX, -minY);\n  }\n\n  start(\n    element: Element,\n    {\n      enableRedraw = false,\n      ignoreMouse = false,\n      ignoreAnimation = false,\n      ignoreDimensions = false,\n      ignoreClear = false,\n      forceRedraw,\n      scaleWidth,\n      scaleHeight,\n      offsetX,\n      offsetY,\n    }: IScreenStartOptions = {}\n  ) {\n    const { mouse } = this;\n    const frameDuration = 1000 / Screen.FRAMERATE;\n\n    this.isReadyLock = false;\n    this.frameDuration = frameDuration;\n    this.readyPromise = new Promise((resolve) => {\n      this.resolveReady = resolve;\n    });\n\n    if (this.isReady()) {\n      this.render(\n        element,\n        ignoreDimensions,\n        ignoreClear,\n        scaleWidth,\n        scaleHeight,\n        offsetX,\n        offsetY\n      );\n    }\n\n    if (!enableRedraw) {\n      return;\n    }\n\n    let now = Date.now();\n    let then = now;\n    let delta = 0;\n    const tick = () => {\n      if (!this.intervalId) return;\n      now = Date.now();\n      delta = now - then;\n\n      if (delta >= frameDuration) {\n        then = now - (delta % frameDuration);\n\n        if (this.shouldUpdate(ignoreAnimation, forceRedraw)) {\n          this.render(\n            element,\n            ignoreDimensions,\n            ignoreClear,\n            scaleWidth,\n            scaleHeight,\n            offsetX,\n            offsetY\n          );\n          mouse.runEvents();\n        }\n      }\n\n      this.intervalId = requestAnimationFrame(tick);\n    };\n\n    if (!ignoreMouse) {\n      mouse.start();\n    }\n\n    this.intervalId = requestAnimationFrame(tick);\n  }\n\n  stop() {\n    if (this.intervalId) {\n      this.intervalId = null;\n    }\n\n    this.mouse.stop();\n  }\n\n  private shouldUpdate(\n    ignoreAnimation: boolean,\n    forceRedraw: (() => boolean) | undefined\n  ) {\n    // need update from animations?\n    if (!ignoreAnimation) {\n      const { frameDuration } = this;\n      const shouldUpdate = this.animations.reduce(\n        (shouldUpdate, animation) =>\n          animation.update(frameDuration) || shouldUpdate,\n        false\n      );\n\n      if (shouldUpdate) {\n        return true;\n      }\n    }\n\n    // need update from redraw?\n    if (typeof forceRedraw === \"function\" && forceRedraw()) {\n      return true;\n    }\n\n    if (!this.isReadyLock && this.isReady()) {\n      return true;\n    }\n\n    // need update from mouse events?\n    if (this.mouse.hasEvents()) {\n      return true;\n    }\n\n    return false;\n  }\n\n  private render(\n    element: Element,\n    ignoreDimensions: boolean,\n    ignoreClear: boolean,\n    scaleWidth: number | undefined,\n    scaleHeight: number | undefined,\n    offsetX: number | undefined,\n    offsetY: number | undefined\n  ) {\n    const { viewPort, ctx, isFirstRender } = this;\n    const canvas = ctx.canvas as HTMLCanvasElement;\n\n    viewPort.clear();\n\n    if (canvas.width && canvas.height) {\n      viewPort.setCurrent(canvas.width, canvas.height);\n    }\n\n    const widthStyle = element.getStyle(\"width\");\n    const heightStyle = element.getStyle(\"height\");\n\n    if (\n      !ignoreDimensions &&\n      (isFirstRender ||\n        (typeof scaleWidth !== \"number\" && typeof scaleHeight !== \"number\"))\n    ) {\n      // set canvas size\n      if (widthStyle.hasValue()) {\n        canvas.width = widthStyle.getPixels(\"x\");\n\n        // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n        if (canvas.style) {\n          canvas.style.width = `${canvas.width}px`;\n        }\n      }\n\n      if (heightStyle.hasValue()) {\n        canvas.height = heightStyle.getPixels(\"y\");\n\n        // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n        if (canvas.style) {\n          canvas.style.height = `${canvas.height}px`;\n        }\n      }\n    }\n\n    let cWidth = canvas.clientWidth || canvas.width;\n    let cHeight = canvas.clientHeight || canvas.height;\n\n    if (ignoreDimensions && widthStyle.hasValue() && heightStyle.hasValue()) {\n      cWidth = widthStyle.getPixels(\"x\");\n      cHeight = heightStyle.getPixels(\"y\");\n    }\n\n    viewPort.setCurrent(cWidth, cHeight);\n\n    if (typeof offsetX === \"number\") {\n      element.getAttribute(\"x\", true).setValue(offsetX);\n    }\n\n    if (typeof offsetY === \"number\") {\n      element.getAttribute(\"y\", true).setValue(offsetY);\n    }\n\n    if (typeof scaleWidth === \"number\" || typeof scaleHeight === \"number\") {\n      const viewBox = toNumbers(element.getAttribute(\"viewBox\").getString());\n      let xRatio = 0;\n      let yRatio = 0;\n\n      if (typeof scaleWidth === \"number\") {\n        const widthStyle = element.getStyle(\"width\");\n\n        if (widthStyle.hasValue()) {\n          xRatio = widthStyle.getPixels(\"x\") / scaleWidth;\n        } else if (viewBox[2] && !isNaN(viewBox[2])) {\n          xRatio = viewBox[2] / scaleWidth;\n        }\n      }\n\n      if (typeof scaleHeight === \"number\") {\n        const heightStyle = element.getStyle(\"height\");\n\n        if (heightStyle.hasValue()) {\n          yRatio = heightStyle.getPixels(\"y\") / scaleHeight;\n        } else if (viewBox[3] && !isNaN(viewBox[3])) {\n          yRatio = viewBox[3] / scaleHeight;\n        }\n      }\n\n      if (!xRatio) {\n        xRatio = yRatio;\n      }\n\n      if (!yRatio) {\n        yRatio = xRatio;\n      }\n\n      element.getAttribute(\"width\", true).setValue(scaleWidth);\n      element.getAttribute(\"height\", true).setValue(scaleHeight);\n\n      const transformStyle = element.getStyle(\"transform\", true, true);\n\n      transformStyle.setValue(\n        `${transformStyle.getString()} scale(${1.0 / xRatio}, ${1.0 / yRatio})`\n      );\n    }\n\n    // clear and render\n    if (!ignoreClear) {\n      ctx.clearRect(0, 0, cWidth, cHeight);\n    }\n\n    element.render(ctx);\n\n    if (isFirstRender) {\n      this.isFirstRender = false;\n    }\n  }\n}\n","import { Fetch } from './types'\nimport { Screen } from './Screen'\n\ntype DOMParserConstructor = typeof DOMParser\n\nexport interface IParserOptions {\n  /**\n   * WHATWG-compatible `fetch` function.\n   */\n  fetch?: Fetch\n  /**\n   * XML/HTML parser from string into DOM Document.\n   */\n  DOMParser?: DOMParserConstructor\n}\n\nconst { defaultFetch } = Screen\nconst DefaultDOMParser = typeof DOMParser !== 'undefined'\n  ? DOMParser\n  : undefined\n\nexport class Parser {\n  private readonly fetch: Fetch\n  private readonly DOMParser: DOMParserConstructor\n\n  constructor({\n    fetch = defaultFetch,\n    DOMParser = DefaultDOMParser\n  }: IParserOptions = {}) {\n    if (!fetch) {\n      throw new Error(`Can't find 'fetch' in 'globalThis', please provide it via options`)\n    }\n\n    if (!DOMParser) {\n      throw new Error(`Can't find 'DOMParser' in 'globalThis', please provide it via options`)\n    }\n\n    this.fetch = fetch\n    this.DOMParser = DOMParser\n  }\n\n  async parse(resource: string) {\n    if (resource.startsWith('<')) {\n      return this.parseFromString(resource)\n    }\n\n    return this.load(resource)\n  }\n\n  parseFromString(xml: string) {\n    const parser = new this.DOMParser()\n\n    try {\n      return this.checkDocument(\n        parser.parseFromString(xml, 'image/svg+xml')\n      )\n    } catch (err) {\n      return this.checkDocument(\n        parser.parseFromString(xml, 'text/xml')\n      )\n    }\n  }\n\n  private checkDocument(document: Document) {\n    const parserError = document.getElementsByTagName('parsererror')[0]\n\n    if (parserError) {\n      throw new Error(parserError.textContent || 'Unknown parse error')\n    }\n\n    return document\n  }\n\n  async load(url: string) {\n    const response = await this.fetch(url)\n    const xml = await response.text()\n\n    return this.parseFromString(xml)\n  }\n}\n","import { RenderingContext2D } from '../types'\nimport { Document } from '../Document'\nimport { Point } from '../Point'\n\nexport class Translate {\n  type = 'translate'\n  private readonly point: Point\n\n  constructor(\n    _: Document,\n    point: string\n  ) {\n    this.point = Point.parse(point)\n  }\n\n  apply(ctx: RenderingContext2D) {\n    const {\n      x,\n      y\n    } = this.point\n\n    ctx.translate(\n      x || 0.0,\n      y || 0.0\n    )\n  }\n\n  unapply(ctx: RenderingContext2D) {\n    const {\n      x,\n      y\n    } = this.point\n\n    ctx.translate(\n      -1.0 * x || 0.0,\n      -1.0 * y || 0.0\n    )\n  }\n\n  applyToPoint(point: Point) {\n    const {\n      x,\n      y\n    } = this.point\n\n    point.applyTransform([\n      1,\n      0,\n      0,\n      1,\n      x || 0.0,\n      y || 0.0\n    ])\n  }\n}\n","import { RenderingContext2D } from '../types'\nimport { toNumbers } from '../util'\nimport { Document } from '../Document'\nimport { Property } from '../Property'\nimport { Point } from '../Point'\n\nexport class Rotate {\n  type = 'rotate'\n  private readonly angle: Property\n  private readonly originX: Property\n  private readonly originY: Property\n  private readonly cx: number\n  private readonly cy: number\n\n  constructor(\n    document: Document,\n    rotate: string,\n    transformOrigin: readonly [Property<string>, Property<string>]\n  ) {\n    const numbers = toNumbers(rotate)\n\n    this.angle = new Property(document, 'angle', numbers[0])\n    this.originX = transformOrigin[0]\n    this.originY = transformOrigin[1]\n    this.cx = numbers[1] || 0\n    this.cy = numbers[2] || 0\n  }\n\n  apply(ctx: RenderingContext2D) {\n    const {\n      cx,\n      cy,\n      originX,\n      originY,\n      angle\n    } = this\n    const tx = cx + originX.getPixels('x')\n    const ty = cy + originY.getPixels('y')\n\n    ctx.translate(tx, ty)\n    ctx.rotate(angle.getRadians())\n    ctx.translate(-tx, -ty)\n  }\n\n  unapply(ctx: RenderingContext2D) {\n    const {\n      cx,\n      cy,\n      originX,\n      originY,\n      angle\n    } = this\n    const tx = cx + originX.getPixels('x')\n    const ty = cy + originY.getPixels('y')\n\n    ctx.translate(tx, ty)\n    ctx.rotate(-1.0 * angle.getRadians())\n    ctx.translate(-tx, -ty)\n  }\n\n  applyToPoint(point: Point) {\n    const {\n      cx,\n      cy,\n      angle\n    } = this\n    const rad = angle.getRadians()\n\n    point.applyTransform([\n      1,\n      0,\n      0,\n      1,\n      cx || 0.0, // this.p.x\n      cy || 0.0 // this.p.y\n    ])\n    point.applyTransform([\n      Math.cos(rad),\n      Math.sin(rad),\n      -Math.sin(rad),\n      Math.cos(rad),\n      0,\n      0\n    ])\n    point.applyTransform([\n      1,\n      0,\n      0,\n      1,\n      -cx || 0.0, // -this.p.x\n      -cy || 0.0 // -this.p.y\n    ])\n  }\n}\n","import { RenderingContext2D } from '../types'\nimport { PSEUDO_ZERO } from '../util'\nimport { Document } from '../Document'\nimport { Point } from '../Point'\nimport { Property } from '../Property'\n\nexport class Scale {\n  type = 'scale'\n  private readonly scale: Point\n  private readonly originX: Property\n  private readonly originY: Property\n\n  constructor(\n    _: Document,\n    scale: string,\n    transformOrigin: readonly [Property<string>, Property<string>]\n  ) {\n    const scaleSize = Point.parseScale(scale)\n\n    // Workaround for node-canvas\n    if (scaleSize.x === 0\n      || scaleSize.y === 0\n    ) {\n      scaleSize.x = PSEUDO_ZERO\n      scaleSize.y = PSEUDO_ZERO\n    }\n\n    this.scale = scaleSize\n    this.originX = transformOrigin[0]\n    this.originY = transformOrigin[1]\n  }\n\n  apply(ctx: RenderingContext2D) {\n    const {\n      scale: {\n        x,\n        y\n      },\n      originX,\n      originY\n    } = this\n    const tx = originX.getPixels('x')\n    const ty = originY.getPixels('y')\n\n    ctx.translate(tx, ty)\n    ctx.scale(x, y || x)\n    ctx.translate(-tx, -ty)\n  }\n\n  unapply(ctx: RenderingContext2D) {\n    const {\n      scale: {\n        x,\n        y\n      },\n      originX,\n      originY\n    } = this\n    const tx = originX.getPixels('x')\n    const ty = originY.getPixels('y')\n\n    ctx.translate(tx, ty)\n    ctx.scale(1.0 / x, 1.0 / y || x)\n    ctx.translate(-tx, -ty)\n  }\n\n  applyToPoint(point: Point) {\n    const {\n      x,\n      y\n    } = this.scale\n\n    point.applyTransform([\n      x || 0.0,\n      0,\n      0,\n      y || 0.0,\n      0,\n      0\n    ])\n  }\n}\n","import { MatrixValue, RenderingContext2D } from '../types'\nimport { toMatrixValue } from '../util'\nimport { Document } from '../Document'\nimport { Point } from '../Point'\nimport { Property } from '../Property'\nimport { ITransform } from './types'\n\nexport class Matrix implements ITransform {\n  type = 'matrix'\n  protected matrix: MatrixValue\n  private readonly originX: Property\n  private readonly originY: Property\n\n  constructor(\n    _: Document,\n    matrix: string,\n    transformOrigin: readonly [Property<string>, Property<string>]\n  ) {\n    this.matrix = toMatrixValue(matrix)\n    this.originX = transformOrigin[0]\n    this.originY = transformOrigin[1]\n  }\n\n  apply(ctx: RenderingContext2D) {\n    const {\n      originX,\n      originY,\n      matrix\n    } = this\n    const tx = originX.getPixels('x')\n    const ty = originY.getPixels('y')\n\n    ctx.translate(tx, ty)\n    ctx.transform(\n      matrix[0],\n      matrix[1],\n      matrix[2],\n      matrix[3],\n      matrix[4],\n      matrix[5]\n    )\n    ctx.translate(-tx, -ty)\n  }\n\n  unapply(ctx: RenderingContext2D) {\n    const {\n      originX,\n      originY,\n      matrix\n    } = this\n    const a = matrix[0]\n    const b = matrix[2]\n    const c = matrix[4]\n    const d = matrix[1]\n    const e = matrix[3]\n    const f = matrix[5]\n    const g = 0.0\n    const h = 0.0\n    const i = 1.0\n    const det = 1 / (a * (e * i - f * h) - b * (d * i - f * g) + c * (d * h - e * g))\n    const tx = originX.getPixels('x')\n    const ty = originY.getPixels('y')\n\n    ctx.translate(tx, ty)\n    ctx.transform(\n      det * (e * i - f * h),\n      det * (f * g - d * i),\n      det * (c * h - b * i),\n      det * (a * i - c * g),\n      det * (b * f - c * e),\n      det * (c * d - a * f)\n    )\n    ctx.translate(-tx, -ty)\n  }\n\n  applyToPoint(point: Point) {\n    point.applyTransform(this.matrix)\n  }\n}\n","import { Document } from '../Document'\nimport { Property } from '../Property'\nimport { Matrix } from './Matrix'\n\nexport class Skew extends Matrix {\n  override type = 'skew'\n  protected readonly angle: Property\n\n  constructor(\n    document: Document,\n    skew: string,\n    transformOrigin: readonly [Property<string>, Property<string>]\n  ) {\n    super(document, skew, transformOrigin)\n\n    this.angle = new Property(document, 'angle', skew)\n  }\n}\n","import { Document } from '../Document'\nimport { Property } from '../Property'\nimport { Skew } from './Skew'\n\nexport class SkewX extends Skew {\n  override type = 'skewX'\n\n  constructor(\n    document: Document,\n    skew: string,\n    transformOrigin: readonly [Property<string>, Property<string>]\n  ) {\n    super(document, skew, transformOrigin)\n\n    this.matrix = [\n      1,\n      0,\n      Math.tan(this.angle.getRadians()),\n      1,\n      0,\n      0\n    ]\n  }\n}\n","import { Document } from '../Document'\nimport { Property } from '../Property'\nimport { Skew } from './Skew'\n\nexport class SkewY extends Skew {\n  override type = 'skewY'\n\n  constructor(\n    document: Document,\n    skew: string,\n    transformOrigin: readonly [Property<string>, Property<string>]\n  ) {\n    super(document, skew, transformOrigin)\n\n    this.matrix = [\n      1,\n      Math.tan(this.angle.getRadians()),\n      0,\n      1,\n      0,\n      0\n    ]\n  }\n}\n","import { RenderingContext2D } from '../types'\nimport { compressSpaces } from '../util'\nimport { Property } from '../Property'\nimport { Point } from '../Point'\nimport { Document, Element } from '../Document'\nimport { ITransform } from './types'\nimport { Translate } from './Translate'\nimport { Rotate } from './Rotate'\nimport { Scale } from './Scale'\nimport { Matrix } from './Matrix'\nimport { SkewX } from './SkewX'\nimport { SkewY } from './SkewY'\n\nfunction parseTransforms(transform: string) {\n  return compressSpaces(transform)\n    .trim()\n    .replace(/\\)([a-zA-Z])/g, ') $1')\n    .replace(/\\)(\\s?,\\s?)/g, ') ')\n    .split(/\\s(?=[a-z])/)\n}\n\nfunction parseTransform(transform: string) {\n  const [type = '', value = ''] = transform.split('(')\n\n  return [type.trim(), value.trim().replace(')', '')] as const\n}\n\ninterface ITransformConstructor {\n  prototype: ITransform\n  new (\n    document: Document,\n    value: string,\n    transformOrigin: readonly [Property<string>, Property<string>]\n  ): ITransform\n}\n\nexport class Transform {\n  static fromElement(document: Document, element: Element) {\n    const transformStyle = element.getStyle('transform', false, true)\n\n    if (transformStyle.hasValue()) {\n      const [transformOriginXProperty, transformOriginYProperty = transformOriginXProperty] = element.getStyle('transform-origin', false, true).split()\n\n      if (transformOriginXProperty && transformOriginYProperty) {\n        const transformOrigin = [transformOriginXProperty, transformOriginYProperty] as const\n\n        return new Transform(\n          document,\n          transformStyle.getString(),\n          transformOrigin\n        )\n      }\n    }\n\n    return null\n  }\n\n  static transformTypes: Record<string, ITransformConstructor> = {\n    translate: Translate,\n    rotate: Rotate,\n    scale: Scale,\n    matrix: Matrix,\n    skewX: SkewX,\n    skewY: SkewY\n  }\n\n  private readonly transforms: ITransform[] = []\n\n  constructor(\n    private readonly document: Document,\n    transform: string,\n    transformOrigin: readonly [Property<string>, Property<string>]\n  ) {\n    const data = parseTransforms(transform)\n\n    data.forEach((transform) => {\n      if (transform === 'none') {\n        return\n      }\n\n      const [type, value] = parseTransform(transform)\n      const TransformType = Transform.transformTypes[type]\n\n      if (TransformType) {\n        this.transforms.push(new TransformType(this.document, value, transformOrigin))\n      }\n    })\n  }\n\n  apply(ctx: RenderingContext2D) {\n    this.transforms.forEach(transform => transform.apply(ctx))\n  }\n\n  unapply(ctx: RenderingContext2D) {\n    this.transforms.forEach(transform => transform.unapply(ctx))\n  }\n\n  // TODO: applyToPoint unused ... remove?\n  applyToPoint(point: Point) {\n    this.transforms.forEach(transform => transform.applyToPoint(point))\n  }\n}\n","import { RenderingContext2D } from '../types'\nimport { normalizeAttributeName } from '../util'\nimport { Property } from '../Property'\nimport { Transform } from '../Transform'\nimport { Document } from './Document'\nimport { ClipPathElement } from './ClipPathElement'\nimport { MaskElement } from './MaskElement'\nimport { FilterElement } from './FilterElement'\n\nexport abstract class Element {\n  static readonly ignoreChildTypes = ['title']\n\n  readonly type: string = ''\n  readonly attributes: Record<string, Property> = {}\n  readonly styles: Record<string, Property> = {}\n  readonly stylesSpecificity: Record<string, string> = {}\n  animationFrozen = false\n  animationFrozenValue = ''\n  parent: Element | null = null\n  children: Element[] = []\n\n  constructor(\n    protected readonly document: Document,\n    protected readonly node?: HTMLElement,\n    protected readonly captureTextNodes = false\n  ) {\n    if (!node || node.nodeType !== 1) { // ELEMENT_NODE\n      return\n    }\n\n    // add attributes\n    Array.from(node.attributes).forEach((attribute) => {\n      const nodeName = normalizeAttributeName(attribute.nodeName)\n\n      this.attributes[nodeName] = new Property(document, nodeName, attribute.value)\n    })\n\n    this.addStylesFromStyleDefinition()\n\n    // add inline styles\n    if (this.getAttribute('style').hasValue()) {\n      const styles = this.getAttribute('style')\n        .getString()\n        .split(';')\n        .map(_ => _.trim())\n\n      styles.forEach((style) => {\n        if (!style) {\n          return\n        }\n\n        const [name, value] = style.split(':').map(_ => _.trim())\n\n        if (name) {\n          this.styles[name] = new Property(document, name, value)\n        }\n      })\n    }\n\n    const { definitions } = document\n    const id = this.getAttribute('id')\n\n    // add id\n    if (id.hasValue()) {\n      if (!definitions[id.getString()]) {\n        definitions[id.getString()] = this\n      }\n    }\n\n    Array.from(node.childNodes).forEach((childNode: HTMLElement) => {\n      if (childNode.nodeType === 1) {\n        this.addChild(childNode) // ELEMENT_NODE\n      } else\n      if (captureTextNodes && (\n        childNode.nodeType === 3\n        || childNode.nodeType === 4\n      )) {\n        const textNode = document.createTextNode(childNode)\n\n        if (textNode.getText().length > 0) {\n          this.addChild(textNode) // TEXT_NODE\n        }\n      }\n    })\n  }\n\n  getAttribute(name: string, createIfNotExists = false): Property {\n    const attr = this.attributes[name]\n\n    if (!attr && createIfNotExists) {\n      const attr = new Property(this.document, name, '')\n\n      this.attributes[name] = attr\n\n      return attr\n    }\n\n    return attr || Property.empty(this.document)\n  }\n\n  getHrefAttribute(): Property {\n    let href: Property | undefined\n\n    for (const key in this.attributes) {\n      if (key === 'href' || key.endsWith(':href')) {\n        href = this.attributes[key]\n        break\n      }\n    }\n\n    return href || Property.empty(this.document)\n  }\n\n  getStyle(name: string, createIfNotExists = false, skipAncestors = false): Property {\n    const style = this.styles[name]\n\n    if (style) {\n      return style\n    }\n\n    const attr = this.getAttribute(name)\n\n    if (attr.hasValue()) {\n      this.styles[name] = attr // move up to me to cache\n      return attr\n    }\n\n    if (!skipAncestors) {\n      const { parent } = this\n\n      if (parent) {\n        const parentStyle = parent.getStyle(name)\n\n        if (parentStyle.hasValue()) {\n          return parentStyle\n        }\n      }\n    }\n\n    if (createIfNotExists) {\n      const style = new Property(this.document, name, '')\n\n      this.styles[name] = style\n\n      return style\n    }\n\n    return Property.empty(this.document)\n  }\n\n  render(ctx: RenderingContext2D) {\n    // don't render display=none\n    // don't render visibility=hidden\n    if (this.getStyle('display').getString() === 'none'\n      || this.getStyle('visibility').getString() === 'hidden'\n    ) {\n      return\n    }\n\n    ctx.save()\n\n    if (this.getStyle('mask').hasValue()) { // mask\n      const mask = this.getStyle('mask').getDefinition<MaskElement>()\n\n      if (mask) {\n        this.applyEffects(ctx)\n        mask.apply(ctx, this)\n      }\n    } else\n    if (this.getStyle('filter').getValue('none') !== 'none') { // filter\n      const filter = this.getStyle('filter').getDefinition<FilterElement>()\n\n      if (filter) {\n        this.applyEffects(ctx)\n        filter.apply(ctx, this)\n      }\n    } else {\n      this.setContext(ctx)\n      this.renderChildren(ctx)\n      this.clearContext(ctx)\n    }\n\n    ctx.restore()\n  }\n\n  setContext(_: RenderingContext2D) {\n    // NO RENDER\n  }\n\n  protected applyEffects(ctx: RenderingContext2D) {\n    // transform\n    const transform = Transform.fromElement(this.document, this)\n\n    if (transform) {\n      transform.apply(ctx)\n    }\n\n    // clip\n    const clipPathStyleProp = this.getStyle('clip-path', false, true)\n\n    if (clipPathStyleProp.hasValue()) {\n      const clip = clipPathStyleProp.getDefinition<ClipPathElement>()\n\n      if (clip) {\n        clip.apply(ctx)\n      }\n    }\n  }\n\n  clearContext(_: RenderingContext2D) {\n    // NO RENDER\n  }\n\n  renderChildren(ctx: RenderingContext2D) {\n    this.children.forEach((child) => {\n      child.render(ctx)\n    })\n  }\n\n  protected addChild(childNode: Element|HTMLElement) {\n    const child = childNode instanceof Element\n      ? childNode\n      : this.document.createElement(childNode)\n\n    child.parent = this\n\n    if (!Element.ignoreChildTypes.includes(child.type)) {\n      this.children.push(child)\n    }\n  }\n\n  protected matchesSelector(selector: string) {\n    const { node } = this\n\n    if (typeof node.matches === 'function') {\n      return node.matches(selector)\n    }\n\n    const styleClasses = node.getAttribute?.('class')\n\n    if (!styleClasses || styleClasses === '') {\n      return false\n    }\n\n    return styleClasses.split(' ').some(styleClass => `.${styleClass}` === selector)\n  }\n\n  addStylesFromStyleDefinition() {\n    const {\n      styles,\n      stylesSpecificity\n    } = this.document\n    let styleProp: Property | undefined\n\n    for (const selector in styles) {\n      if (!selector.startsWith('@') && this.matchesSelector(selector)) {\n        const style = styles[selector]\n        const specificity = stylesSpecificity[selector]\n\n        if (style) {\n          for (const name in style) {\n            let existingSpecificity = this.stylesSpecificity[name]\n\n            if (typeof existingSpecificity === 'undefined') {\n              existingSpecificity = '000'\n            }\n\n            if (specificity && specificity >= existingSpecificity) {\n              styleProp = style[name]\n\n              if (styleProp) {\n                this.styles[name] = styleProp\n              }\n\n              this.stylesSpecificity[name] = specificity\n            }\n          }\n        }\n      }\n    }\n  }\n\n  protected removeStyles(element: Element, ignoreStyles: string[]) {\n    const toRestore = ignoreStyles.reduce<[string, string][]>((toRestore, name) => {\n      const styleProp = element.getStyle(name)\n\n      if (!styleProp.hasValue()) {\n        return toRestore\n      }\n\n      const value = styleProp.getString()\n\n      styleProp.setValue('')\n\n      return [...toRestore, [name, value]]\n    }, [])\n\n    return toRestore\n  }\n\n  protected restoreStyles(element: Element, styles: [string, string][]) {\n    styles.forEach(([name, value]) => {\n      element.getStyle(name, true).setValue(value)\n    })\n  }\n\n  isFirstChild() {\n    return this.parent?.children.indexOf(this) === 0\n  }\n}\n","import { Document } from './Document'\nimport { Element } from './Element'\n\nexport class UnknownElement extends Element {\n  constructor(\n    document: Document,\n    node: HTMLElement,\n    captureTextNodes?: boolean\n  ) {\n    super(document, node, captureTextNodes)\n\n    if (process.env.NODE_ENV !== 'production') {\n      console.warn(`Element ${node.nodeName} not yet implemented.`)\n    }\n  }\n}\n","import { compressSpaces } from './util'\n\nfunction wrapFontFamily(fontFamily: string) {\n  const trimmed = fontFamily.trim()\n\n  return /^('|\")/.test(trimmed)\n    ? trimmed\n    : `\"${trimmed}\"`\n}\n\nfunction prepareFontFamily(fontFamily: string) {\n  return typeof process === 'undefined'\n    ? fontFamily\n    : fontFamily\n      .trim()\n      .split(',')\n      .map(wrapFontFamily)\n      .join(',')\n}\n\n/**\n * https://developer.mozilla.org/en-US/docs/Web/CSS/font-style\n * @param fontStyle\n * @returns CSS font style.\n */\nfunction prepareFontStyle(fontStyle: string) {\n  if (!fontStyle) {\n    return ''\n  }\n\n  const targetFontStyle = fontStyle.trim().toLowerCase()\n\n  switch (targetFontStyle) {\n    case 'normal':\n    case 'italic':\n    case 'oblique':\n    case 'inherit':\n    case 'initial':\n    case 'unset':\n      return targetFontStyle\n\n    default:\n\n      if (/^oblique\\s+(-|)\\d+deg$/.test(targetFontStyle)) {\n        return targetFontStyle\n      }\n\n      return ''\n  }\n}\n\n/**\n * https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight\n * @param fontWeight\n * @returns CSS font weight.\n */\nfunction prepareFontWeight(fontWeight: string) {\n  if (!fontWeight) {\n    return ''\n  }\n\n  const targetFontWeight = fontWeight.trim().toLowerCase()\n\n  switch (targetFontWeight) {\n    case 'normal':\n    case 'bold':\n    case 'lighter':\n    case 'bolder':\n    case 'inherit':\n    case 'initial':\n    case 'unset':\n      return targetFontWeight\n\n    default:\n\n      if (/^[\\d.]+$/.test(targetFontWeight)) {\n        return targetFontWeight\n      }\n\n      return ''\n  }\n}\n\nexport class Font {\n  static parse(\n    font = '',\n    inherit?: string | Font\n  ) {\n    let fontStyle = ''\n    let fontVariant = ''\n    let fontWeight = ''\n    let fontSize = ''\n    let fontFamily = ''\n    const parts = compressSpaces(font).trim().split(' ')\n    const set = {\n      fontSize: false,\n      fontStyle: false,\n      fontWeight: false,\n      fontVariant: false\n    }\n\n    parts.forEach((part) => {\n      switch (true) {\n        case !set.fontStyle && Font.styles.includes(part):\n\n          if (part !== 'inherit') {\n            fontStyle = part\n          }\n\n          set.fontStyle = true\n          break\n\n        case !set.fontVariant && Font.variants.includes(part):\n\n          if (part !== 'inherit') {\n            fontVariant = part\n          }\n\n          set.fontStyle = true\n          set.fontVariant = true\n          break\n\n        case !set.fontWeight && Font.weights.includes(part):\n\n          if (part !== 'inherit') {\n            fontWeight = part\n          }\n\n          set.fontStyle = true\n          set.fontVariant = true\n          set.fontWeight = true\n          break\n\n        case !set.fontSize:\n\n          if (part !== 'inherit') {\n            fontSize = part.split('/')[0] || ''\n          }\n\n          set.fontStyle = true\n          set.fontVariant = true\n          set.fontWeight = true\n          set.fontSize = true\n          break\n\n        default:\n\n          if (part !== 'inherit') {\n            fontFamily += part\n          }\n      }\n    })\n\n    return new Font(\n      fontStyle,\n      fontVariant,\n      fontWeight,\n      fontSize,\n      fontFamily,\n      inherit\n    )\n  }\n\n  static readonly styles = 'normal|italic|oblique|inherit'\n  static readonly variants = 'normal|small-caps|inherit'\n  static readonly weights = 'normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900|inherit'\n\n  readonly fontFamily: string\n  readonly fontSize: string\n  readonly fontStyle: string\n  readonly fontWeight: string\n  readonly fontVariant: string\n\n  constructor(\n    fontStyle: string,\n    fontVariant: string,\n    fontWeight: string,\n    fontSize: string,\n    fontFamily: string,\n    inherit?: string | Font\n  ) {\n    const inheritFont = inherit\n      ? typeof inherit === 'string'\n        ? Font.parse(inherit)\n        : inherit\n      : {} as Font\n\n    this.fontFamily = fontFamily || inheritFont.fontFamily\n    this.fontSize = fontSize || inheritFont.fontSize\n    this.fontStyle = fontStyle || inheritFont.fontStyle\n    this.fontWeight = fontWeight || inheritFont.fontWeight\n    this.fontVariant = fontVariant || inheritFont.fontVariant\n  }\n\n  toString() {\n    return [\n      prepareFontStyle(this.fontStyle),\n      this.fontVariant,\n      prepareFontWeight(this.fontWeight),\n      this.fontSize,\n      // Wrap fontFamily only on nodejs and only for canvas.ctx\n      prepareFontFamily(this.fontFamily)\n    ].join(' ').trim()\n  }\n}\n","\nexport class BoundingBox {\n  constructor(\n    public x1 = Number.NaN,\n    public y1 = Number.NaN,\n    public x2 = Number.NaN,\n    public y2 = Number.NaN\n  ) {\n    this.addPoint(x1, y1)\n    this.addPoint(x2, y2)\n  }\n\n  get x() {\n    return this.x1\n  }\n\n  get y() {\n    return this.y1\n  }\n\n  get width() {\n    return this.x2 - this.x1\n  }\n\n  get height() {\n    return this.y2 - this.y1\n  }\n\n  addPoint(x: number | undefined, y: number | undefined) {\n    if (typeof x !== 'undefined') {\n      if (isNaN(this.x1) || isNaN(this.x2)) {\n        this.x1 = x\n        this.x2 = x\n      }\n\n      if (x < this.x1) {\n        this.x1 = x\n      }\n\n      if (x > this.x2) {\n        this.x2 = x\n      }\n    }\n\n    if (typeof y !== 'undefined') {\n      if (isNaN(this.y1) || isNaN(this.y2)) {\n        this.y1 = y\n        this.y2 = y\n      }\n\n      if (y < this.y1) {\n        this.y1 = y\n      }\n\n      if (y > this.y2) {\n        this.y2 = y\n      }\n    }\n  }\n\n  addX(x: number) {\n    this.addPoint(x, 0)\n  }\n\n  addY(y: number) {\n    this.addPoint(0, y)\n  }\n\n  addBoundingBox(boundingBox: BoundingBox | null) {\n    if (!boundingBox) {\n      return\n    }\n\n    const {\n      x1,\n      y1,\n      x2,\n      y2\n    } = boundingBox\n\n    this.addPoint(x1, y1)\n    this.addPoint(x2, y2)\n  }\n\n  private sumCubic(\n    t: number,\n    p0: number,\n    p1: number,\n    p2: number,\n    p3: number\n  ) {\n    return (\n      Math.pow(1 - t, 3) * p0\n      + 3 * Math.pow(1 - t, 2) * t * p1\n      + 3 * (1 - t) * Math.pow(t, 2) * p2\n      + Math.pow(t, 3) * p3\n    )\n  }\n\n  private bezierCurveAdd(\n    forX: boolean,\n    p0: number,\n    p1: number,\n    p2: number,\n    p3: number\n  ) {\n    const b = 6 * p0 - 12 * p1 + 6 * p2\n    const a = -3 * p0 + 9 * p1 - 9 * p2 + 3 * p3\n    const c = 3 * p1 - 3 * p0\n\n    if (a === 0) {\n      if (b === 0) {\n        return\n      }\n\n      const t = -c / b\n\n      if (0 < t && t < 1) {\n        if (forX) {\n          this.addX(this.sumCubic(t, p0, p1, p2, p3))\n        } else {\n          this.addY(this.sumCubic(t, p0, p1, p2, p3))\n        }\n      }\n\n      return\n    }\n\n    const b2ac = Math.pow(b, 2) - 4 * c * a\n\n    if (b2ac < 0) {\n      return\n    }\n\n    const t1 = (-b + Math.sqrt(b2ac)) / (2 * a)\n\n    if (0 < t1 && t1 < 1) {\n      if (forX) {\n        this.addX(\n          this.sumCubic(t1, p0, p1, p2, p3)\n        )\n      } else {\n        this.addY(\n          this.sumCubic(t1, p0, p1, p2, p3)\n        )\n      }\n    }\n\n    const t2 = (-b - Math.sqrt(b2ac)) / (2 * a)\n\n    if (0 < t2 && t2 < 1) {\n      if (forX) {\n        this.addX(this.sumCubic(t2, p0, p1, p2, p3))\n      } else {\n        this.addY(this.sumCubic(t2, p0, p1, p2, p3))\n      }\n    }\n  }\n\n  // from http://blog.hackers-cafe.net/2009/06/how-to-calculate-bezier-curves-bounding.html\n  addBezierCurve(\n    p0x: number,\n    p0y: number,\n    p1x: number,\n    p1y: number,\n    p2x: number,\n    p2y: number,\n    p3x: number,\n    p3y: number\n  ) {\n    this.addPoint(p0x, p0y)\n    this.addPoint(p3x, p3y)\n    this.bezierCurveAdd(true, p0x, p1x, p2x, p3x)\n    this.bezierCurveAdd(false, p0y, p1y, p2y, p3y)\n  }\n\n  addQuadraticCurve(\n    p0x: number,\n    p0y: number,\n    p1x: number,\n    p1y: number,\n    p2x: number,\n    p2y: number\n  ) {\n    const cp1x = p0x + 2 / 3 * (p1x - p0x) // CP1 = QP0 + 2/3 *(QP1-QP0)\n    const cp1y = p0y + 2 / 3 * (p1y - p0y) // CP1 = QP0 + 2/3 *(QP1-QP0)\n    const cp2x = cp1x + 1 / 3 * (p2x - p0x) // CP2 = CP1 + 1/3 *(QP2-QP0)\n    const cp2y = cp1y + 1 / 3 * (p2y - p0y) // CP2 = CP1 + 1/3 *(QP2-QP0)\n\n    this.addBezierCurve(p0x, p0y, cp1x, cp2x, cp1y, cp2y, p2x, p2y)\n  }\n\n  isPointInBox(\n    x: number,\n    y: number\n  ) {\n    const {\n      x1,\n      y1,\n      x2,\n      y2\n    } = this\n\n    return (\n      x1 <= x\n      && x <= x2\n      && y1 <= y\n      && y <= y2\n    )\n  }\n}\n","import { RenderingContext2D } from '../types'\nimport {\n  PSEUDO_ZERO,\n  toNumbers\n} from '../util'\nimport { Font } from '../Font'\nimport { Property } from '../Property'\nimport { Element } from './Element'\n\nexport abstract class RenderedElement extends Element {\n  private modifiedEmSizeStack = false\n\n  protected calculateOpacity() {\n    let opacity = 1.0\n    // eslint-disable-next-line @typescript-eslint/no-this-alias, consistent-this\n    let element: Element | null = this\n\n    while (element) {\n      const opacityStyle = element.getStyle('opacity', false, true) // no ancestors on style call\n\n      if (opacityStyle.hasValue(true)) {\n        opacity *= opacityStyle.getNumber()\n      }\n\n      element = element.parent\n    }\n\n    return opacity\n  }\n\n  override setContext(ctx: RenderingContext2D, fromMeasure = false) {\n    if (!fromMeasure) { // causes stack overflow when measuring text with gradients\n      // fill\n      const fillStyleProp = this.getStyle('fill')\n      const fillOpacityStyleProp = this.getStyle('fill-opacity')\n      const strokeStyleProp = this.getStyle('stroke')\n      const strokeOpacityProp = this.getStyle('stroke-opacity')\n\n      if (fillStyleProp.isUrlDefinition()) {\n        const fillStyle = fillStyleProp.getFillStyleDefinition(this, fillOpacityStyleProp)\n\n        if (fillStyle) {\n          ctx.fillStyle = fillStyle\n        }\n      } else\n      if (fillStyleProp.hasValue()) {\n        if (fillStyleProp.getString() === 'currentColor') {\n          fillStyleProp.setValue(this.getStyle('color').getColor())\n        }\n\n        const fillStyle = fillStyleProp.getColor()\n\n        if (fillStyle !== 'inherit') {\n          ctx.fillStyle = fillStyle === 'none'\n            ? 'rgba(0,0,0,0)'\n            : fillStyle\n        }\n      }\n\n      if (fillOpacityStyleProp.hasValue()) {\n        const fillStyle = new Property(this.document, 'fill', ctx.fillStyle)\n          .addOpacity(fillOpacityStyleProp)\n          .getColor()\n\n        ctx.fillStyle = fillStyle\n      }\n\n      // stroke\n      if (strokeStyleProp.isUrlDefinition()) {\n        const strokeStyle = strokeStyleProp.getFillStyleDefinition(this, strokeOpacityProp)\n\n        if (strokeStyle) {\n          ctx.strokeStyle = strokeStyle\n        }\n      } else\n      if (strokeStyleProp.hasValue()) {\n        if (strokeStyleProp.getString() === 'currentColor') {\n          strokeStyleProp.setValue(this.getStyle('color').getColor())\n        }\n\n        const strokeStyle = strokeStyleProp.getString()\n\n        if (strokeStyle !== 'inherit') {\n          ctx.strokeStyle = strokeStyle === 'none'\n            ? 'rgba(0,0,0,0)'\n            : strokeStyle\n        }\n      }\n\n      if (strokeOpacityProp.hasValue()) {\n        const strokeStyle = new Property(this.document, 'stroke', ctx.strokeStyle)\n          .addOpacity(strokeOpacityProp)\n          .getString()\n\n        ctx.strokeStyle = strokeStyle\n      }\n\n      const strokeWidthStyleProp = this.getStyle('stroke-width')\n\n      if (strokeWidthStyleProp.hasValue()) {\n        const newLineWidth = strokeWidthStyleProp.getPixels()\n\n        ctx.lineWidth = !newLineWidth\n          ? PSEUDO_ZERO // browsers don't respect 0 (or node-canvas? :-)\n          : newLineWidth\n      }\n\n      const strokeLinecapStyleProp = this.getStyle('stroke-linecap')\n      const strokeLinejoinStyleProp = this.getStyle('stroke-linejoin')\n      const strokeMiterlimitProp = this.getStyle('stroke-miterlimit')\n      // NEED TEST\n      // const pointOrderStyleProp = this.getStyle('paint-order');\n      const strokeDasharrayStyleProp = this.getStyle('stroke-dasharray')\n      const strokeDashoffsetProp = this.getStyle('stroke-dashoffset')\n\n      if (strokeLinecapStyleProp.hasValue()) {\n        ctx.lineCap = strokeLinecapStyleProp.getString() as CanvasLineCap\n      }\n\n      if (strokeLinejoinStyleProp.hasValue()) {\n        ctx.lineJoin = strokeLinejoinStyleProp.getString() as CanvasLineJoin\n      }\n\n      if (strokeMiterlimitProp.hasValue()) {\n        ctx.miterLimit = strokeMiterlimitProp.getNumber()\n      }\n\n      // NEED TEST\n      // if (pointOrderStyleProp.hasValue()) {\n      //   // ?\n      //   ctx.paintOrder = pointOrderStyleProp.getValue();\n      // }\n\n      if (strokeDasharrayStyleProp.hasValue() && strokeDasharrayStyleProp.getString() !== 'none') {\n        const gaps = toNumbers(strokeDasharrayStyleProp.getString())\n\n        if (typeof ctx.setLineDash !== 'undefined') {\n          ctx.setLineDash(gaps)\n        } else\n        // @ts-expect-error Handle browser prefix.\n        if (typeof ctx.webkitLineDash !== 'undefined') {\n          // @ts-expect-error Handle browser prefix.\n          ctx.webkitLineDash = gaps\n        } else\n        // @ts-expect-error Handle browser prefix.\n        if (typeof ctx.mozDash !== 'undefined' && !(gaps.length === 1 && gaps[0] === 0)) {\n          // @ts-expect-error Handle browser prefix.\n          ctx.mozDash = gaps\n        }\n\n        const offset = strokeDashoffsetProp.getPixels()\n\n        if (typeof ctx.lineDashOffset !== 'undefined') {\n          ctx.lineDashOffset = offset\n        } else\n        // @ts-expect-error Handle browser prefix.\n        if (typeof ctx.webkitLineDashOffset !== 'undefined') {\n          // @ts-expect-error Handle browser prefix.\n          ctx.webkitLineDashOffset = offset\n        } else\n        // @ts-expect-error Handle browser prefix.\n        if (typeof ctx.mozDashOffset !== 'undefined') {\n          // @ts-expect-error Handle browser prefix.\n          ctx.mozDashOffset = offset\n        }\n      }\n    }\n\n    // font\n    this.modifiedEmSizeStack = false\n\n    if (typeof ctx.font !== 'undefined') {\n      const fontStyleProp = this.getStyle('font')\n      const fontStyleStyleProp = this.getStyle('font-style')\n      const fontVariantStyleProp = this.getStyle('font-variant')\n      const fontWeightStyleProp = this.getStyle('font-weight')\n      const fontSizeStyleProp = this.getStyle('font-size')\n      const fontFamilyStyleProp = this.getStyle('font-family')\n      const font = new Font(\n        fontStyleStyleProp.getString(),\n        fontVariantStyleProp.getString(),\n        fontWeightStyleProp.getString(),\n        fontSizeStyleProp.hasValue()\n          ? `${fontSizeStyleProp.getPixels(true)}px`\n          : '',\n        fontFamilyStyleProp.getString(),\n        Font.parse(\n          fontStyleProp.getString(),\n          ctx.font\n        )\n      )\n\n      fontStyleStyleProp.setValue(font.fontStyle)\n      fontVariantStyleProp.setValue(font.fontVariant)\n      fontWeightStyleProp.setValue(font.fontWeight)\n      fontSizeStyleProp.setValue(font.fontSize)\n      fontFamilyStyleProp.setValue(font.fontFamily)\n\n      ctx.font = font.toString()\n\n      if (fontSizeStyleProp.isPixels()) {\n        this.document.emSize = fontSizeStyleProp.getPixels()\n        this.modifiedEmSizeStack = true\n      }\n    }\n\n    if (!fromMeasure) {\n      // effects\n      this.applyEffects(ctx)\n      // opacity\n      ctx.globalAlpha = this.calculateOpacity()\n    }\n  }\n\n  override clearContext(ctx: RenderingContext2D) {\n    super.clearContext(ctx)\n\n    if (this.modifiedEmSizeStack) {\n      this.document.popEmSize()\n    }\n  }\n}\n","import { RenderingContext2D } from '../types'\nimport {\n  toNumbers,\n  compressSpaces,\n  trimLeft,\n  trimRight\n} from '../util'\nimport { Font } from '../Font'\nimport { BoundingBox } from '../BoundingBox'\nimport { Document } from './Document'\nimport { Element } from './Element'\nimport { FontElement } from './FontElement'\nimport { ArabicForm, GlyphElement } from './GlyphElement'\nimport { RenderedElement } from './RenderedElement'\n\nexport class TextElement extends RenderedElement {\n  override type = 'text'\n  protected x = 0\n  protected y = 0\n  private leafTexts: TextElement[] = []\n  private textChunkStart = 0\n  private minX = Number.POSITIVE_INFINITY\n  private maxX = Number.NEGATIVE_INFINITY\n  private measureCache = -1\n\n  constructor(\n    document: Document,\n    node: HTMLElement,\n    captureTextNodes?: boolean\n  ) {\n    super(\n      document,\n      node,\n      new.target === TextElement\n        ? true\n        : captureTextNodes\n    )\n  }\n\n  override setContext(ctx: RenderingContext2D, fromMeasure = false) {\n    super.setContext(ctx, fromMeasure)\n\n    const textBaseline = this.getStyle('dominant-baseline').getTextBaseline()\n      || this.getStyle('alignment-baseline').getTextBaseline()\n\n    if (textBaseline) {\n      ctx.textBaseline = textBaseline as CanvasTextBaseline\n    }\n  }\n\n  protected initializeCoordinates() {\n    this.x = 0\n    this.y = 0\n    this.leafTexts = []\n    this.textChunkStart = 0\n    this.minX = Number.POSITIVE_INFINITY\n    this.maxX = Number.NEGATIVE_INFINITY\n  }\n\n  getBoundingBox(ctx: RenderingContext2D) {\n    if (this.type !== 'text') {\n      return this.getTElementBoundingBox(ctx)\n    }\n\n    // first, calculate child positions\n    this.initializeCoordinates()\n    this.adjustChildCoordinatesRecursive(ctx)\n\n    let boundingBox: BoundingBox | null = null\n\n    // then calculate bounding box\n    this.children.forEach((_, i) => {\n      const childBoundingBox = this.getChildBoundingBox(ctx, this, this, i)\n\n      if (!boundingBox) {\n        boundingBox = childBoundingBox\n      } else {\n        boundingBox.addBoundingBox(childBoundingBox)\n      }\n    })\n\n    return boundingBox\n  }\n\n  protected getFontSize() {\n    const {\n      document,\n      parent\n    } = this\n    const inheritFontSize = Font.parse(document.ctx.font).fontSize\n    const fontSize = parent.getStyle('font-size').getNumber(inheritFontSize)\n\n    return fontSize\n  }\n\n  protected getTElementBoundingBox(ctx: RenderingContext2D) {\n    const fontSize = this.getFontSize()\n\n    return new BoundingBox(\n      this.x,\n      this.y - fontSize,\n      this.x + this.measureText(ctx),\n      this.y\n    )\n  }\n\n  getGlyph(\n    font: FontElement,\n    text: string,\n    i: number\n  ) {\n    const char = text[i]\n    let glyph: GlyphElement | undefined\n\n    if (font.isArabic) {\n      const len = text.length\n      const prevChar = text[i - 1]\n      const nextChar = text[i + 1]\n      let arabicForm: ArabicForm = 'isolated'\n\n      if ((i === 0 || prevChar === ' ') && i < len - 1 && nextChar !== ' ') {\n        arabicForm = 'terminal'\n      }\n\n      if (i > 0 && prevChar !== ' ' && i < len - 1 && nextChar !== ' ') {\n        arabicForm = 'medial'\n      }\n\n      if (i > 0 && prevChar !== ' ' && (i === len - 1 || nextChar === ' ')) {\n        arabicForm = 'initial'\n      }\n\n      glyph = font.arabicGlyphs[char]?.[arabicForm] || font.glyphs[char]\n    } else {\n      glyph = font.glyphs[char]\n    }\n\n    if (!glyph) {\n      glyph = font.missingGlyph\n    }\n\n    return glyph\n  }\n\n  getText() {\n    return ''\n  }\n\n  protected getTextFromNode(node?: ChildNode) {\n    const textNode = node || this.node\n    const childNodes = Array.from(textNode.parentNode.childNodes)\n    const index = childNodes.indexOf(textNode)\n    const lastIndex = childNodes.length - 1\n    let text = compressSpaces(\n      // textNode.value\n      // || textNode.text\n      textNode.textContent\n      || ''\n    )\n\n    if (index === 0) {\n      text = trimLeft(text)\n    }\n\n    if (index === lastIndex) {\n      text = trimRight(text)\n    }\n\n    return text\n  }\n\n  override renderChildren(ctx: RenderingContext2D) {\n    if (this.type !== 'text') {\n      this.renderTElementChildren(ctx)\n      return\n    }\n\n    // first, calculate child positions\n    this.initializeCoordinates()\n    this.adjustChildCoordinatesRecursive(ctx)\n\n    // then render\n    this.children.forEach((_, i) => {\n      this.renderChild(ctx, this, this, i)\n    })\n\n    const { mouse } = this.document.screen\n\n    // Do not calc bounding box if mouse is not working.\n    if (mouse.isWorking()) {\n      mouse.checkBoundingBox(\n        this,\n        this.getBoundingBox(ctx)\n      )\n    }\n  }\n\n  protected renderTElementChildren(ctx: RenderingContext2D) {\n    const {\n      document,\n      parent\n    } = this\n    const renderText = this.getText()\n    const customFont = parent.getStyle('font-family').getDefinition<FontElement>()\n\n    if (customFont) {\n      const { unitsPerEm } = customFont.fontFace\n      const ctxFont = Font.parse(document.ctx.font)\n      const fontSize = parent.getStyle('font-size').getNumber(ctxFont.fontSize)\n      const fontStyle = parent.getStyle('font-style').getString(ctxFont.fontStyle)\n      const scale = fontSize / unitsPerEm\n      const text = customFont.isRTL\n        ? renderText.split('').reverse().join('')\n        : renderText\n      const dx = toNumbers(parent.getAttribute('dx').getString())\n      const len = text.length\n\n      for (let i = 0; i < len; i++) {\n        const glyph = this.getGlyph(customFont, text, i)\n\n        ctx.translate(this.x, this.y)\n        ctx.scale(scale, -scale)\n\n        const lw = ctx.lineWidth\n\n        ctx.lineWidth = ctx.lineWidth * unitsPerEm / fontSize\n\n        if (fontStyle === 'italic') {\n          ctx.transform(1, 0, .4, 1, 0, 0)\n        }\n\n        glyph.render(ctx)\n\n        if (fontStyle === 'italic') {\n          ctx.transform(1, 0, -.4, 1, 0, 0)\n        }\n\n        ctx.lineWidth = lw\n        ctx.scale(1 / scale, -1 / scale)\n        ctx.translate(-this.x, -this.y)\n\n        this.x += fontSize * (glyph.horizAdvX || customFont.horizAdvX) / unitsPerEm\n\n        if (typeof dx[i] !== 'undefined' && !isNaN(dx[i])) {\n          this.x += dx[i]\n        }\n      }\n\n      return\n    }\n\n    const {\n      x,\n      y\n    } = this\n\n    // NEED TEST\n    // if (ctx.paintOrder === 'stroke') {\n    //   if (ctx.strokeStyle) {\n    //     ctx.strokeText(renderText, x, y);\n    //   }\n\n    //   if (ctx.fillStyle) {\n    //     ctx.fillText(renderText, x, y);\n    //   }\n    // } else {\n    if (ctx.fillStyle) {\n      ctx.fillText(renderText, x, y)\n    }\n\n    if (ctx.strokeStyle) {\n      ctx.strokeText(renderText, x, y)\n    }\n    // }\n  }\n\n  protected applyAnchoring() {\n    if (this.textChunkStart >= this.leafTexts.length) {\n      return\n    }\n\n    // This is basically the \"Apply anchoring\" part of https://www.w3.org/TR/SVG2/text.html#TextLayoutAlgorithm.\n    // The difference is that we apply the anchoring as soon as a chunk is finished. This saves some extra looping.\n    // Vertical text is not supported.\n\n    const firstElement = this.leafTexts[this.textChunkStart]\n    const textAnchor = firstElement.getStyle('text-anchor').getString('start')\n    const isRTL = false // we treat RTL like LTR\n    let shift = 0\n\n    if (textAnchor === 'start' && !isRTL || textAnchor === 'end' && isRTL) {\n      shift = firstElement.x - this.minX\n    } else if (textAnchor === 'end' && !isRTL || textAnchor === 'start' && isRTL) {\n      shift = firstElement.x - this.maxX\n    } else {\n      shift = firstElement.x - (this.minX + this.maxX) / 2\n    }\n\n    for (let i = this.textChunkStart; i < this.leafTexts.length; i++) {\n      this.leafTexts[i].x += shift\n    }\n\n    // start new chunk\n    this.minX = Number.POSITIVE_INFINITY\n    this.maxX = Number.NEGATIVE_INFINITY\n    this.textChunkStart = this.leafTexts.length\n  }\n\n  protected adjustChildCoordinatesRecursive(ctx: RenderingContext2D) {\n    this.children.forEach((_, i) => {\n      this.adjustChildCoordinatesRecursiveCore(ctx, this, this, i)\n    })\n    this.applyAnchoring()\n  }\n\n  protected adjustChildCoordinatesRecursiveCore(\n    ctx: RenderingContext2D,\n    textParent: TextElement,\n    parent: Element,\n    i: number\n  ): void {\n    const child = parent.children[i] as TextElement\n\n    if (child.children.length > 0) {\n      child.children.forEach((_, i) => {\n        textParent.adjustChildCoordinatesRecursiveCore(ctx, textParent, child, i)\n      })\n    } else {\n      // only leafs are relevant\n      this.adjustChildCoordinates(ctx, textParent, parent, i)\n    }\n  }\n\n  protected adjustChildCoordinates(\n    ctx: RenderingContext2D,\n    textParent: TextElement,\n    parent: Element,\n    i: number\n  ) {\n    const child = parent.children[i] as TextElement\n\n    if (typeof child.measureText !== 'function') {\n      return child\n    }\n\n    ctx.save()\n    child.setContext(ctx, true)\n\n    const xAttr = child.getAttribute('x')\n    const yAttr = child.getAttribute('y')\n    const dxAttr = child.getAttribute('dx')\n    const dyAttr = child.getAttribute('dy')\n    const customFont = child.getStyle('font-family').getDefinition<FontElement>()\n    const isRTL = Boolean(customFont?.isRTL)\n\n    if (i === 0) {\n      // First children inherit attributes from parent(s). Positional attributes\n      // are only inherited from a parent to it's first child.\n      if (!xAttr.hasValue()) {\n        xAttr.setValue(child.getInheritedAttribute('x'))\n      }\n\n      if (!yAttr.hasValue()) {\n        yAttr.setValue(child.getInheritedAttribute('y'))\n      }\n\n      if (!dxAttr.hasValue()) {\n        dxAttr.setValue(child.getInheritedAttribute('dx'))\n      }\n\n      if (!dyAttr.hasValue()) {\n        dyAttr.setValue(child.getInheritedAttribute('dy'))\n      }\n    }\n\n    const width = child.measureText(ctx)\n\n    if (isRTL) {\n      textParent.x -= width\n    }\n\n    if (xAttr.hasValue()) {\n      // an \"x\" attribute marks the start of a new chunk\n      textParent.applyAnchoring()\n\n      child.x = xAttr.getPixels('x')\n\n      if (dxAttr.hasValue()) {\n        child.x += dxAttr.getPixels('x')\n      }\n    } else {\n      if (dxAttr.hasValue()) {\n        textParent.x += dxAttr.getPixels('x')\n      }\n\n      child.x = textParent.x\n    }\n\n    textParent.x = child.x\n\n    if (!isRTL) {\n      textParent.x += width\n    }\n\n    if (yAttr.hasValue()) {\n      child.y = yAttr.getPixels('y')\n\n      if (dyAttr.hasValue()) {\n        child.y += dyAttr.getPixels('y')\n      }\n    } else {\n      if (dyAttr.hasValue()) {\n        textParent.y += dyAttr.getPixels('y')\n      }\n\n      child.y = textParent.y\n    }\n\n    textParent.y = child.y\n\n    // update the current chunk and it's bounds\n    textParent.leafTexts.push(child)\n    textParent.minX = Math.min(textParent.minX, child.x, child.x + width)\n    textParent.maxX = Math.max(textParent.maxX, child.x, child.x + width)\n\n    child.clearContext(ctx)\n    ctx.restore()\n\n    return child\n  }\n\n  protected getChildBoundingBox(\n    ctx: RenderingContext2D,\n    textParent: TextElement,\n    parent: Element,\n    i: number\n  ) {\n    const child = parent.children[i] as TextElement\n\n    // not a text node?\n    if (typeof child.getBoundingBox !== 'function') {\n      return null\n    }\n\n    const boundingBox = child.getBoundingBox(ctx)\n\n    if (boundingBox) {\n      child.children.forEach((_, i) => {\n        const childBoundingBox = textParent.getChildBoundingBox(ctx, textParent, child, i)\n\n        boundingBox.addBoundingBox(childBoundingBox)\n      })\n    }\n\n    return boundingBox\n  }\n\n  protected renderChild(\n    ctx: RenderingContext2D,\n    textParent: TextElement,\n    parent: Element,\n    i: number\n  ) {\n    const child = parent.children[i] as TextElement\n\n    child.render(ctx)\n    child.children.forEach((_, i) => {\n      textParent.renderChild(ctx, textParent, child, i)\n    })\n  }\n\n  protected measureText(ctx: RenderingContext2D) {\n    const { measureCache } = this\n\n    if (~measureCache) {\n      return measureCache\n    }\n\n    const renderText = this.getText()\n    const measure = this.measureTargetText(ctx, renderText)\n\n    this.measureCache = measure\n\n    return measure\n  }\n\n  protected measureTargetText(\n    ctx: RenderingContext2D,\n    targetText: string\n  ) {\n    if (!targetText.length) {\n      return 0\n    }\n\n    const { parent } = this\n    const customFont = parent.getStyle('font-family').getDefinition<FontElement>()\n\n    if (customFont) {\n      const fontSize = this.getFontSize()\n      const text = customFont.isRTL\n        ? targetText.split('').reverse().join('')\n        : targetText\n      const dx = toNumbers(parent.getAttribute('dx').getString())\n      const len = text.length\n      let measure = 0\n\n      for (let i = 0; i < len; i++) {\n        const glyph = this.getGlyph(customFont, text, i)\n\n        measure += (glyph.horizAdvX || customFont.horizAdvX)\n          * fontSize\n          / customFont.fontFace.unitsPerEm\n\n        if (typeof dx[i] !== 'undefined' && !isNaN(dx[i])) {\n          measure += dx[i]\n        }\n      }\n\n      return measure\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n    if (!ctx.measureText) {\n      return targetText.length * 10\n    }\n\n    ctx.save()\n    this.setContext(ctx, true)\n\n    const { width: measure } = ctx.measureText(targetText)\n\n    this.clearContext(ctx)\n    ctx.restore()\n\n    return measure\n  }\n\n  /**\n   * Inherits positional attributes from {@link TextElement} parent(s). Attributes\n   * are only inherited from a parent to its first child.\n   * @param name - The attribute name.\n   * @returns The attribute value or null.\n   */\n  protected getInheritedAttribute(name: string): string | null {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias,consistent-this\n    let current: Element | null = this\n\n    while (current instanceof TextElement && current.isFirstChild() && current.parent) {\n      const parentAttr = current.parent.getAttribute(name)\n\n      if (parentAttr.hasValue(true)) {\n        return parentAttr.getString('0')\n      }\n\n      current = current.parent\n    }\n\n    return null\n  }\n}\n","import { Document } from './Document'\nimport { TextElement } from './TextElement'\n\nexport class TSpanElement extends TextElement {\n  override type = 'tspan'\n  protected readonly text: string\n\n  constructor(\n    document: Document,\n    node: HTMLElement,\n    captureTextNodes?: boolean\n  ) {\n    super(\n      document,\n      node,\n      new.target === TSpanElement\n        ? true\n        : captureTextNodes\n    )\n\n    // if this node has children, then they own the text\n    this.text = this.children.length > 0\n      ? ''\n      : this.getTextFromNode()\n  }\n\n  override getText() {\n    return this.text\n  }\n}\n","import { TSpanElement } from './TSpanElement'\n\nexport class TextNode extends TSpanElement {\n  override type = 'textNode'\n}\n","import {\n  SVGCommand,\n  CommandM,\n  CommandL,\n  CommandH,\n  CommandV,\n  CommandZ,\n  CommandQ,\n  CommandT,\n  CommandC,\n  CommandS,\n  CommandA\n} from 'svg-pathdata/lib/types'\nimport { SVGPathData } from 'svg-pathdata'\nimport { Point } from './Point'\n\nexport type CommandType = SVGCommand['type']\nexport type Command = { type: CommandType }\n  & Omit<CommandM, 'type'>\n  & Omit<CommandL, 'type'>\n  & Omit<CommandH, 'type'>\n  & Omit<CommandV, 'type'>\n  & Omit<CommandZ, 'type'>\n  & Omit<CommandQ, 'type'>\n  & Omit<CommandT, 'type'>\n  & Omit<CommandC, 'type'>\n  & Omit<CommandS, 'type'>\n  & Omit<CommandA, 'type'>\n\nexport class PathParser extends SVGPathData {\n  control: Point = new Point(0, 0)\n  start: Point = new Point(0, 0)\n  current: Point = new Point(0, 0)\n  command: Command | null = null\n  override readonly commands: Command[] /* Babel fix: */ = this.commands\n  private i = -1\n  private previousCommand: Command | null = null\n  private points: Point[] = []\n  private angles: (number | null)[] = []\n\n  constructor(path: string) {\n    super(\n      path\n        // Fix spaces after signs.\n        .replace(/([+\\-.])\\s+/gm, '$1')\n        // Remove invalid part.\n        .replace(/[^MmZzLlHhVvCcSsQqTtAae\\d\\s.,+-].*/g, '')\n    )\n  }\n\n  reset() {\n    this.i = -1\n    this.command = null\n    this.previousCommand = null\n    this.start = new Point(0, 0)\n    this.control = new Point(0, 0)\n    this.current = new Point(0, 0)\n    this.points = []\n    this.angles = []\n  }\n\n  isEnd() {\n    const {\n      i,\n      commands\n    } = this\n\n    return i >= commands.length - 1\n  }\n\n  next() {\n    const command = this.commands[++this.i]\n\n    this.previousCommand = this.command\n    this.command = command\n\n    return command\n  }\n\n  getPoint(xProp = 'x', yProp = 'y') {\n    const point = new Point(\n      this.command[xProp] as number,\n      this.command[yProp] as number\n    )\n\n    return this.makeAbsolute(point)\n  }\n\n  getAsControlPoint(xProp?: string, yProp?: string) {\n    const point = this.getPoint(xProp, yProp)\n\n    this.control = point\n\n    return point\n  }\n\n  getAsCurrentPoint(xProp?: string, yProp?: string) {\n    const point = this.getPoint(xProp, yProp)\n\n    this.current = point\n\n    return point\n  }\n\n  getReflectedControlPoint() {\n    const previousCommand = this.previousCommand.type\n\n    if (previousCommand !== SVGPathData.CURVE_TO\n      && previousCommand !== SVGPathData.SMOOTH_CURVE_TO\n      && previousCommand !== SVGPathData.QUAD_TO\n      && previousCommand !== SVGPathData.SMOOTH_QUAD_TO\n    ) {\n      return this.current\n    }\n\n    // reflect point\n    const {\n      current: {\n        x: cx,\n        y: cy\n      },\n      control: {\n        x: ox,\n        y: oy\n      }\n    } = this\n    const point = new Point(2 * cx - ox, 2 * cy - oy)\n\n    return point\n  }\n\n  makeAbsolute(point: Point) {\n    if (this.command.relative) {\n      const {\n        x,\n        y\n      } = this.current\n\n      point.x += x\n      point.y += y\n    }\n\n    return point\n  }\n\n  addMarker(point: Point, from?: Point, priorTo?: Point) {\n    const {\n      points,\n      angles\n    } = this\n\n    // if the last angle isn't filled in because we didn't have this point yet ...\n    if (priorTo && angles.length > 0 && !angles[angles.length - 1]) {\n      angles[angles.length - 1] = points[points.length - 1].angleTo(priorTo)\n    }\n\n    this.addMarkerAngle(point, from ? from.angleTo(point) : null)\n  }\n\n  addMarkerAngle(point: Point, angle: number) {\n    this.points.push(point)\n    this.angles.push(angle)\n  }\n\n  getMarkerPoints() {\n    return this.points\n  }\n\n  getMarkerAngles() {\n    const { angles } = this\n    const len = angles.length\n\n    for (let i = 0; i < len; i++) {\n      if (!angles[i]) {\n        for (let j = i + 1; j < len; j++) {\n          if (angles[j]) {\n            angles[i] = angles[j]\n            break\n          }\n        }\n      }\n    }\n\n    return angles\n  }\n}\n","/* eslint-disable @typescript-eslint/member-ordering */\nimport { RenderingContext2D } from '../types'\nimport {\n  vectorsRatio,\n  vectorsAngle\n} from '../util'\nimport { Point } from '../Point'\nimport { BoundingBox } from '../BoundingBox'\nimport { PathParser } from '../PathParser'\nimport { Document } from './Document'\nimport { RenderedElement } from './RenderedElement'\nimport { MarkerElement } from './MarkerElement'\n\nexport type Marker = [Point, number]\n\nexport class PathElement extends RenderedElement {\n  override type = 'path'\n  readonly pathParser: PathParser\n\n  constructor(\n    document: Document,\n    node?: HTMLElement,\n    captureTextNodes?: boolean\n  ) {\n    super(document, node, captureTextNodes)\n\n    this.pathParser = new PathParser(this.getAttribute('d').getString())\n  }\n\n  path(ctx?: RenderingContext2D) {\n    const { pathParser } = this\n    const boundingBox = new BoundingBox()\n\n    pathParser.reset()\n\n    if (ctx) {\n      ctx.beginPath()\n    }\n\n    while (!pathParser.isEnd()) {\n      switch (pathParser.next().type) {\n        case PathParser.MOVE_TO:\n          this.pathM(ctx, boundingBox)\n          break\n\n        case PathParser.LINE_TO:\n          this.pathL(ctx, boundingBox)\n          break\n\n        case PathParser.HORIZ_LINE_TO:\n          this.pathH(ctx, boundingBox)\n          break\n\n        case PathParser.VERT_LINE_TO:\n          this.pathV(ctx, boundingBox)\n          break\n\n        case PathParser.CURVE_TO:\n          this.pathC(ctx, boundingBox)\n          break\n\n        case PathParser.SMOOTH_CURVE_TO:\n          this.pathS(ctx, boundingBox)\n          break\n\n        case PathParser.QUAD_TO:\n          this.pathQ(ctx, boundingBox)\n          break\n\n        case PathParser.SMOOTH_QUAD_TO:\n          this.pathT(ctx, boundingBox)\n          break\n\n        case PathParser.ARC:\n          this.pathA(ctx, boundingBox)\n          break\n\n        case PathParser.CLOSE_PATH:\n          this.pathZ(ctx, boundingBox)\n          break\n\n        default:\n      }\n    }\n\n    return boundingBox\n  }\n\n  getBoundingBox(_ctx: RenderingContext2D) {\n    return this.path()\n  }\n\n  getMarkers(): Marker[] {\n    const { pathParser } = this\n    const points = pathParser.getMarkerPoints()\n    const angles = pathParser.getMarkerAngles()\n    const markers = points.map((point, i): Marker => [point, angles[i]])\n\n    return markers\n  }\n\n  override renderChildren(ctx: RenderingContext2D) {\n    this.path(ctx)\n    this.document.screen.mouse.checkPath(this, ctx)\n\n    const fillRuleStyleProp = this.getStyle('fill-rule')\n\n    if (ctx.fillStyle !== '') {\n      if (fillRuleStyleProp.getString('inherit') !== 'inherit') {\n        ctx.fill(fillRuleStyleProp.getString() as CanvasFillRule)\n      } else {\n        ctx.fill()\n      }\n    }\n\n    if (ctx.strokeStyle !== '') {\n      if (this.getAttribute('vector-effect').getString() === 'non-scaling-stroke') {\n        ctx.save()\n        ctx.setTransform(1, 0, 0, 1, 0, 0)\n        ctx.stroke()\n        ctx.restore()\n      } else {\n        ctx.stroke()\n      }\n    }\n\n    const markers = this.getMarkers()\n\n    if (markers) {\n      const markersLastIndex = markers.length - 1\n      const markerStartStyleProp = this.getStyle('marker-start')\n      const markerMidStyleProp = this.getStyle('marker-mid')\n      const markerEndStyleProp = this.getStyle('marker-end')\n\n      if (markerStartStyleProp.isUrlDefinition()) {\n        const marker = markerStartStyleProp.getDefinition<MarkerElement>()\n        const [point, angle] = markers[0]\n\n        marker.render(ctx, point, angle)\n      }\n\n      if (markerMidStyleProp.isUrlDefinition()) {\n        const marker = markerMidStyleProp.getDefinition<MarkerElement>()\n\n        for (let i = 1; i < markersLastIndex; i++) {\n          const [point, angle] = markers[i]\n\n          marker.render(ctx, point, angle)\n        }\n      }\n\n      if (markerEndStyleProp.isUrlDefinition()) {\n        const marker = markerEndStyleProp.getDefinition<MarkerElement>()\n        const [point, angle] = markers[markersLastIndex]\n\n        marker.render(ctx, point, angle)\n      }\n    }\n  }\n\n  static pathM(pathParser: PathParser) {\n    const point = pathParser.getAsCurrentPoint()\n\n    pathParser.start = pathParser.current\n\n    return {\n      point\n    }\n  }\n\n  protected pathM(\n    ctx: RenderingContext2D | undefined,\n    boundingBox: BoundingBox\n  ) {\n    const { pathParser } = this\n    const { point } = PathElement.pathM(pathParser)\n    const {\n      x,\n      y\n    } = point\n\n    pathParser.addMarker(point)\n    boundingBox.addPoint(x, y)\n\n    if (ctx) {\n      ctx.moveTo(x, y)\n    }\n  }\n\n  static pathL(pathParser: PathParser) {\n    const { current } = pathParser\n    const point = pathParser.getAsCurrentPoint()\n\n    return {\n      current,\n      point\n    }\n  }\n\n  protected pathL(\n    ctx: RenderingContext2D | undefined,\n    boundingBox: BoundingBox\n  ) {\n    const { pathParser } = this\n    const {\n      current,\n      point\n    } = PathElement.pathL(pathParser)\n    const {\n      x,\n      y\n    } = point\n\n    pathParser.addMarker(point, current)\n    boundingBox.addPoint(x, y)\n\n    if (ctx) {\n      ctx.lineTo(x, y)\n    }\n  }\n\n  static pathH(pathParser: PathParser) {\n    const {\n      current,\n      command\n    } = pathParser\n    const point = new Point(\n      (command.relative ? current.x : 0) + command.x,\n      current.y\n    )\n\n    pathParser.current = point\n\n    return {\n      current,\n      point\n    }\n  }\n\n  protected pathH(\n    ctx: RenderingContext2D | undefined,\n    boundingBox: BoundingBox\n  ) {\n    const { pathParser } = this\n    const {\n      current,\n      point\n    } = PathElement.pathH(pathParser)\n    const {\n      x,\n      y\n    } = point\n\n    pathParser.addMarker(point, current)\n    boundingBox.addPoint(x, y)\n\n    if (ctx) {\n      ctx.lineTo(x, y)\n    }\n  }\n\n  static pathV(pathParser: PathParser) {\n    const {\n      current,\n      command\n    } = pathParser\n    const point = new Point(\n      current.x,\n      (command.relative ? current.y : 0) + command.y\n    )\n\n    pathParser.current = point\n\n    return {\n      current,\n      point\n    }\n  }\n\n  protected pathV(\n    ctx: RenderingContext2D | undefined,\n    boundingBox: BoundingBox\n  ) {\n    const { pathParser } = this\n    const {\n      current,\n      point\n    } = PathElement.pathV(pathParser)\n    const {\n      x,\n      y\n    } = point\n\n    pathParser.addMarker(point, current)\n    boundingBox.addPoint(x, y)\n\n    if (ctx) {\n      ctx.lineTo(x, y)\n    }\n  }\n\n  static pathC(pathParser: PathParser) {\n    const { current } = pathParser\n    const point = pathParser.getPoint('x1', 'y1')\n    const controlPoint = pathParser.getAsControlPoint('x2', 'y2')\n    const currentPoint = pathParser.getAsCurrentPoint()\n\n    return {\n      current,\n      point,\n      controlPoint,\n      currentPoint\n    }\n  }\n\n  protected pathC(\n    ctx: RenderingContext2D | undefined,\n    boundingBox: BoundingBox\n  ) {\n    const { pathParser } = this\n    const {\n      current,\n      point,\n      controlPoint,\n      currentPoint\n    } = PathElement.pathC(pathParser)\n\n    pathParser.addMarker(currentPoint, controlPoint, point)\n    boundingBox.addBezierCurve(\n      current.x,\n      current.y,\n      point.x,\n      point.y,\n      controlPoint.x,\n      controlPoint.y,\n      currentPoint.x,\n      currentPoint.y\n    )\n\n    if (ctx) {\n      ctx.bezierCurveTo(\n        point.x,\n        point.y,\n        controlPoint.x,\n        controlPoint.y,\n        currentPoint.x,\n        currentPoint.y\n      )\n    }\n  }\n\n  static pathS(pathParser: PathParser) {\n    const { current } = pathParser\n    const point = pathParser.getReflectedControlPoint()\n    const controlPoint = pathParser.getAsControlPoint('x2', 'y2')\n    const currentPoint = pathParser.getAsCurrentPoint()\n\n    return {\n      current,\n      point,\n      controlPoint,\n      currentPoint\n    }\n  }\n\n  protected pathS(\n    ctx: RenderingContext2D | undefined,\n    boundingBox: BoundingBox\n  ) {\n    const { pathParser } = this\n    const {\n      current,\n      point,\n      controlPoint,\n      currentPoint\n    } = PathElement.pathS(pathParser)\n\n    pathParser.addMarker(currentPoint, controlPoint, point)\n    boundingBox.addBezierCurve(\n      current.x,\n      current.y,\n      point.x,\n      point.y,\n      controlPoint.x,\n      controlPoint.y,\n      currentPoint.x,\n      currentPoint.y\n    )\n\n    if (ctx) {\n      ctx.bezierCurveTo(\n        point.x,\n        point.y,\n        controlPoint.x,\n        controlPoint.y,\n        currentPoint.x,\n        currentPoint.y\n      )\n    }\n  }\n\n  static pathQ(pathParser: PathParser) {\n    const { current } = pathParser\n    const controlPoint = pathParser.getAsControlPoint('x1', 'y1')\n    const currentPoint = pathParser.getAsCurrentPoint()\n\n    return {\n      current,\n      controlPoint,\n      currentPoint\n    }\n  }\n\n  protected pathQ(\n    ctx: RenderingContext2D | undefined,\n    boundingBox: BoundingBox\n  ) {\n    const { pathParser } = this\n    const {\n      current,\n      controlPoint,\n      currentPoint\n    } = PathElement.pathQ(pathParser)\n\n    pathParser.addMarker(currentPoint, controlPoint, controlPoint)\n    boundingBox.addQuadraticCurve(\n      current.x,\n      current.y,\n      controlPoint.x,\n      controlPoint.y,\n      currentPoint.x,\n      currentPoint.y\n    )\n\n    if (ctx) {\n      ctx.quadraticCurveTo(\n        controlPoint.x,\n        controlPoint.y,\n        currentPoint.x,\n        currentPoint.y\n      )\n    }\n  }\n\n  static pathT(pathParser: PathParser) {\n    const { current } = pathParser\n    const controlPoint = pathParser.getReflectedControlPoint()\n\n    pathParser.control = controlPoint\n\n    const currentPoint = pathParser.getAsCurrentPoint()\n\n    return {\n      current,\n      controlPoint,\n      currentPoint\n    }\n  }\n\n  protected pathT(\n    ctx: RenderingContext2D | undefined,\n    boundingBox: BoundingBox\n  ) {\n    const { pathParser } = this\n    const {\n      current,\n      controlPoint,\n      currentPoint\n    } = PathElement.pathT(pathParser)\n\n    pathParser.addMarker(currentPoint, controlPoint, controlPoint)\n    boundingBox.addQuadraticCurve(\n      current.x,\n      current.y,\n      controlPoint.x,\n      controlPoint.y,\n      currentPoint.x,\n      currentPoint.y\n    )\n\n    if (ctx) {\n      ctx.quadraticCurveTo(\n        controlPoint.x,\n        controlPoint.y,\n        currentPoint.x,\n        currentPoint.y\n      )\n    }\n  }\n\n  static pathA(pathParser: PathParser) {\n    const {\n      current,\n      command\n    } = pathParser\n    let {\n      rX,\n      rY,\n      xRot,\n      lArcFlag,\n      sweepFlag\n    } = command\n    const xAxisRotation = xRot * (Math.PI / 180.0)\n    const currentPoint = pathParser.getAsCurrentPoint()\n    // Conversion from endpoint to center parameterization\n    // http://www.w3.org/TR/SVG11/implnote.html#ArcImplementationNotes\n    // x1', y1'\n    const currp = new Point(\n      Math.cos(xAxisRotation) * (current.x - currentPoint.x) / 2.0\n      + Math.sin(xAxisRotation) * (current.y - currentPoint.y) / 2.0,\n      -Math.sin(xAxisRotation) * (current.x - currentPoint.x) / 2.0\n      + Math.cos(xAxisRotation) * (current.y - currentPoint.y) / 2.0\n    )\n    // adjust radii\n    const l =\n      Math.pow(currp.x, 2) / Math.pow(rX, 2)\n      + Math.pow(currp.y, 2) / Math.pow(rY, 2)\n\n    if (l > 1) {\n      rX *= Math.sqrt(l)\n      rY *= Math.sqrt(l)\n    }\n\n    // cx', cy'\n    let s = (lArcFlag === sweepFlag ? -1 : 1) * Math.sqrt(\n      (\n        (Math.pow(rX, 2) * Math.pow(rY, 2))\n        - (Math.pow(rX, 2) * Math.pow(currp.y, 2))\n        - (Math.pow(rY, 2) * Math.pow(currp.x, 2))\n      ) / (\n        Math.pow(rX, 2) * Math.pow(currp.y, 2)\n        + Math.pow(rY, 2) * Math.pow(currp.x, 2)\n      )\n    )\n\n    if (isNaN(s)) {\n      s = 0\n    }\n\n    const cpp = new Point(\n      s * rX * currp.y / rY,\n      s * -rY * currp.x / rX\n    )\n    // cx, cy\n    const centp = new Point(\n      (current.x + currentPoint.x) / 2.0\n      + Math.cos(xAxisRotation) * cpp.x\n      - Math.sin(xAxisRotation) * cpp.y,\n      (current.y + currentPoint.y) / 2.0\n      + Math.sin(xAxisRotation) * cpp.x\n      + Math.cos(xAxisRotation) * cpp.y\n    )\n    // initial angle\n    const a1 = vectorsAngle([1, 0], [(currp.x - cpp.x) / rX, (currp.y - cpp.y) / rY]) // θ1\n    // angle delta\n    const u = [(currp.x - cpp.x) / rX, (currp.y - cpp.y) / rY] as const\n    const v = [(-currp.x - cpp.x) / rX, (-currp.y - cpp.y) / rY] as const\n    let ad = vectorsAngle(u, v) // Δθ\n\n    if (vectorsRatio(u, v) <= -1) {\n      ad = Math.PI\n    }\n\n    if (vectorsRatio(u, v) >= 1) {\n      ad = 0\n    }\n\n    return {\n      currentPoint,\n      rX,\n      rY,\n      sweepFlag,\n      xAxisRotation,\n      centp,\n      a1,\n      ad\n    }\n  }\n\n  protected pathA(\n    ctx: RenderingContext2D | undefined,\n    boundingBox: BoundingBox\n  ) {\n    const { pathParser } = this\n    const {\n      currentPoint,\n      rX,\n      rY,\n      sweepFlag,\n      xAxisRotation,\n      centp,\n      a1,\n      ad\n    } = PathElement.pathA(pathParser)\n    // for markers\n    const dir = 1 - sweepFlag ? 1.0 : -1.0\n    const ah = a1 + dir * (ad / 2.0)\n    const halfWay = new Point(\n      centp.x + rX * Math.cos(ah),\n      centp.y + rY * Math.sin(ah)\n    )\n\n    pathParser.addMarkerAngle(halfWay, ah - dir * Math.PI / 2)\n    pathParser.addMarkerAngle(currentPoint, ah - dir * Math.PI)\n    boundingBox.addPoint(currentPoint.x, currentPoint.y) // TODO: this is too naive, make it better\n\n    if (ctx && !isNaN(a1) && !isNaN(ad)) {\n      const r = rX > rY ? rX : rY\n      const sx = rX > rY ? 1 : rX / rY\n      const sy = rX > rY ? rY / rX : 1\n\n      ctx.translate(centp.x, centp.y)\n      ctx.rotate(xAxisRotation)\n      ctx.scale(sx, sy)\n      ctx.arc(0, 0, r, a1, a1 + ad, Boolean(1 - sweepFlag))\n      ctx.scale(1 / sx, 1 / sy)\n      ctx.rotate(-xAxisRotation)\n      ctx.translate(-centp.x, -centp.y)\n    }\n  }\n\n  static pathZ(pathParser: PathParser) {\n    pathParser.current = pathParser.start\n  }\n\n  protected pathZ(\n    ctx: RenderingContext2D | undefined,\n    boundingBox: BoundingBox\n  ) {\n    PathElement.pathZ(this.pathParser)\n\n    if (ctx) {\n      // only close path if it is not a straight line\n      if (boundingBox.x1 !== boundingBox.x2\n        && boundingBox.y1 !== boundingBox.y2\n      ) {\n        ctx.closePath()\n      }\n    }\n  }\n}\n","import { RenderingContext2D } from '../types'\nimport { toNumbers } from '../util'\nimport { Property } from '../Property'\nimport { Font } from '../Font'\nimport { RenderedElement } from './RenderedElement'\n\nexport class SVGElement extends RenderedElement {\n  override type = 'svg'\n  root = false\n\n  override setContext(ctx: RenderingContext2D) {\n    const { document } = this\n    const {\n      screen,\n      window\n    } = document\n    const canvas = ctx.canvas\n\n    screen.setDefaults(ctx)\n\n    if ('style' in canvas\n      && typeof ctx.font !== 'undefined'\n      && window\n      && typeof window.getComputedStyle !== 'undefined'\n    ) {\n      ctx.font = window.getComputedStyle(canvas).getPropertyValue('font')\n\n      const fontSizeProp = new Property(\n        document,\n        'fontSize',\n        Font.parse(ctx.font).fontSize\n      )\n\n      if (fontSizeProp.hasValue()) {\n        document.rootEmSize = fontSizeProp.getPixels('y')\n        document.emSize = document.rootEmSize\n      }\n    }\n\n    // create new view port\n    if (!this.getAttribute('x').hasValue()) {\n      this.getAttribute('x', true).setValue(0)\n    }\n\n    if (!this.getAttribute('y').hasValue()) {\n      this.getAttribute('y', true).setValue(0)\n    }\n\n    let {\n      width,\n      height\n    } = screen.viewPort\n\n    if (!this.getStyle('width').hasValue()) {\n      this.getStyle('width', true).setValue('100%')\n    }\n\n    if (!this.getStyle('height').hasValue()) {\n      this.getStyle('height', true).setValue('100%')\n    }\n\n    if (!this.getStyle('color').hasValue()) {\n      this.getStyle('color', true).setValue('black')\n    }\n\n    const refXAttr = this.getAttribute('refX')\n    const refYAttr = this.getAttribute('refY')\n    const viewBoxAttr = this.getAttribute('viewBox')\n    const viewBox = viewBoxAttr.hasValue()\n      ? toNumbers(viewBoxAttr.getString())\n      : null\n    const clip = !this.root\n      && this.getStyle('overflow').getValue('hidden') !== 'visible'\n    let minX = 0\n    let minY = 0\n    let clipX = 0\n    let clipY = 0\n\n    if (viewBox) {\n      minX = viewBox[0]\n      minY = viewBox[1]\n    }\n\n    if (!this.root) {\n      width = this.getStyle('width').getPixels('x')\n      height = this.getStyle('height').getPixels('y')\n\n      if (this.type === 'marker') {\n        clipX = minX\n        clipY = minY\n        minX = 0\n        minY = 0\n      }\n    }\n\n    screen.viewPort.setCurrent(width, height)\n\n    // Default value of transform-origin is center only for root SVG elements\n    // https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/transform-origin\n    if (this.node // is not temporary SVGElement\n      && (!this.parent || this.node.parentNode?.nodeName === 'foreignObject')\n      && this.getStyle('transform', false, true).hasValue()\n      && !this.getStyle('transform-origin', false, true).hasValue()\n    ) {\n      this.getStyle('transform-origin', true, true).setValue('50% 50%')\n    }\n\n    super.setContext(ctx)\n\n    ctx.translate(\n      this.getAttribute('x').getPixels('x'),\n      this.getAttribute('y').getPixels('y')\n    )\n\n    if (viewBox) {\n      width = viewBox[2]\n      height = viewBox[3]\n    }\n\n    document.setViewBox({\n      ctx,\n      aspectRatio: this.getAttribute('preserveAspectRatio').getString(),\n      width: screen.viewPort.width,\n      desiredWidth: width,\n      height: screen.viewPort.height,\n      desiredHeight: height,\n      minX,\n      minY,\n      refX: refXAttr.getValue() as number,\n      refY: refYAttr.getValue() as number,\n      clip,\n      clipX,\n      clipY\n    })\n\n    if (viewBox) {\n      screen.viewPort.removeCurrent()\n      screen.viewPort.setCurrent(width, height)\n    }\n  }\n\n  override clearContext(ctx: RenderingContext2D) {\n    super.clearContext(ctx)\n\n    this.document.screen.viewPort.removeCurrent()\n  }\n\n  /**\n   * Resize SVG to fit in given size.\n   * @param width\n   * @param height\n   * @param preserveAspectRatio\n   */\n  resize(\n    width: number,\n    height = width,\n    preserveAspectRatio: boolean | string = false\n  ) {\n    const widthAttr = this.getAttribute('width', true)\n    const heightAttr = this.getAttribute('height', true)\n    const viewBoxAttr = this.getAttribute('viewBox')\n    const styleAttr = this.getAttribute('style')\n    const originWidth = widthAttr.getNumber(0)\n    const originHeight = heightAttr.getNumber(0)\n\n    if (preserveAspectRatio) {\n      if (typeof preserveAspectRatio === 'string') {\n        this.getAttribute('preserveAspectRatio', true).setValue(preserveAspectRatio)\n      } else {\n        const preserveAspectRatioAttr = this.getAttribute('preserveAspectRatio')\n\n        if (preserveAspectRatioAttr.hasValue()) {\n          preserveAspectRatioAttr.setValue(preserveAspectRatioAttr.getString().replace(/^\\s*(\\S.*\\S)\\s*$/, '$1'))\n        }\n      }\n    }\n\n    widthAttr.setValue(width)\n    heightAttr.setValue(height)\n\n    if (!viewBoxAttr.hasValue()) {\n      viewBoxAttr.setValue(`0 0 ${originWidth || width} ${originHeight || height}`)\n    }\n\n    if (styleAttr.hasValue()) {\n      const widthStyle = this.getStyle('width')\n      const heightStyle = this.getStyle('height')\n\n      if (widthStyle.hasValue()) {\n        widthStyle.setValue(`${width}px`)\n      }\n\n      if (heightStyle.hasValue()) {\n        heightStyle.setValue(`${height}px`)\n      }\n    }\n  }\n}\n","import { RenderingContext2D } from '../types'\nimport { BoundingBox } from '../BoundingBox'\nimport { PathElement } from './PathElement'\n\nexport class RectElement extends PathElement {\n  override type = 'rect'\n\n  override path(ctx: RenderingContext2D) {\n    const x = this.getAttribute('x').getPixels('x')\n    const y = this.getAttribute('y').getPixels('y')\n    const width = this.getStyle('width', false, true).getPixels('x')\n    const height = this.getStyle('height', false, true).getPixels('y')\n    const rxAttr = this.getAttribute('rx')\n    const ryAttr = this.getAttribute('ry')\n    let rx = rxAttr.getPixels('x')\n    let ry = ryAttr.getPixels('y')\n\n    if (rxAttr.hasValue() && !ryAttr.hasValue()) {\n      ry = rx\n    }\n\n    if (ryAttr.hasValue() && !rxAttr.hasValue()) {\n      rx = ry\n    }\n\n    rx = Math.min(rx, width / 2.0)\n    ry = Math.min(ry, height / 2.0)\n\n    if (ctx) {\n      const KAPPA = 4 * ((Math.sqrt(2) - 1) / 3)\n\n      ctx.beginPath() // always start the path so we don't fill prior paths\n\n      if (height > 0 && width > 0) {\n        ctx.moveTo(x + rx, y)\n        ctx.lineTo(x + width - rx, y)\n        ctx.bezierCurveTo(x + width - rx + (KAPPA * rx), y, x + width, y + ry - (KAPPA * ry), x + width, y + ry)\n        ctx.lineTo(x + width, y + height - ry)\n        ctx.bezierCurveTo(\n          x + width,\n          y + height - ry + (KAPPA * ry),\n          x + width - rx + (KAPPA * rx),\n          y + height,\n          x + width - rx,\n          y + height\n        )\n        ctx.lineTo(x + rx, y + height)\n        ctx.bezierCurveTo(x + rx - (KAPPA * rx), y + height, x, y + height - ry + (KAPPA * ry), x, y + height - ry)\n        ctx.lineTo(x, y + ry)\n        ctx.bezierCurveTo(x, y + ry - (KAPPA * ry), x + rx - (KAPPA * rx), y, x + rx, y)\n        ctx.closePath()\n      }\n    }\n\n    return new BoundingBox(x, y, x + width, y + height)\n  }\n\n  override getMarkers() {\n    return null\n  }\n}\n","import { RenderingContext2D } from '../types'\nimport { BoundingBox } from '../BoundingBox'\nimport { PathElement } from './PathElement'\n\nexport class CircleElement extends PathElement {\n  override type = 'circle'\n\n  override path(ctx: RenderingContext2D) {\n    const cx = this.getAttribute('cx').getPixels('x')\n    const cy = this.getAttribute('cy').getPixels('y')\n    const r = this.getAttribute('r').getPixels()\n\n    if (ctx && r > 0) {\n      ctx.beginPath()\n      ctx.arc(cx, cy, r, 0, Math.PI * 2, false)\n      ctx.closePath()\n    }\n\n    return new BoundingBox(\n      cx - r,\n      cy - r,\n      cx + r,\n      cy + r\n    )\n  }\n\n  override getMarkers() {\n    return null\n  }\n}\n","import { RenderingContext2D } from '../types'\nimport { BoundingBox } from '../BoundingBox'\nimport { PathElement } from './PathElement'\n\nexport class EllipseElement extends PathElement {\n  override type = 'ellipse'\n\n  override path(ctx: RenderingContext2D) {\n    const KAPPA = 4 * ((Math.sqrt(2) - 1) / 3)\n    const rx = this.getAttribute('rx').getPixels('x')\n    const ry = this.getAttribute('ry').getPixels('y')\n    const cx = this.getAttribute('cx').getPixels('x')\n    const cy = this.getAttribute('cy').getPixels('y')\n\n    if (ctx && rx > 0 && ry > 0) {\n      ctx.beginPath()\n      ctx.moveTo(cx + rx, cy)\n      ctx.bezierCurveTo(\n        cx + rx,\n        cy + (KAPPA * ry),\n        cx + (KAPPA * rx),\n        cy + ry,\n        cx,\n        cy + ry\n      )\n      ctx.bezierCurveTo(\n        cx - (KAPPA * rx),\n        cy + ry,\n        cx - rx,\n        cy + (KAPPA * ry),\n        cx - rx,\n        cy\n      )\n      ctx.bezierCurveTo(\n        cx - rx,\n        cy - (KAPPA * ry),\n        cx - (KAPPA * rx),\n        cy - ry,\n        cx,\n        cy - ry\n      )\n      ctx.bezierCurveTo(\n        cx + (KAPPA * rx),\n        cy - ry,\n        cx + rx,\n        cy - (KAPPA * ry),\n        cx + rx,\n        cy\n      )\n      ctx.closePath()\n    }\n\n    return new BoundingBox(\n      cx - rx,\n      cy - ry,\n      cx + rx,\n      cy + ry\n    )\n  }\n\n  override getMarkers() {\n    return null\n  }\n}\n","import { RenderingContext2D } from '../types'\nimport { Point } from '../Point'\nimport { BoundingBox } from '../BoundingBox'\nimport { PathElement, Marker } from './PathElement'\n\nexport class LineElement extends PathElement {\n  override type = 'line'\n\n  getPoints() {\n    return [\n      new Point(\n        this.getAttribute('x1').getPixels('x'),\n        this.getAttribute('y1').getPixels('y')\n      ),\n      new Point(\n        this.getAttribute('x2').getPixels('x'),\n        this.getAttribute('y2').getPixels('y')\n      )\n    ]\n  }\n\n  override path(ctx: RenderingContext2D) {\n    const [\n      {\n        x: x0,\n        y: y0\n      },\n      {\n        x: x1,\n        y: y1\n      }\n    ] = this.getPoints()\n\n    if (ctx) {\n      ctx.beginPath()\n      ctx.moveTo(x0, y0)\n      ctx.lineTo(x1, y1)\n    }\n\n    return new BoundingBox(\n      x0,\n      y0,\n      x1,\n      y1\n    )\n  }\n\n  override getMarkers(): Marker[] {\n    const [p0, p1] = this.getPoints()\n    const a = p0.angleTo(p1)\n\n    return [[p0, a], [p1, a]]\n  }\n}\n","import { RenderingContext2D } from '../types'\nimport { Point } from '../Point'\nimport { BoundingBox } from '../BoundingBox'\nimport { Document } from './Document'\nimport { PathElement, Marker } from './PathElement'\n\nexport class PolylineElement extends PathElement {\n  override type = 'polyline'\n  protected readonly points: Point[] = []\n\n  constructor(\n    document: Document,\n    node: HTMLElement,\n    captureTextNodes?: boolean\n  ) {\n    super(document, node, captureTextNodes)\n\n    this.points = Point.parsePath(\n      this.getAttribute('points').getString()\n    )\n  }\n\n  override path(ctx: RenderingContext2D) {\n    const { points } = this\n    const [\n      {\n        x: x0,\n        y: y0\n      }\n    ] = points\n    const boundingBox = new BoundingBox(x0, y0)\n\n    if (ctx) {\n      ctx.beginPath()\n      ctx.moveTo(x0, y0)\n    }\n\n    points.forEach(({\n      x,\n      y\n    }) => {\n      boundingBox.addPoint(x, y)\n\n      if (ctx) {\n        ctx.lineTo(x, y)\n      }\n    })\n\n    return boundingBox\n  }\n\n  override getMarkers() {\n    const { points } = this\n    const lastIndex = points.length - 1\n    const markers: Marker[] = []\n\n    points.forEach((point, i) => {\n      if (i === lastIndex) {\n        return\n      }\n\n      markers.push([point, point.angleTo(points[i + 1])])\n    })\n\n    if (markers.length > 0) {\n      markers.push([points[points.length - 1], markers[markers.length - 1][1]])\n    }\n\n    return markers\n  }\n}\n","import { RenderingContext2D } from '../types'\nimport { PolylineElement } from './PolylineElement'\n\nexport class PolygonElement extends PolylineElement {\n  override type = 'polygon'\n\n  override path(ctx: RenderingContext2D) {\n    const boundingBox = super.path(ctx)\n    const [\n      {\n        x,\n        y\n      }\n    ] = this.points\n\n    if (ctx) {\n      ctx.lineTo(x, y)\n      ctx.closePath()\n    }\n\n    return boundingBox\n  }\n}\n","import { RenderingContext2D } from '../types'\nimport { Property } from '../Property'\nimport { Element } from './Element'\nimport { SVGElement } from './SVGElement'\n\nexport class PatternElement extends Element {\n  override type = 'pattern'\n\n  createPattern(\n    ctx: RenderingContext2D,\n    _: Element,\n    parentOpacityProp: Property\n  ) {\n    const width = this.getStyle('width').getPixels('x', true)\n    const height = this.getStyle('height').getPixels('y', true)\n    // render me using a temporary svg element\n    const patternSvg = new SVGElement(\n      this.document,\n      null\n    )\n\n    patternSvg.attributes.viewBox = new Property(\n      this.document,\n      'viewBox',\n      this.getAttribute('viewBox').getValue()\n    )\n    patternSvg.attributes.width = new Property(\n      this.document,\n      'width',\n      `${width}px`\n    )\n    patternSvg.attributes.height = new Property(\n      this.document,\n      'height',\n      `${height}px`\n    )\n    patternSvg.attributes.transform = new Property(\n      this.document,\n      'transform',\n      this.getAttribute('patternTransform').getValue()\n    )\n    patternSvg.children = this.children\n\n    const patternCanvas = this.document.createCanvas(width, height)\n    const patternCtx = patternCanvas.getContext('2d')\n    const xAttr = this.getAttribute('x')\n    const yAttr = this.getAttribute('y')\n\n    if (xAttr.hasValue() && yAttr.hasValue()) {\n      patternCtx.translate(\n        xAttr.getPixels('x', true),\n        yAttr.getPixels('y', true)\n      )\n    }\n\n    if (parentOpacityProp.hasValue()) {\n      this.styles['fill-opacity'] = parentOpacityProp\n    } else {\n      Reflect.deleteProperty(this.styles, 'fill-opacity')\n    }\n\n    // render 3x3 grid so when we transform there's no white space on edges\n    for (let x = -1; x <= 1; x++) {\n      for (let y = -1; y <= 1; y++) {\n        patternCtx.save()\n        patternSvg.attributes.x = new Property(\n          this.document,\n          'x',\n          x * patternCanvas.width\n        )\n        patternSvg.attributes.y = new Property(\n          this.document,\n          'y',\n          y * patternCanvas.height\n        )\n        patternSvg.render(patternCtx)\n        patternCtx.restore()\n      }\n    }\n\n    const pattern = ctx.createPattern(patternCanvas as CanvasImageSource, 'repeat')\n\n    return pattern\n  }\n}\n","import { RenderingContext2D } from '../types'\nimport { Point } from '../Point'\nimport { Property } from '../Property'\nimport { Element } from './Element'\nimport { SVGElement } from './SVGElement'\n\nexport class MarkerElement extends Element {\n  override type = 'marker'\n\n  override render(ctx: RenderingContext2D, point?: Point, angle?: number) {\n    if (!point) {\n      return\n    }\n\n    const {\n      x,\n      y\n    } = point\n    const orient = this.getAttribute('orient').getString('auto')\n    const markerUnits = this.getAttribute('markerUnits').getString('strokeWidth')\n\n    ctx.translate(x, y)\n\n    if (orient === 'auto') {\n      ctx.rotate(angle)\n    }\n\n    if (markerUnits === 'strokeWidth') {\n      ctx.scale(ctx.lineWidth, ctx.lineWidth)\n    }\n\n    ctx.save()\n\n    // render me using a temporary svg element\n    const markerSvg = new SVGElement(this.document)\n\n    markerSvg.type = this.type\n    markerSvg.attributes.viewBox = new Property(\n      this.document,\n      'viewBox',\n      this.getAttribute('viewBox').getValue()\n    )\n    markerSvg.attributes.refX = new Property(\n      this.document,\n      'refX',\n      this.getAttribute('refX').getValue()\n    )\n    markerSvg.attributes.refY = new Property(\n      this.document,\n      'refY',\n      this.getAttribute('refY').getValue()\n    )\n    markerSvg.attributes.width = new Property(\n      this.document,\n      'width',\n      this.getAttribute('markerWidth').getValue()\n    )\n    markerSvg.attributes.height = new Property(\n      this.document,\n      'height',\n      this.getAttribute('markerHeight').getValue()\n    )\n    markerSvg.attributes.overflow = new Property(\n      this.document,\n      'overflow',\n      this.getAttribute('overflow').getValue()\n    )\n    markerSvg.attributes.fill = new Property(\n      this.document,\n      'fill',\n      this.getAttribute('fill').getColor('black')\n    )\n    markerSvg.attributes.stroke = new Property(\n      this.document,\n      'stroke',\n      this.getAttribute('stroke').getValue('none')\n    )\n    markerSvg.children = this.children\n\n    markerSvg.render(ctx)\n\n    ctx.restore()\n\n    if (markerUnits === 'strokeWidth') {\n      ctx.scale(1 / ctx.lineWidth, 1 / ctx.lineWidth)\n    }\n\n    if (orient === 'auto') {\n      ctx.rotate(-angle)\n    }\n\n    ctx.translate(-x, -y)\n  }\n}\n","import { Element } from './Element'\n\nexport class DefsElement extends Element {\n  override type = 'defs'\n\n  override render() {\n    // NOOP\n  }\n}\n","import { RenderingContext2D } from '../types'\nimport { BoundingBox } from '../BoundingBox'\nimport { PathElement } from './PathElement'\nimport { RenderedElement } from './RenderedElement'\n\nexport class GElement extends RenderedElement {\n  override type = 'g'\n\n  getBoundingBox(ctx: RenderingContext2D) {\n    const boundingBox = new BoundingBox()\n\n    this.children.forEach((child: PathElement) => {\n      boundingBox.addBoundingBox(child.getBoundingBox(ctx))\n    })\n\n    return boundingBox\n  }\n}\n","import { RenderingContext2D } from '../types'\nimport { Screen } from '../Screen'\nimport { Property } from '../Property'\nimport { Document } from './Document'\nimport { Element } from './Element'\nimport { PathElement } from './PathElement'\nimport { SVGElement } from './SVGElement'\nimport { RectElement } from './RectElement'\nimport { StopElement } from './StopElement'\nimport { GElement } from './GElement'\n\nexport abstract class GradientElement extends Element {\n  readonly attributesToInherit = ['gradientUnits']\n\n  protected readonly stops: StopElement[] = []\n\n  constructor(\n    document: Document,\n    node: HTMLElement,\n    captureTextNodes?: boolean\n  ) {\n    super(document, node, captureTextNodes)\n\n    const {\n      stops,\n      children\n    } = this\n\n    children.forEach((child) => {\n      if (child.type === 'stop') {\n        stops.push(child as StopElement)\n      }\n    })\n  }\n\n  abstract getGradient(ctx: RenderingContext2D, element: PathElement): CanvasGradient | null\n\n  getGradientUnits() {\n    return this.getAttribute('gradientUnits').getString('objectBoundingBox')\n  }\n\n  createGradient(\n    ctx: RenderingContext2D,\n    element: PathElement,\n    parentOpacityProp: Property\n  ) {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias, consistent-this\n    let stopsContainer = this\n\n    if (this.getHrefAttribute().hasValue()) {\n      stopsContainer = this.getHrefAttribute().getDefinition()\n      this.inheritStopContainer(stopsContainer)\n    }\n\n    const { stops } = stopsContainer\n    const gradient = this.getGradient(ctx, element)\n\n    if (!gradient) {\n      return this.addParentOpacity(\n        parentOpacityProp,\n        stops[stops.length - 1].color\n      )\n    }\n\n    stops.forEach((stop: StopElement) => {\n      gradient.addColorStop(\n        stop.offset,\n        this.addParentOpacity(\n          parentOpacityProp,\n          stop.color\n        )\n      )\n    })\n\n    if (this.getAttribute('gradientTransform').hasValue()) {\n      // render as transformed pattern on temporary canvas\n      const { document } = this\n      const { MAX_VIRTUAL_PIXELS } = Screen\n      const { viewPort } = document.screen\n      const rootView = viewPort.getRoot()\n      const rect = new RectElement(document)\n\n      rect.attributes.x = new Property(\n        document,\n        'x',\n        -MAX_VIRTUAL_PIXELS / 3.0\n      )\n      rect.attributes.y = new Property(\n        document,\n        'y',\n        -MAX_VIRTUAL_PIXELS / 3.0\n      )\n      rect.attributes.width = new Property(\n        document,\n        'width',\n        MAX_VIRTUAL_PIXELS\n      )\n      rect.attributes.height = new Property(\n        document,\n        'height',\n        MAX_VIRTUAL_PIXELS\n      )\n\n      const group = new GElement(document)\n\n      group.attributes.transform = new Property(\n        document,\n        'transform',\n        this.getAttribute('gradientTransform').getValue()\n      )\n      group.children = [rect]\n\n      const patternSvg = new SVGElement(document)\n\n      patternSvg.attributes.x = new Property(\n        document,\n        'x',\n        0\n      )\n      patternSvg.attributes.y = new Property(\n        document,\n        'y',\n        0\n      )\n      patternSvg.attributes.width = new Property(\n        document,\n        'width',\n        rootView.width\n      )\n      patternSvg.attributes.height = new Property(\n        document,\n        'height',\n        rootView.height\n      )\n      patternSvg.children = [group]\n\n      const patternCanvas = document.createCanvas(rootView.width, rootView.height)\n      const patternCtx = patternCanvas.getContext('2d')\n\n      patternCtx.fillStyle = gradient\n      patternSvg.render(patternCtx)\n\n      return patternCtx.createPattern(patternCanvas as CanvasImageSource, 'no-repeat')\n    }\n\n    return gradient\n  }\n\n  protected inheritStopContainer(stopsContainer: Element) {\n    this.attributesToInherit.forEach((attributeToInherit) => {\n      if (!this.getAttribute(attributeToInherit).hasValue()\n        && stopsContainer.getAttribute(attributeToInherit).hasValue()\n      ) {\n        this.getAttribute(attributeToInherit, true)\n          .setValue(stopsContainer.getAttribute(attributeToInherit).getValue())\n      }\n    })\n  }\n\n  protected addParentOpacity(parentOpacityProp: Property, color: string) {\n    if (parentOpacityProp.hasValue()) {\n      const colorProp = new Property(\n        this.document,\n        'color',\n        color\n      )\n\n      return colorProp.addOpacity(parentOpacityProp).getColor()\n    }\n\n    return color\n  }\n}\n","import { RenderingContext2D } from '../types'\nimport { Document } from './Document'\nimport { PathElement } from './PathElement'\nimport { GradientElement } from './GradientElement'\n\nexport class LinearGradientElement extends GradientElement {\n  override type = 'linearGradient'\n\n  constructor(\n    document: Document,\n    node: HTMLElement,\n    captureTextNodes?: boolean\n  ) {\n    super(document, node, captureTextNodes)\n\n    this.attributesToInherit.push(\n      'x1',\n      'y1',\n      'x2',\n      'y2'\n    )\n  }\n\n  getGradient(ctx: RenderingContext2D, element: PathElement) {\n    const isBoundingBoxUnits = this.getGradientUnits() === 'objectBoundingBox'\n    const boundingBox = isBoundingBoxUnits\n      ? element.getBoundingBox(ctx)\n      : null\n\n    if (isBoundingBoxUnits && !boundingBox) {\n      return null\n    }\n\n    if (!this.getAttribute('x1').hasValue()\n      && !this.getAttribute('y1').hasValue()\n      && !this.getAttribute('x2').hasValue()\n      && !this.getAttribute('y2').hasValue()\n    ) {\n      this.getAttribute('x1', true).setValue(0)\n      this.getAttribute('y1', true).setValue(0)\n      this.getAttribute('x2', true).setValue(1)\n      this.getAttribute('y2', true).setValue(0)\n    }\n\n    const x1 = isBoundingBoxUnits\n      ? boundingBox.x + boundingBox.width * this.getAttribute('x1').getNumber()\n      : this.getAttribute('x1').getPixels('x')\n    const y1 = isBoundingBoxUnits\n      ? boundingBox.y + boundingBox.height * this.getAttribute('y1').getNumber()\n      : this.getAttribute('y1').getPixels('y')\n    const x2 = isBoundingBoxUnits\n      ? boundingBox.x + boundingBox.width * this.getAttribute('x2').getNumber()\n      : this.getAttribute('x2').getPixels('x')\n    const y2 = isBoundingBoxUnits\n      ? boundingBox.y + boundingBox.height * this.getAttribute('y2').getNumber()\n      : this.getAttribute('y2').getPixels('y')\n\n    if (x1 === x2 && y1 === y2) {\n      return null\n    }\n\n    return ctx.createLinearGradient(x1, y1, x2, y2)\n  }\n}\n","import { RenderingContext2D } from '../types'\nimport { Document } from './Document'\nimport { PathElement } from './PathElement'\nimport { GradientElement } from './GradientElement'\n\nexport class RadialGradientElement extends GradientElement {\n  override type = 'radialGradient'\n\n  constructor(\n    document: Document,\n    node: HTMLElement,\n    captureTextNodes?: boolean\n  ) {\n    super(document, node, captureTextNodes)\n\n    this.attributesToInherit.push(\n      'cx',\n      'cy',\n      'r',\n      'fx',\n      'fy',\n      'fr'\n    )\n  }\n\n  getGradient(ctx: RenderingContext2D, element: PathElement) {\n    const isBoundingBoxUnits = this.getGradientUnits() === 'objectBoundingBox'\n    const boundingBox = element.getBoundingBox(ctx)\n\n    if (isBoundingBoxUnits && !boundingBox) {\n      return null\n    }\n\n    if (!this.getAttribute('cx').hasValue()) {\n      this.getAttribute('cx', true).setValue('50%')\n    }\n\n    if (!this.getAttribute('cy').hasValue()) {\n      this.getAttribute('cy', true).setValue('50%')\n    }\n\n    if (!this.getAttribute('r').hasValue()) {\n      this.getAttribute('r', true).setValue('50%')\n    }\n\n    const cx = isBoundingBoxUnits\n      ? boundingBox.x + boundingBox.width * this.getAttribute('cx').getNumber()\n      : this.getAttribute('cx').getPixels('x')\n    const cy = isBoundingBoxUnits\n      ? boundingBox.y + boundingBox.height * this.getAttribute('cy').getNumber()\n      : this.getAttribute('cy').getPixels('y')\n    let fx = cx\n    let fy = cy\n\n    if (this.getAttribute('fx').hasValue()) {\n      fx = isBoundingBoxUnits\n        ? boundingBox.x + boundingBox.width * this.getAttribute('fx').getNumber()\n        : this.getAttribute('fx').getPixels('x')\n    }\n\n    if (this.getAttribute('fy').hasValue()) {\n      fy = isBoundingBoxUnits\n        ? boundingBox.y + boundingBox.height * this.getAttribute('fy').getNumber()\n        : this.getAttribute('fy').getPixels('y')\n    }\n\n    const r = isBoundingBoxUnits\n      ? (boundingBox.width + boundingBox.height) / 2.0 * this.getAttribute('r').getNumber()\n      : this.getAttribute('r').getPixels()\n    const fr = this.getAttribute('fr').getPixels()\n\n    return ctx.createRadialGradient(fx, fy, fr, cx, cy, r)\n  }\n}\n","import { Document } from './Document'\nimport { Element } from './Element'\n\nexport class StopElement extends Element {\n  override type = 'stop'\n  readonly offset: number\n  readonly color: string\n\n  constructor(\n    document: Document,\n    node: HTMLElement,\n    captureTextNodes?: boolean\n  ) {\n    super(document, node, captureTextNodes)\n\n    const offset = Math.max(0, Math.min(1, this.getAttribute('offset').getNumber()))\n    const stopOpacity = this.getStyle('stop-opacity')\n    let stopColor = this.getStyle('stop-color', true)\n\n    if (stopColor.getString() === '') {\n      stopColor.setValue('#000')\n    }\n\n    if (stopOpacity.hasValue()) {\n      stopColor = stopColor.addOpacity(stopOpacity)\n    }\n\n    this.offset = offset\n    this.color = stopColor.getColor()\n  }\n}\n","import { Property } from '../Property'\nimport { Document } from './Document'\nimport { Element } from './Element'\n\nexport interface IProgress {\n  from: Property\n  to: Property\n  progress: number\n}\n\nexport class AnimateElement extends Element {\n  override type = 'animate'\n  protected readonly begin: number\n  protected readonly maxDuration: number\n  protected readonly from: Property\n  protected readonly to: Property\n  protected readonly values: Property<string[]>\n  protected duration = 0\n  protected initialValue: string | undefined\n  protected initialUnits = ''\n  protected removed = false\n  protected frozen = false\n\n  constructor(\n    document: Document,\n    node: HTMLElement,\n    captureTextNodes?: boolean\n  ) {\n    super(document, node, captureTextNodes)\n\n    document.screen.animations.push(this)\n\n    this.begin = this.getAttribute('begin').getMilliseconds()\n    this.maxDuration = this.begin + this.getAttribute('dur').getMilliseconds()\n    this.from = this.getAttribute('from')\n    this.to = this.getAttribute('to')\n    this.values = new Property<string[] | null>(document, 'values', null)\n\n    const valuesAttr = this.getAttribute('values')\n\n    if (valuesAttr.hasValue()) {\n      this.values.setValue(valuesAttr.getString().split(';'))\n    }\n  }\n\n  protected getProperty() {\n    const attributeType = this.getAttribute('attributeType').getString()\n    const attributeName = this.getAttribute('attributeName').getString()\n\n    if (attributeType === 'CSS') {\n      return this.parent.getStyle(attributeName, true)\n    }\n\n    return this.parent.getAttribute(attributeName, true)\n  }\n\n  calcValue() {\n    const { initialUnits } = this\n    const {\n      progress,\n      from,\n      to\n    } = this.getProgress()\n    // tween value linearly\n    let newValue = from.getNumber() + (to.getNumber() - from.getNumber()) * progress\n\n    if (initialUnits === '%') {\n      newValue *= 100.0 // numValue() returns 0-1 whereas properties are 0-100\n    }\n\n    return `${newValue}${initialUnits}`\n  }\n\n  update(delta: number) {\n    const { parent } = this\n    const prop = this.getProperty()\n\n    // set initial value\n    if (!this.initialValue) {\n      this.initialValue = prop.getString()\n      this.initialUnits = prop.getUnits()\n    }\n\n    // if we're past the end time\n    if (this.duration > this.maxDuration) {\n      const fill = this.getAttribute('fill').getString('remove')\n\n      // loop for indefinitely repeating animations\n      if (this.getAttribute('repeatCount').getString() === 'indefinite'\n        || this.getAttribute('repeatDur').getString() === 'indefinite'\n      ) {\n        this.duration = 0\n      } else\n      if (fill === 'freeze' && !this.frozen) {\n        this.frozen = true\n\n        if (parent && prop) {\n          parent.animationFrozen = true\n          parent.animationFrozenValue = prop.getString()\n        }\n      } else\n      if (fill === 'remove' && !this.removed) {\n        this.removed = true\n\n        if (parent && prop) {\n          prop.setValue(\n            parent.animationFrozen\n              ? parent.animationFrozenValue\n              : this.initialValue\n          )\n        }\n\n        return true\n      }\n\n      return false\n    }\n\n    this.duration += delta\n\n    // if we're past the begin time\n    let updated = false\n\n    if (this.begin < this.duration) {\n      let newValue = this.calcValue() // tween\n      const typeAttr = this.getAttribute('type')\n\n      if (typeAttr.hasValue()) {\n        // for transform, etc.\n        const type = typeAttr.getString()\n\n        newValue = `${type}(${newValue})`\n      }\n\n      prop.setValue(newValue)\n      updated = true\n    }\n\n    return updated\n  }\n\n  getProgress(): IProgress {\n    const {\n      document,\n      values\n    } = this\n    let progress = (this.duration - this.begin) / (this.maxDuration - this.begin)\n    let from: Property\n    let to: Property\n\n    if (values.hasValue()) {\n      const p = progress * (values.getValue().length - 1)\n      const lb = Math.floor(p)\n      const ub = Math.ceil(p)\n      let value: string | undefined\n\n      value = values.getValue()[lb]\n      from = new Property(\n        document,\n        'from',\n        value ? parseFloat(value) : 0\n      )\n\n      value = values.getValue()[ub]\n      to = new Property(\n        document,\n        'to',\n        value ? parseFloat(value) : 0\n      )\n\n      progress = (p - lb) / (ub - lb)\n    } else {\n      from = this.from\n      to = this.to\n    }\n\n    return {\n      progress,\n      from,\n      to\n    }\n  }\n}\n","import RGBColor from 'rgbcolor'\nimport { AnimateElement } from './AnimateElement'\n\nexport class AnimateColorElement extends AnimateElement {\n  override type = 'animateColor'\n\n  override calcValue() {\n    const {\n      progress,\n      from,\n      to\n    } = this.getProgress()\n    const colorFrom = new RGBColor(from.getColor())\n    const colorTo = new RGBColor(to.getColor())\n\n    if (colorFrom.ok && colorTo.ok) {\n      // tween color linearly\n      const r = colorFrom.r + (colorTo.r - colorFrom.r) * progress\n      const g = colorFrom.g + (colorTo.g - colorFrom.g) * progress\n      const b = colorFrom.b + (colorTo.b - colorFrom.b) * progress\n\n      // ? alpha\n      return `rgb(${\n        Math.floor(r)\n      }, ${\n        Math.floor(g)\n      }, ${\n        Math.floor(b)\n      })`\n    }\n\n    return this.getAttribute('from').getColor()\n  }\n}\n","import { toNumbers } from '../util'\nimport { AnimateElement } from './AnimateElement'\n\nexport class AnimateTransformElement extends AnimateElement {\n  override type = 'animateTransform'\n\n  override calcValue() {\n    const {\n      progress,\n      from,\n      to\n    } = this.getProgress()\n    // tween value linearly\n    const transformFrom = toNumbers(from.getString())\n    const transformTo = toNumbers(to.getString())\n    const newValue = transformFrom.map((from, i) => {\n      const to = transformTo[i]\n\n      return from + (to - from) * progress\n    }).join(' ')\n\n    return newValue\n  }\n}\n","import { Document } from './Document'\nimport { Element } from './Element'\n\nexport class FontFaceElement extends Element {\n  override type = 'font-face'\n  readonly ascent: number\n  readonly descent: number\n  readonly unitsPerEm: number\n\n  constructor(\n    document: Document,\n    node: HTMLElement,\n    captureTextNodes?: boolean\n  ) {\n    super(document, node, captureTextNodes)\n\n    this.ascent = this.getAttribute('ascent').getNumber()\n    this.descent = this.getAttribute('descent').getNumber()\n    this.unitsPerEm = this.getAttribute('units-per-em').getNumber()\n  }\n}\n","import { Document } from './Document'\nimport { PathElement } from './PathElement'\n\nexport type ArabicForm = 'isolated' | 'terminal' | 'medial' | 'initial'\n\nexport class GlyphElement extends PathElement {\n  override type = 'glyph'\n  readonly horizAdvX: number\n  readonly unicode: string\n  readonly arabicForm: ArabicForm | undefined\n\n  constructor(\n    document: Document,\n    node: HTMLElement,\n    captureTextNodes?: boolean\n  ) {\n    super(document, node, captureTextNodes)\n\n    this.horizAdvX = this.getAttribute('horiz-adv-x').getNumber()\n    this.unicode = this.getAttribute('unicode').getString()\n    this.arabicForm = this.getAttribute('arabic-form').getString() as ArabicForm\n  }\n}\n","import { GlyphElement } from './GlyphElement'\n\nexport class MissingGlyphElement extends GlyphElement {\n  override type = 'missing-glyph'\n  override readonly horizAdvX = 0\n}\n","import { Document } from './Document'\nimport { Element } from './Element'\nimport { FontFaceElement } from './FontFaceElement'\nimport { MissingGlyphElement } from './MissingGlyphElement'\nimport { ArabicForm, GlyphElement } from './GlyphElement'\n\nexport class FontElement extends Element {\n  override type = 'font'\n  readonly isArabic: boolean = false\n  readonly missingGlyph: MissingGlyphElement | undefined\n  readonly glyphs: Record<string, GlyphElement> = {}\n  readonly arabicGlyphs: Record<string, Partial<Record<ArabicForm, GlyphElement>>> = {}\n  readonly horizAdvX: number\n  readonly isRTL: boolean = false\n  readonly fontFace: FontFaceElement | undefined\n\n  constructor(\n    document: Document,\n    node: HTMLElement,\n    captureTextNodes?: boolean\n  ) {\n    super(document, node, captureTextNodes)\n\n    this.horizAdvX = this.getAttribute('horiz-adv-x').getNumber()\n\n    const { definitions } = document\n    const { children } = this\n\n    for (const child of children) {\n      if (child instanceof FontFaceElement) {\n        this.fontFace = child\n\n        const fontFamilyStyle = child.getStyle('font-family')\n\n        if (fontFamilyStyle.hasValue()) {\n          definitions[fontFamilyStyle.getString()] = this\n        }\n      } else\n      if (child instanceof MissingGlyphElement) {\n        this.missingGlyph = child\n      } else\n      if (child instanceof GlyphElement) {\n        if (child.arabicForm) {\n          this.isRTL = true\n          this.isArabic = true\n\n          const arabicGlyph = this.arabicGlyphs[child.unicode]\n\n          if (typeof arabicGlyph === 'undefined') {\n            this.arabicGlyphs[child.unicode] = {\n              [child.arabicForm]: child\n            }\n          } else {\n            arabicGlyph[child.arabicForm] = child\n          }\n        } else {\n          this.glyphs[child.unicode] = child\n        }\n      }\n    }\n  }\n\n  override render() {\n    // NO RENDER\n  }\n}\n","import { TextElement } from './TextElement'\n\nexport class TRefElement extends TextElement {\n  override type = 'tref'\n\n  override getText() {\n    const element = this.getHrefAttribute().getDefinition()\n\n    if (element) {\n      const firstChild = element.children[0] as TextElement\n\n      if (firstChild) {\n        return firstChild.getText()\n      }\n    }\n\n    return ''\n  }\n}\n","import { RenderingContext2D } from '../types'\nimport { Property } from '../Property'\nimport { Font } from '../Font'\nimport { BoundingBox } from '../BoundingBox'\nimport { Document } from './Document'\nimport { TextElement } from './TextElement'\nimport { GElement } from './GElement'\n\nexport class AElement extends TextElement {\n  override type = 'a'\n  protected readonly hasText: boolean\n  protected readonly text: string\n\n  constructor(\n    document: Document,\n    node: HTMLElement,\n    captureTextNodes?: boolean\n  ) {\n    super(document, node, captureTextNodes)\n\n    const { childNodes } = node\n    const firstChild = childNodes[0]\n    const hasText = childNodes.length > 0\n      && Array.from(childNodes).every(node => node.nodeType === 3)\n\n    this.hasText = hasText\n    this.text = hasText\n      ? this.getTextFromNode(firstChild)\n      : ''\n  }\n\n  override getText() {\n    return this.text\n  }\n\n  override renderChildren(ctx: RenderingContext2D) {\n    if (this.hasText) {\n      // render as text element\n      super.renderChildren(ctx)\n\n      const {\n        document,\n        x,\n        y\n      } = this\n      const { mouse } = document.screen\n      const fontSize = new Property(\n        document,\n        'fontSize',\n        Font.parse(document.ctx.font).fontSize\n      )\n\n      // Do not calc bounding box if mouse is not working.\n      if (mouse.isWorking()) {\n        mouse.checkBoundingBox(\n          this,\n          new BoundingBox(\n            x,\n            y - fontSize.getPixels('y'),\n            x + this.measureText(ctx),\n            y\n          )\n        )\n      }\n    } else\n    if (this.children.length > 0) {\n      // render as temporary group\n      const g = new GElement(this.document)\n\n      g.children = this.children\n      g.parent = this\n      g.render(ctx)\n    }\n  }\n\n  onClick() {\n    const { window } = this.document\n\n    if (window) {\n      window.open(this.getHrefAttribute().getString())\n    }\n  }\n\n  onMouseMove() {\n    const ctx = this.document.ctx as CanvasRenderingContext2D\n\n    ctx.canvas.style.cursor = 'pointer'\n  }\n}\n","import { RenderingContext2D } from '../types'\nimport {\n  PSEUDO_ZERO,\n  CB1,\n  CB2,\n  CB3,\n  CB4,\n  QB1,\n  QB2,\n  QB3\n} from '../util'\nimport { PathParser, CommandType } from '../PathParser'\nimport { Document } from './Document'\nimport { TextElement } from './TextElement'\nimport { PathElement } from './PathElement'\n\nexport interface IPoint {\n  x: number\n  y: number\n}\n\nexport interface IPathCommand {\n  type: CommandType\n  points: number[]\n  start?: IPoint\n  pathLength: number\n}\n\ninterface ICachedPoint extends IPoint {\n  distance: number\n}\n\ninterface IEquidistantCache {\n  step: number\n  precision: number\n  points: ICachedPoint[]\n}\n\ninterface IGlyphInfo {\n  // transposeX: number;\n  // transposeY: number;\n  text: string\n  rotation: number\n  p0: ICachedPoint\n  p1: ICachedPoint\n}\n\nexport class TextPathElement extends TextElement {\n  override type = 'textPath'\n  protected textWidth = 0\n  protected textHeight = 0\n  protected pathLength = -1\n  protected glyphInfo: IGlyphInfo[] = null\n  protected readonly text: string\n  protected readonly dataArray: IPathCommand[]\n  private letterSpacingCache: number[] = []\n  private equidistantCache: IEquidistantCache\n  private readonly measuresCache = new Map<string, number>([['', 0]])\n\n  constructor(\n    document: Document,\n    node: HTMLElement,\n    captureTextNodes?: boolean\n  ) {\n    super(document, node, captureTextNodes)\n\n    const pathElement = this.getHrefAttribute().getDefinition<PathElement>()\n\n    this.text = this.getTextFromNode()\n    this.dataArray = this.parsePathData(pathElement)\n  }\n\n  override getText() {\n    return this.text\n  }\n\n  path(ctx: RenderingContext2D) {\n    const { dataArray } = this\n\n    if (ctx) {\n      ctx.beginPath()\n    }\n\n    dataArray.forEach(({\n      type,\n      points\n    }) => {\n      switch (type) {\n        case PathParser.LINE_TO:\n\n          if (ctx) {\n            ctx.lineTo(points[0], points[1])\n          }\n\n          break\n\n        case PathParser.MOVE_TO:\n\n          if (ctx) {\n            ctx.moveTo(points[0], points[1])\n          }\n\n          break\n\n        case PathParser.CURVE_TO:\n\n          if (ctx) {\n            ctx.bezierCurveTo(\n              points[0],\n              points[1],\n              points[2],\n              points[3],\n              points[4],\n              points[5]\n            )\n          }\n\n          break\n\n        case PathParser.QUAD_TO:\n\n          if (ctx) {\n            ctx.quadraticCurveTo(\n              points[0],\n              points[1],\n              points[2],\n              points[3]\n            )\n          }\n\n          break\n\n        case PathParser.ARC: {\n          const [\n            cx,\n            cy,\n            rx,\n            ry,\n            theta,\n            dTheta,\n            psi,\n            fs\n          ] = points\n          const r = rx > ry ? rx : ry\n          const scaleX = rx > ry ? 1 : rx / ry\n          const scaleY = rx > ry ? ry / rx : 1\n\n          if (ctx) {\n            ctx.translate(cx, cy)\n            ctx.rotate(psi)\n            ctx.scale(scaleX, scaleY)\n            ctx.arc(0, 0, r, theta, theta + dTheta, Boolean(1 - fs))\n            ctx.scale(1 / scaleX, 1 / scaleY)\n            ctx.rotate(-psi)\n            ctx.translate(-cx, -cy)\n          }\n\n          break\n        }\n\n        case PathParser.CLOSE_PATH:\n\n          if (ctx) {\n            ctx.closePath()\n          }\n\n          break\n\n        default:\n      }\n    })\n  }\n\n  override renderChildren(ctx: RenderingContext2D) {\n    this.setTextData(ctx)\n    ctx.save()\n\n    const textDecoration = this.parent.getStyle('text-decoration').getString()\n    const fontSize = this.getFontSize()\n    const { glyphInfo } = this\n    const fill = ctx.fillStyle\n\n    if (textDecoration === 'underline') {\n      ctx.beginPath()\n    }\n\n    glyphInfo.forEach((glyph, i) => {\n      const {\n        p0,\n        p1,\n        rotation,\n        text: partialText\n      } = glyph\n\n      ctx.save()\n      ctx.translate(p0.x, p0.y)\n      ctx.rotate(rotation)\n\n      if (ctx.fillStyle) {\n        ctx.fillText(partialText, 0, 0)\n      }\n\n      if (ctx.strokeStyle) {\n        ctx.strokeText(partialText, 0, 0)\n      }\n\n      ctx.restore()\n\n      if (textDecoration === 'underline') {\n        if (i === 0) {\n          ctx.moveTo(p0.x, p0.y + fontSize / 8)\n        }\n\n        ctx.lineTo(p1.x, p1.y + fontSize / 5)\n      }\n\n      // // To assist with debugging visually, uncomment following\n      //\n      // ctx.beginPath();\n      // if (i % 2)\n      //   ctx.strokeStyle = 'red';\n      // else\n      //   ctx.strokeStyle = 'green';\n      // ctx.moveTo(p0.x, p0.y);\n      // ctx.lineTo(p1.x, p1.y);\n      // ctx.stroke();\n      // ctx.closePath();\n    })\n\n    if (textDecoration === 'underline') {\n      ctx.lineWidth = fontSize / 20\n      ctx.strokeStyle = fill\n      ctx.stroke()\n      ctx.closePath()\n    }\n\n    ctx.restore()\n  }\n\n  protected getLetterSpacingAt(idx = 0) {\n    return this.letterSpacingCache[idx] || 0\n  }\n\n  protected findSegmentToFitChar(\n    ctx: RenderingContext2D,\n    anchor: string,\n    textFullWidth: number,\n    fullPathWidth: number,\n    spacesNumber: number,\n    inputOffset: number,\n    dy: number,\n    c: string,\n    charI: number\n  ) {\n    let offset = inputOffset\n    let glyphWidth = this.measureText(ctx, c)\n\n    if (c === ' '\n      && anchor === 'justify'\n      && textFullWidth < fullPathWidth\n    ) {\n      glyphWidth += (fullPathWidth - textFullWidth) / spacesNumber\n    }\n\n    if (charI > -1) {\n      offset += this.getLetterSpacingAt(charI)\n    }\n\n    const splineStep = this.textHeight / 20\n    const p0 = this.getEquidistantPointOnPath(offset, splineStep, 0)\n    const p1 = this.getEquidistantPointOnPath(offset + glyphWidth, splineStep, 0)\n    const segment = {\n      p0,\n      p1\n    }\n    const rotation = p0 && p1\n      ? Math.atan2(\n        p1.y - p0.y,\n        p1.x - p0.x\n      )\n      : 0\n\n    if (dy) {\n      const dyX = Math.cos(Math.PI / 2 + rotation) * dy\n      const dyY = Math.cos(-rotation) * dy\n\n      segment.p0 = {\n        ...p0,\n        x: p0.x + dyX,\n        y: p0.y + dyY\n      }\n      segment.p1 = {\n        ...p1,\n        x: p1.x + dyX,\n        y: p1.y + dyY\n      }\n    }\n\n    offset += glyphWidth\n\n    return {\n      offset,\n      segment,\n      rotation\n    }\n  }\n\n  protected override measureText(\n    ctx: RenderingContext2D,\n    text?: string\n  ) {\n    const { measuresCache } = this\n    const targetText = text || this.getText()\n\n    if (measuresCache.has(targetText)) {\n      return measuresCache.get(targetText)\n    }\n\n    const measure = this.measureTargetText(ctx, targetText)\n\n    measuresCache.set(targetText, measure)\n\n    return measure\n  }\n\n  // This method supposes what all custom fonts already loaded.\n  // If some font will be loaded after this method call, <textPath> will not be rendered correctly.\n  // You need to call this method manually to update glyphs cache.\n  protected setTextData(ctx: RenderingContext2D) {\n    if (this.glyphInfo) {\n      return\n    }\n\n    const renderText = this.getText()\n    const chars = renderText.split('')\n    const spacesNumber = renderText.split(' ').length - 1\n    const dx = this.parent.getAttribute('dx').split().map(_ => _.getPixels('x'))\n    const dy = this.parent.getAttribute('dy').getPixels('y')\n    const anchor = this.parent.getStyle('text-anchor').getString('start')\n    const thisSpacing = this.getStyle('letter-spacing')\n    const parentSpacing = this.parent.getStyle('letter-spacing')\n    let letterSpacing = 0\n\n    if (!thisSpacing.hasValue()\n      || thisSpacing.getValue() === 'inherit'\n    ) {\n      letterSpacing = parentSpacing.getPixels()\n    } else\n    if (thisSpacing.hasValue()) {\n      if (thisSpacing.getValue() !== 'initial'\n        && thisSpacing.getValue() !== 'unset'\n      ) {\n        letterSpacing = thisSpacing.getPixels()\n      }\n    }\n\n    // fill letter-spacing cache\n    const letterSpacingCache: number[] = []\n    const textLen = renderText.length\n\n    this.letterSpacingCache = letterSpacingCache\n\n    for (let i = 0; i < textLen; i++) {\n      letterSpacingCache.push(\n        typeof dx[i] !== 'undefined'\n          ? dx[i]\n          : letterSpacing\n      )\n    }\n\n    const dxSum = letterSpacingCache.reduce(\n      (acc, cur, i) => (\n        i === 0\n          ? 0\n          : acc + cur || 0\n      ),\n      0\n    )\n    const textWidth = this.measureText(ctx)\n    const textFullWidth = Math.max(textWidth + dxSum, 0)\n\n    this.textWidth = textWidth\n    this.textHeight = this.getFontSize()\n    this.glyphInfo = []\n\n    const fullPathWidth = this.getPathLength()\n    const startOffset = this.getStyle('startOffset').getNumber(0) * fullPathWidth\n    let offset = 0\n\n    if (anchor === 'middle'\n      || anchor === 'center'\n    ) {\n      offset = -textFullWidth / 2\n    }\n\n    if (anchor === 'end'\n      || anchor === 'right'\n    ) {\n      offset = -textFullWidth\n    }\n\n    offset += startOffset\n\n    chars.forEach((char, i) => {\n      // Find such segment what distance between p0 and p1 is approx. width of glyph\n      const {\n        offset: nextOffset,\n        segment,\n        rotation\n      } = this.findSegmentToFitChar(\n        ctx,\n        anchor,\n        textFullWidth,\n        fullPathWidth,\n        spacesNumber,\n        offset,\n        dy,\n        char,\n        i\n      )\n\n      offset = nextOffset\n\n      if (!segment.p0 || !segment.p1) {\n        return\n      }\n\n      // const width = this.getLineLength(\n      //   segment.p0.x,\n      //   segment.p0.y,\n      //   segment.p1.x,\n      //   segment.p1.y\n      // );\n      // Note: Since glyphs are rendered one at a time, any kerning pair data built into the font will not be used.\n      // Can foresee having a rough pair table built in that the developer can override as needed.\n      // Or use \"dx\" attribute of the <text> node as a naive replacement\n      // const kern = 0;\n      // placeholder for future implementation\n      // const midpoint = this.getPointOnLine(\n      //   kern + width / 2.0,\n      //   segment.p0.x, segment.p0.y, segment.p1.x, segment.p1.y\n      // );\n\n      this.glyphInfo.push({\n        // transposeX: midpoint.x,\n        // transposeY: midpoint.y,\n        text: chars[i],\n        p0: segment.p0,\n        p1: segment.p1,\n        rotation\n      })\n    })\n  }\n\n  protected parsePathData(path: PathElement) {\n    this.pathLength = -1 // reset path length\n\n    if (!path) {\n      return []\n    }\n\n    const pathCommands: IPathCommand[] = []\n    const { pathParser } = path\n\n    pathParser.reset()\n\n    // convert l, H, h, V, and v to L\n    while (!pathParser.isEnd()) {\n      const { current } = pathParser\n      const startX = current ? current.x : 0\n      const startY = current ? current.y : 0\n      const command = pathParser.next()\n      let nextCommandType: CommandType = command.type\n      let points: number[] = []\n\n      switch (command.type) {\n        case PathParser.MOVE_TO:\n          this.pathM(pathParser, points)\n          break\n\n        case PathParser.LINE_TO:\n          nextCommandType = this.pathL(pathParser, points)\n          break\n\n        case PathParser.HORIZ_LINE_TO:\n          nextCommandType = this.pathH(pathParser, points)\n          break\n\n        case PathParser.VERT_LINE_TO:\n          nextCommandType = this.pathV(pathParser, points)\n          break\n\n        case PathParser.CURVE_TO:\n          this.pathC(pathParser, points)\n          break\n\n        case PathParser.SMOOTH_CURVE_TO:\n          nextCommandType = this.pathS(pathParser, points)\n          break\n\n        case PathParser.QUAD_TO:\n          this.pathQ(pathParser, points)\n          break\n\n        case PathParser.SMOOTH_QUAD_TO:\n          nextCommandType = this.pathT(pathParser, points)\n          break\n\n        case PathParser.ARC:\n          points = this.pathA(pathParser)\n          break\n\n        case PathParser.CLOSE_PATH:\n          PathElement.pathZ(pathParser)\n          break\n\n        default:\n      }\n\n      if (command.type !== PathParser.CLOSE_PATH) {\n        pathCommands.push({\n          type: nextCommandType,\n          points,\n          start: {\n            x: startX,\n            y: startY\n          },\n          pathLength: this.calcLength(startX, startY, nextCommandType, points)\n        })\n      } else {\n        pathCommands.push({\n          type: PathParser.CLOSE_PATH,\n          points: [],\n          pathLength: 0\n        })\n      }\n    }\n\n    return pathCommands\n  }\n\n  protected pathM(\n    pathParser: PathParser,\n    points: number[]\n  ) {\n    const {\n      x,\n      y\n    } = PathElement.pathM(pathParser).point\n\n    points.push(x, y)\n  }\n\n  protected pathL(\n    pathParser: PathParser,\n    points: number[]\n  ) {\n    const {\n      x,\n      y\n    } = PathElement.pathL(pathParser).point\n\n    points.push(x, y)\n\n    return PathParser.LINE_TO\n  }\n\n  protected pathH(\n    pathParser: PathParser,\n    points: number[]\n  ) {\n    const {\n      x,\n      y\n    } = PathElement.pathH(pathParser).point\n\n    points.push(x, y)\n\n    return PathParser.LINE_TO\n  }\n\n  protected pathV(\n    pathParser: PathParser,\n    points: number[]\n  ) {\n    const {\n      x,\n      y\n    } = PathElement.pathV(pathParser).point\n\n    points.push(x, y)\n\n    return PathParser.LINE_TO\n  }\n\n  protected pathC(\n    pathParser: PathParser,\n    points: number[]\n  ) {\n    const {\n      point,\n      controlPoint,\n      currentPoint\n    } = PathElement.pathC(pathParser)\n\n    points.push(\n      point.x,\n      point.y,\n      controlPoint.x,\n      controlPoint.y,\n      currentPoint.x,\n      currentPoint.y\n    )\n  }\n\n  protected pathS(\n    pathParser: PathParser,\n    points: number[]\n  ) {\n    const {\n      point,\n      controlPoint,\n      currentPoint\n    } = PathElement.pathS(pathParser)\n\n    points.push(\n      point.x,\n      point.y,\n      controlPoint.x,\n      controlPoint.y,\n      currentPoint.x,\n      currentPoint.y\n    )\n\n    return PathParser.CURVE_TO\n  }\n\n  protected pathQ(\n    pathParser: PathParser,\n    points: number[]\n  ) {\n    const {\n      controlPoint,\n      currentPoint\n    } = PathElement.pathQ(pathParser)\n\n    points.push(\n      controlPoint.x,\n      controlPoint.y,\n      currentPoint.x,\n      currentPoint.y\n    )\n  }\n\n  protected pathT(\n    pathParser: PathParser,\n    points: number[]\n  ) {\n    const {\n      controlPoint,\n      currentPoint\n    } = PathElement.pathT(pathParser)\n\n    points.push(\n      controlPoint.x,\n      controlPoint.y,\n      currentPoint.x,\n      currentPoint.y\n    )\n\n    return PathParser.QUAD_TO\n  }\n\n  protected pathA(\n    pathParser: PathParser\n  ) {\n    let {\n      rX,\n      rY,\n      sweepFlag,\n      xAxisRotation,\n      centp,\n      a1,\n      ad\n    } = PathElement.pathA(pathParser)\n\n    if (sweepFlag === 0 && ad > 0) {\n      ad -= 2 * Math.PI\n    }\n\n    if (sweepFlag === 1 && ad < 0) {\n      ad += 2 * Math.PI\n    }\n\n    return [\n      centp.x,\n      centp.y,\n      rX,\n      rY,\n      a1,\n      ad,\n      xAxisRotation,\n      sweepFlag\n    ]\n  }\n\n  protected calcLength(\n    x: number,\n    y: number,\n    commandType: CommandType,\n    points: number[]\n  ) {\n    let len = 0\n    let p1: IPoint = null\n    let p2: IPoint = null\n    let t = 0\n\n    switch (commandType) {\n      case PathParser.LINE_TO:\n        return this.getLineLength(x, y, points[0], points[1])\n\n      case PathParser.CURVE_TO:\n        // Approximates by breaking curve into 100 line segments\n        len = 0.0\n        p1 = this.getPointOnCubicBezier(\n          0,\n          x,\n          y,\n          points[0],\n          points[1],\n          points[2],\n          points[3],\n          points[4],\n          points[5]\n        )\n\n        for (t = 0.01; t <= 1; t += 0.01) {\n          p2 = this.getPointOnCubicBezier(\n            t,\n            x,\n            y,\n            points[0],\n            points[1],\n            points[2],\n            points[3],\n            points[4],\n            points[5]\n          )\n          len += this.getLineLength(p1.x, p1.y, p2.x, p2.y)\n          p1 = p2\n        }\n\n        return len\n\n      case PathParser.QUAD_TO:\n        // Approximates by breaking curve into 100 line segments\n        len = 0.0\n        p1 = this.getPointOnQuadraticBezier(\n          0,\n          x,\n          y,\n          points[0],\n          points[1],\n          points[2],\n          points[3]\n        )\n\n        for (t = 0.01; t <= 1; t += 0.01) {\n          p2 = this.getPointOnQuadraticBezier(\n            t,\n            x,\n            y,\n            points[0],\n            points[1],\n            points[2],\n            points[3]\n          )\n          len += this.getLineLength(\n            p1.x,\n            p1.y,\n            p2.x,\n            p2.y\n          )\n          p1 = p2\n        }\n\n        return len\n\n      case PathParser.ARC: {\n        // Approximates by breaking curve into line segments\n        len = 0.0\n\n        const start = points[4]\n        // 4 = theta\n        const dTheta = points[5]\n        // 5 = dTheta\n        const end = points[4] + dTheta\n        let inc = Math.PI / 180.0\n\n        // 1 degree resolution\n        if (Math.abs(start - end) < inc) {\n          inc = Math.abs(start - end)\n        }\n\n        // Note: for purpose of calculating arc length, not going to worry about rotating X-axis by angle psi\n        p1 = this.getPointOnEllipticalArc(\n          points[0],\n          points[1],\n          points[2],\n          points[3],\n          start,\n          0\n        )\n\n        if (dTheta < 0) { // clockwise\n          for (t = start - inc; t > end; t -= inc) {\n            p2 = this.getPointOnEllipticalArc(\n              points[0],\n              points[1],\n              points[2],\n              points[3],\n              t,\n              0\n            )\n            len += this.getLineLength(p1.x, p1.y, p2.x, p2.y)\n            p1 = p2\n          }\n        } else { // counter-clockwise\n          for (t = start + inc; t < end; t += inc) {\n            p2 = this.getPointOnEllipticalArc(\n              points[0],\n              points[1],\n              points[2],\n              points[3],\n              t,\n              0\n            )\n            len += this.getLineLength(p1.x, p1.y, p2.x, p2.y)\n            p1 = p2\n          }\n        }\n\n        p2 = this.getPointOnEllipticalArc(\n          points[0],\n          points[1],\n          points[2],\n          points[3],\n          end,\n          0\n        )\n        len += this.getLineLength(p1.x, p1.y, p2.x, p2.y)\n\n        return len\n      }\n\n      default:\n    }\n\n    return 0\n  }\n\n  protected getPointOnLine(\n    dist: number,\n    p1x: number,\n    p1y: number,\n    p2x: number,\n    p2y: number,\n    fromX = p1x,\n    fromY = p1y\n  ) {\n    const m = (p2y - p1y) / ((p2x - p1x) + PSEUDO_ZERO)\n    let run = Math.sqrt(dist * dist / (1 + m * m))\n\n    if (p2x < p1x) {\n      run *= -1\n    }\n\n    let rise = m * run\n    let pt: IPoint = null\n\n    if (p2x === p1x) { // vertical line\n      pt = {\n        x: fromX,\n        y: fromY + rise\n      }\n    } else\n    if ((fromY - p1y) / ((fromX - p1x) + PSEUDO_ZERO) === m) {\n      pt = {\n        x: fromX + run,\n        y: fromY + rise\n      }\n    } else {\n      let ix = 0\n      let iy = 0\n      const len = this.getLineLength(p1x, p1y, p2x, p2y)\n\n      if (len < PSEUDO_ZERO) {\n        return null\n      }\n\n      let u =\n        ((fromX - p1x) * (p2x - p1x))\n        + ((fromY - p1y) * (p2y - p1y))\n\n      u /= len * len\n      ix = p1x + u * (p2x - p1x)\n      iy = p1y + u * (p2y - p1y)\n\n      const pRise = this.getLineLength(fromX, fromY, ix, iy)\n      const pRun = Math.sqrt(dist * dist - pRise * pRise)\n\n      run = Math.sqrt(pRun * pRun / (1 + m * m))\n\n      if (p2x < p1x) {\n        run *= -1\n      }\n\n      rise = m * run\n      pt = {\n        x: ix + run,\n        y: iy + rise\n      }\n    }\n\n    return pt\n  }\n\n  protected getPointOnPath(distance: number) {\n    const fullLen = this.getPathLength()\n    let cumulativePathLength = 0\n    let p: IPoint = null\n\n    if (distance < -0.00005\n      || distance - 0.00005 > fullLen\n    ) {\n      return null\n    }\n\n    const { dataArray } = this\n\n    for (const command of dataArray) {\n      if (command\n        && (\n          command.pathLength < 0.00005\n          || cumulativePathLength + command.pathLength + 0.00005 < distance\n        )\n      ) {\n        cumulativePathLength += command.pathLength\n        continue\n      }\n\n      const delta = distance - cumulativePathLength\n      let currentT = 0\n\n      switch (command.type) {\n        case PathParser.LINE_TO:\n          p = this.getPointOnLine(\n            delta,\n            command.start.x,\n            command.start.y,\n            command.points[0],\n            command.points[1],\n            command.start.x,\n            command.start.y\n          )\n          break\n\n        case PathParser.ARC: {\n          const start = command.points[4]\n          // 4 = theta\n          const dTheta = command.points[5]\n          // 5 = dTheta\n          const end = command.points[4] + dTheta\n\n          currentT = start + delta / command.pathLength * dTheta\n\n          if (dTheta < 0 && currentT < end\n            || dTheta >= 0 && currentT > end\n          ) {\n            break\n          }\n\n          p = this.getPointOnEllipticalArc(\n            command.points[0],\n            command.points[1],\n            command.points[2],\n            command.points[3],\n            currentT,\n            command.points[6]\n          )\n          break\n        }\n\n        case PathParser.CURVE_TO:\n\n          currentT = delta / command.pathLength\n\n          if (currentT > 1) {\n            currentT = 1\n          }\n\n          p = this.getPointOnCubicBezier(\n            currentT,\n            command.start.x,\n            command.start.y,\n            command.points[0],\n            command.points[1],\n            command.points[2],\n            command.points[3],\n            command.points[4],\n            command.points[5]\n          )\n          break\n\n        case PathParser.QUAD_TO:\n\n          currentT = delta / command.pathLength\n\n          if (currentT > 1) {\n            currentT = 1\n          }\n\n          p = this.getPointOnQuadraticBezier(\n            currentT,\n            command.start.x,\n            command.start.y,\n            command.points[0],\n            command.points[1],\n            command.points[2],\n            command.points[3]\n          )\n          break\n\n        default:\n      }\n\n      if (p) {\n        return p\n      }\n\n      break\n    }\n\n    return null\n  }\n\n  protected getLineLength(\n    x1: number,\n    y1: number,\n    x2: number,\n    y2: number\n  ) {\n    return Math.sqrt(\n      (x2 - x1) * (x2 - x1)\n      + (y2 - y1) * (y2 - y1)\n    )\n  }\n\n  protected getPathLength() {\n    if (this.pathLength === -1) {\n      this.pathLength = this.dataArray.reduce<number>(\n        (length, command: IPathCommand) => (\n          command.pathLength > 0\n            ? length + command.pathLength\n            : length\n        ),\n        0\n      )\n    }\n\n    return this.pathLength\n  }\n\n  protected getPointOnCubicBezier(\n    pct: number,\n    p1x: number,\n    p1y: number,\n    p2x: number,\n    p2y: number,\n    p3x: number,\n    p3y: number,\n    p4x: number,\n    p4y: number\n  ): IPoint {\n    const x = p4x * CB1(pct) + p3x * CB2(pct) + p2x * CB3(pct) + p1x * CB4(pct)\n    const y = p4y * CB1(pct) + p3y * CB2(pct) + p2y * CB3(pct) + p1y * CB4(pct)\n\n    return {\n      x,\n      y\n    }\n  }\n\n  protected getPointOnQuadraticBezier(\n    pct: number,\n    p1x: number,\n    p1y: number,\n    p2x: number,\n    p2y: number,\n    p3x: number,\n    p3y: number\n  ): IPoint {\n    const x = p3x * QB1(pct) + p2x * QB2(pct) + p1x * QB3(pct)\n    const y = p3y * QB1(pct) + p2y * QB2(pct) + p1y * QB3(pct)\n\n    return {\n      x,\n      y\n    }\n  }\n\n  protected getPointOnEllipticalArc(\n    cx: number,\n    cy: number,\n    rx: number,\n    ry: number,\n    theta: number,\n    psi: number\n  ): IPoint {\n    const cosPsi = Math.cos(psi)\n    const sinPsi = Math.sin(psi)\n    const pt = {\n      x: rx * Math.cos(theta),\n      y: ry * Math.sin(theta)\n    }\n\n    return {\n      x: cx + (pt.x * cosPsi - pt.y * sinPsi),\n      y: cy + (pt.x * sinPsi + pt.y * cosPsi)\n    }\n  }\n\n  // TODO need some optimisations. possibly build cache only for curved segments?\n  protected buildEquidistantCache(\n    inputStep: number,\n    inputPrecision: number\n  ) {\n    const fullLen = this.getPathLength()\n    const precision = inputPrecision || 0.25 // accuracy vs performance\n    const step = inputStep || fullLen / 100\n\n    if (!this.equidistantCache\n      || this.equidistantCache.step !== step\n      || this.equidistantCache.precision !== precision\n    ) {\n      // Prepare cache\n      this.equidistantCache = {\n        step,\n        precision,\n        points: []\n      }\n\n      // Calculate points\n      let s = 0\n\n      for (let l = 0; l <= fullLen; l += precision) {\n        const p0 = this.getPointOnPath(l)\n        const p1 = this.getPointOnPath(l + precision)\n\n        if (!p0 || !p1) {\n          continue\n        }\n\n        s += this.getLineLength(p0.x, p0.y, p1.x, p1.y)\n\n        if (s >= step) {\n          this.equidistantCache.points.push({\n            x: p0.x,\n            y: p0.y,\n            distance: l\n          })\n          s -= step\n        }\n      }\n    }\n  }\n\n  protected getEquidistantPointOnPath(\n    targetDistance: number,\n    step?: number,\n    precision?: number\n  ) {\n    this.buildEquidistantCache(step, precision)\n\n    if (targetDistance < 0\n      || targetDistance - this.getPathLength() > 0.00005\n    ) {\n      return null\n    }\n\n    const idx = Math.round(\n      targetDistance\n      / this.getPathLength()\n      * (this.equidistantCache.points.length - 1)\n    )\n\n    return this.equidistantCache.points[idx] || null\n  }\n}\n","import { RenderingContext2D } from '../types'\nimport { BoundingBox } from '../BoundingBox'\nimport { Document } from './Document'\nimport { RenderedElement } from './RenderedElement'\n\n// groups: 1: mime-type (+ charset), 2: mime-type (w/o charset), 3: charset, 4: base64?, 5: body\nconst dataUriRegex = /^\\s*data:(([^/,;]+\\/[^/,;]+)(?:;([^,;=]+=[^,;=]+))?)?(?:;(base64))?,(.*)$/i\n\nexport class ImageElement extends RenderedElement {\n  override type = 'image'\n  loaded = false\n  protected image: CanvasImageSource | string | undefined\n\n  constructor(\n    document: Document,\n    node: HTMLElement,\n    captureTextNodes?: boolean\n  ) {\n    super(document, node, captureTextNodes)\n\n    const href = this.getHrefAttribute().getString()\n\n    if (!href) {\n      return\n    }\n\n    const isSvg = href.endsWith('.svg') || /^\\s*data:image\\/svg\\+xml/i.test(href)\n\n    document.images.push(this)\n\n    if (!isSvg) {\n      void this.loadImage(href)\n    } else {\n      void this.loadSvg(href)\n    }\n  }\n\n  protected async loadImage(href: string) {\n    try {\n      const image = await this.document.createImage(href)\n\n      this.image = image\n    } catch (err) {\n      console.error(`Error while loading image \"${href}\":`, err)\n    }\n\n    this.loaded = true\n  }\n\n  protected async loadSvg(href: string) {\n    const match = dataUriRegex.exec(href)\n\n    if (match) {\n      const data = match[5]\n\n      if (data) {\n        if (match[4] === 'base64') {\n          this.image = atob(data)\n        } else {\n          this.image = decodeURIComponent(data)\n        }\n      }\n    } else {\n      try {\n        const response = await this.document.fetch(href)\n        const svg = await response.text()\n\n        this.image = svg\n      } catch (err) {\n        console.error(`Error while loading image \"${href}\":`, err)\n      }\n    }\n\n    this.loaded = true\n  }\n\n  override renderChildren(ctx: RenderingContext2D) {\n    const {\n      document,\n      image,\n      loaded\n    } = this\n    const x = this.getAttribute('x').getPixels('x')\n    const y = this.getAttribute('y').getPixels('y')\n    const width = this.getStyle('width').getPixels('x')\n    const height = this.getStyle('height').getPixels('y')\n\n    if (!loaded || !image\n      || !width || !height\n    ) {\n      return\n    }\n\n    ctx.save()\n    ctx.translate(x, y)\n\n    if (typeof image === 'string') {\n      const subDocument = document.canvg.forkString(\n        ctx,\n        image,\n        {\n          ignoreMouse: true,\n          ignoreAnimation: true,\n          ignoreDimensions: true,\n          ignoreClear: true,\n          offsetX: 0,\n          offsetY: 0,\n          scaleWidth: width,\n          scaleHeight: height\n        }\n      )\n      const { documentElement } = subDocument.document\n\n      if (documentElement) {\n        documentElement.parent = this\n      }\n\n      void subDocument.render()\n    } else {\n      document.setViewBox({\n        ctx,\n        aspectRatio: this.getAttribute('preserveAspectRatio').getString(),\n        width,\n        desiredWidth: image.width as number,\n        height,\n        desiredHeight: image.height as number\n      })\n\n      if (this.loaded) {\n        if (!('complete' in image) || image.complete) {\n          ctx.drawImage(image, 0, 0)\n        }\n      }\n    }\n\n    ctx.restore()\n  }\n\n  getBoundingBox() {\n    const x = this.getAttribute('x').getPixels('x')\n    const y = this.getAttribute('y').getPixels('y')\n    const width = this.getStyle('width').getPixels('x')\n    const height = this.getStyle('height').getPixels('y')\n\n    return new BoundingBox(x, y, x + width, y + height)\n  }\n}\n","import { RenderingContext2D } from '../types'\nimport { RenderedElement } from './RenderedElement'\n\nexport class SymbolElement extends RenderedElement {\n  override type = 'symbol'\n\n  override render(_: RenderingContext2D) {\n    // NO RENDER\n  }\n}\n","import { Document } from './Document'\n\nexport class SVGFontLoader {\n  loaded = false\n\n  constructor(\n    private readonly document: Document\n  ) {\n    document.fonts.push(this)\n  }\n\n  async load(fontFamily: string, url: string) {\n    try {\n      const { document } = this\n      const svgDocument = await document.canvg.parser.load(url)\n      const fonts = svgDocument.getElementsByTagName('font')\n\n      Array.from(fonts).forEach((fontNode: HTMLElement) => {\n        const font = document.createElement(fontNode)\n\n        document.definitions[fontFamily] = font\n      })\n    } catch (err) {\n      console.error(`Error while loading font \"${url}\":`, err)\n    }\n\n    this.loaded = true\n  }\n}\n","import {\n  compressSpaces,\n  getSelectorSpecificity,\n  parseExternalUrl\n} from '../util'\nimport { Property } from '../Property'\nimport { SVGFontLoader } from '../SVGFontLoader'\nimport { Document } from './Document'\nimport { Element } from './Element'\n\nexport class StyleElement extends Element {\n  static readonly parseExternalUrl = parseExternalUrl\n\n  override type = 'style'\n\n  constructor(\n    document: Document,\n    node: HTMLElement,\n    captureTextNodes?: boolean\n  ) {\n    super(document, node, captureTextNodes)\n\n    const css = compressSpaces(\n      Array.from(node.childNodes)\n      // NEED TEST\n        .map(_ => _.textContent)\n        .join('')\n        .replace(/(\\/\\*([^*]|[\\r\\n]|(\\*+([^*/]|[\\r\\n])))*\\*+\\/)|(^[\\s]*\\/\\/.*)/gm, '') // remove comments\n        .replace(/@import.*;/g, '') // remove imports\n    )\n    const cssDefs = css.split('}')\n\n    cssDefs.forEach((_) => {\n      const def = _.trim()\n\n      if (!def) {\n        return\n      }\n\n      const cssParts = def.split('{')\n      const cssClasses = cssParts[0].split(',')\n      const cssProps = cssParts[1].split(';')\n\n      cssClasses.forEach((_) => {\n        const cssClass = _.trim()\n\n        if (!cssClass) {\n          return\n        }\n\n        const props = document.styles[cssClass] || {}\n\n        cssProps.forEach((cssProp) => {\n          const prop = cssProp.indexOf(':')\n          const name = cssProp.substr(0, prop).trim()\n          const value = cssProp.substr(prop + 1, cssProp.length - prop).trim()\n\n          if (name && value) {\n            props[name] = new Property(document, name, value)\n          }\n        })\n\n        document.styles[cssClass] = props\n        document.stylesSpecificity[cssClass] = getSelectorSpecificity(cssClass)\n\n        if (cssClass === '@font-face') { //  && !nodeEnv\n          const fontFamily = props['font-family'].getString().replace(/\"|'/g, '')\n          const srcs = props.src.getString().split(',')\n\n          srcs.forEach((src) => {\n            if (src.indexOf('format(\"svg\")') > 0) {\n              const url = parseExternalUrl(src)\n\n              if (url) {\n                void new SVGFontLoader(document).load(fontFamily, url)\n              }\n            }\n          })\n        }\n      })\n    })\n  }\n}\n","import { RenderingContext2D } from '../types'\nimport { Property } from '../Property'\nimport { Transform } from '../Transform'\nimport { RenderedElement } from './RenderedElement'\nimport { PathElement } from './PathElement'\nimport { SVGElement } from './SVGElement'\n\nexport class UseElement extends RenderedElement {\n  override type = 'use'\n  private cachedElement: PathElement | undefined\n\n  override setContext(ctx: RenderingContext2D) {\n    super.setContext(ctx)\n\n    const xAttr = this.getAttribute('x')\n    const yAttr = this.getAttribute('y')\n\n    if (xAttr.hasValue()) {\n      ctx.translate(xAttr.getPixels('x'), 0)\n    }\n\n    if (yAttr.hasValue()) {\n      ctx.translate(0, yAttr.getPixels('y'))\n    }\n  }\n\n  path(ctx: RenderingContext2D) {\n    const { element } = this\n\n    if (element) {\n      element.path(ctx)\n    }\n  }\n\n  override renderChildren(ctx: RenderingContext2D) {\n    const {\n      document,\n      element\n    } = this\n\n    if (element) {\n      let tempSvg: RenderedElement = element\n\n      if (element.type === 'symbol') {\n        // render me using a temporary svg element in symbol cases (http://www.w3.org/TR/SVG/struct.html#UseElement)\n        tempSvg = new SVGElement(document)\n        tempSvg.attributes.viewBox = new Property(\n          document,\n          'viewBox',\n          element.getAttribute('viewBox').getString()\n        )\n        tempSvg.attributes.preserveAspectRatio = new Property(\n          document,\n          'preserveAspectRatio',\n          element.getAttribute('preserveAspectRatio').getString()\n        )\n        tempSvg.attributes.overflow = new Property(\n          document,\n          'overflow',\n          element.getAttribute('overflow').getString()\n        )\n        tempSvg.children = element.children\n\n        // element is still the parent of the children\n        element.styles.opacity = new Property(\n          document,\n          'opacity',\n          this.calculateOpacity()\n        )\n      }\n\n      if (tempSvg.type === 'svg') {\n        const widthStyle = this.getStyle('width', false, true)\n        const heightStyle = this.getStyle('height', false, true)\n\n        // if symbol or svg, inherit width/height from me\n        if (widthStyle.hasValue()) {\n          tempSvg.attributes.width = new Property(\n            document,\n            'width',\n            widthStyle.getString()\n          )\n        }\n\n        if (heightStyle.hasValue()) {\n          tempSvg.attributes.height = new Property(\n            document,\n            'height',\n            heightStyle.getString()\n          )\n        }\n      }\n\n      const oldParent = tempSvg.parent\n\n      tempSvg.parent = this\n      tempSvg.render(ctx)\n      tempSvg.parent = oldParent\n    }\n  }\n\n  getBoundingBox(ctx: CanvasRenderingContext2D) {\n    const { element } = this\n\n    if (element) {\n      return element.getBoundingBox(ctx)\n    }\n\n    return null\n  }\n\n  elementTransform() {\n    const {\n      document,\n      element\n    } = this\n\n    if (!element) {\n      return null\n    }\n\n    return Transform.fromElement(document, element)\n  }\n\n  protected get element() {\n    if (!this.cachedElement) {\n      this.cachedElement = this.getHrefAttribute().getDefinition()\n    }\n\n    return this.cachedElement\n  }\n}\n","import { RenderingContext2D } from '../types'\nimport { toNumbers } from '../util'\nimport { Document } from './Document'\nimport { Element } from './Element'\n\nfunction imGet(\n  img: Uint8ClampedArray,\n  x: number,\n  y: number,\n  width: number,\n  _height: number,\n  rgba: number\n) {\n  return img[y * width * 4 + x * 4 + rgba]\n}\n\nfunction imSet(\n  img: Uint8ClampedArray,\n  x: number,\n  y: number,\n  width: number,\n  _height: number,\n  rgba: number,\n  val: number\n) {\n  img[y * width * 4 + x * 4 + rgba] = val\n}\n\nfunction m(\n  matrix: number[],\n  i: number,\n  v: number\n) {\n  const mi = matrix[i]\n\n  return mi * v\n}\n\nfunction c(\n  a: number,\n  m1: number,\n  m2: number,\n  m3: number\n) {\n  return m1 + Math.cos(a) * m2 + Math.sin(a) * m3\n}\n\nexport class FeColorMatrixElement extends Element {\n  override type = 'feColorMatrix'\n  protected readonly matrix: number[]\n  protected readonly includeOpacity: boolean\n\n  constructor(\n    document: Document,\n    node: HTMLElement,\n    captureTextNodes?: boolean\n  ) {\n    super(document, node, captureTextNodes)\n\n    let matrix = toNumbers(this.getAttribute('values').getString())\n\n    switch (this.getAttribute('type').getString('matrix')) { // http://www.w3.org/TR/SVG/filters.html#feColorMatrixElement\n      case 'saturate': {\n        const s = matrix[0]\n\n        /* eslint-disable array-element-newline */\n        matrix = [\n          0.213 + 0.787 * s, 0.715 - 0.715 * s, 0.072 - 0.072 * s, 0, 0,\n          0.213 - 0.213 * s, 0.715 + 0.285 * s, 0.072 - 0.072 * s, 0, 0,\n          0.213 - 0.213 * s, 0.715 - 0.715 * s, 0.072 + 0.928 * s, 0, 0,\n          0, 0, 0, 1, 0,\n          0, 0, 0, 0, 1\n        ]\n        /* eslint-enable array-element-newline */\n        break\n      }\n\n      case 'hueRotate': {\n        const a = matrix[0] * Math.PI / 180.0\n\n        /* eslint-disable array-element-newline */\n        matrix = [\n          c(a, 0.213, 0.787, -0.213), c(a, 0.715, -0.715, -0.715), c(a, 0.072, -0.072, 0.928), 0, 0,\n          c(a, 0.213, -0.213, 0.143), c(a, 0.715, 0.285, 0.140), c(a, 0.072, -0.072, -0.283), 0, 0,\n          c(a, 0.213, -0.213, -0.787), c(a, 0.715, -0.715, 0.715), c(a, 0.072, 0.928, 0.072), 0, 0,\n          0, 0, 0, 1, 0,\n          0, 0, 0, 0, 1\n        ]\n        /* eslint-enable array-element-newline */\n        break\n      }\n\n      case 'luminanceToAlpha':\n        /* eslint-disable array-element-newline */\n        matrix = [\n          0, 0, 0, 0, 0,\n          0, 0, 0, 0, 0,\n          0, 0, 0, 0, 0,\n          0.2125, 0.7154, 0.0721, 0, 0,\n          0, 0, 0, 0, 1\n        ]\n        /* eslint-enable array-element-newline */\n        break\n\n      default:\n    }\n\n    this.matrix = matrix\n    this.includeOpacity = this.getAttribute('includeOpacity').hasValue()\n  }\n\n  apply(\n    ctx: RenderingContext2D,\n    _x: number,\n    _y: number,\n    width: number,\n    height: number\n  ) {\n    // assuming x==0 && y==0 for now\n    const {\n      includeOpacity,\n      matrix\n    } = this\n    const srcData = ctx.getImageData(0, 0, width, height)\n\n    for (let y = 0; y < height; y++) {\n      for (let x = 0; x < width; x++) {\n        const r = imGet(srcData.data, x, y, width, height, 0)\n        const g = imGet(srcData.data, x, y, width, height, 1)\n        const b = imGet(srcData.data, x, y, width, height, 2)\n        const a = imGet(srcData.data, x, y, width, height, 3)\n        let nr = m(matrix, 0, r) + m(matrix, 1, g) + m(matrix, 2, b) + m(matrix, 3, a) + m(matrix, 4, 1)\n        let ng = m(matrix, 5, r) + m(matrix, 6, g) + m(matrix, 7, b) + m(matrix, 8, a) + m(matrix, 9, 1)\n        let nb = m(matrix, 10, r) + m(matrix, 11, g) + m(matrix, 12, b) + m(matrix, 13, a) + m(matrix, 14, 1)\n        let na = m(matrix, 15, r) + m(matrix, 16, g) + m(matrix, 17, b) + m(matrix, 18, a) + m(matrix, 19, 1)\n\n        if (includeOpacity) {\n          nr = 0\n          ng = 0\n          nb = 0\n          na *= a / 255\n        }\n\n        imSet(srcData.data, x, y, width, height, 0, nr)\n        imSet(srcData.data, x, y, width, height, 1, ng)\n        imSet(srcData.data, x, y, width, height, 2, nb)\n        imSet(srcData.data, x, y, width, height, 3, na)\n      }\n    }\n\n    ctx.clearRect(0, 0, width, height)\n    ctx.putImageData(srcData, 0, 0)\n  }\n}\n","import { RenderingContext2D } from '../types'\nimport { BoundingBox } from '../BoundingBox'\nimport { Element } from './Element'\nimport { PathElement } from './PathElement'\nimport { FeColorMatrixElement } from './FeColorMatrixElement'\n\nexport class MaskElement extends Element {\n  static ignoreStyles = [\n    'mask',\n    'transform',\n    'clip-path'\n  ]\n\n  override type = 'mask'\n\n  apply(ctx: RenderingContext2D, element: Element) {\n    const { document } = this\n    // render as temp svg\n    let x = this.getAttribute('x').getPixels('x')\n    let y = this.getAttribute('y').getPixels('y')\n    let width = this.getStyle('width').getPixels('x')\n    let height = this.getStyle('height').getPixels('y')\n\n    if (!width && !height) {\n      const boundingBox = new BoundingBox()\n\n      this.children.forEach((child: PathElement) => {\n        boundingBox.addBoundingBox(child.getBoundingBox(ctx))\n      })\n\n      x = Math.floor(boundingBox.x1)\n      y = Math.floor(boundingBox.y1)\n      width = Math.floor(boundingBox.width)\n      height = Math.floor(boundingBox.height)\n    }\n\n    const ignoredStyles = this.removeStyles(element, MaskElement.ignoreStyles)\n    const maskCanvas = document.createCanvas(x + width, y + height)\n    const maskCtx = maskCanvas.getContext('2d')\n\n    document.screen.setDefaults(maskCtx)\n    this.renderChildren(maskCtx)\n\n    // convert mask to alpha with a fake node\n    // TODO: refactor out apply from feColorMatrix\n    new FeColorMatrixElement(\n      document,\n      ({\n        nodeType: 1,\n        childNodes: [],\n        attributes: [\n          {\n            nodeName: 'type',\n            value: 'luminanceToAlpha'\n          },\n          {\n            nodeName: 'includeOpacity',\n            value: 'true'\n          }\n        ]\n      }) as unknown as HTMLElement\n    ).apply(maskCtx, 0, 0, x + width, y + height)\n\n    const tmpCanvas = document.createCanvas(x + width, y + height)\n    const tmpCtx = tmpCanvas.getContext('2d')\n\n    document.screen.setDefaults(tmpCtx)\n    element.render(tmpCtx)\n\n    tmpCtx.globalCompositeOperation = 'destination-in'\n    tmpCtx.fillStyle = maskCtx.createPattern(maskCanvas as CanvasImageSource, 'no-repeat')\n    tmpCtx.fillRect(0, 0, x + width, y + height)\n\n    ctx.fillStyle = tmpCtx.createPattern(tmpCanvas as CanvasImageSource, 'no-repeat')\n    ctx.fillRect(0, 0, x + width, y + height)\n\n    // reassign mask\n    this.restoreStyles(element, ignoredStyles)\n  }\n\n  override render(_: RenderingContext2D) {\n    // NO RENDER\n  }\n}\n","import { RenderingContext2D } from '../types'\nimport { Transform } from '../Transform'\nimport { Element } from './Element'\nimport { UseElement } from './UseElement'\n\nconst noop = () => {\n  // NOOP\n}\n\nexport class ClipPathElement extends Element {\n  override type = 'clipPath'\n\n  apply(ctx: RenderingContext2D) {\n    const { document } = this\n    const contextProto = Reflect.getPrototypeOf(ctx) as RenderingContext2D | null\n    const {\n      beginPath,\n      closePath\n    } = ctx\n\n    if (contextProto) {\n      contextProto.beginPath = noop\n      contextProto.closePath = noop\n    }\n\n    Reflect.apply(beginPath, ctx, [])\n\n    this.children.forEach((child: Element | UseElement) => {\n      if (!('path' in child)) {\n        return\n      }\n\n      let transform = 'elementTransform' in child\n        ? child.elementTransform()\n        : null // handle <use />\n\n      if (!transform) {\n        transform = Transform.fromElement(document, child)\n      }\n\n      if (transform) {\n        transform.apply(ctx)\n      }\n\n      child.path(ctx)\n\n      if (contextProto) {\n        contextProto.closePath = closePath\n      }\n\n      if (transform) {\n        transform.unapply(ctx)\n      }\n    })\n\n    Reflect.apply(closePath, ctx, [])\n    ctx.clip()\n\n    if (contextProto) {\n      contextProto.beginPath = beginPath\n      contextProto.closePath = closePath\n    }\n  }\n\n  override render(_: RenderingContext2D) {\n    // NO RENDER\n  }\n}\n","import { RenderingContext2D } from '../types'\nimport { Element } from './Element'\nimport { PathElement } from './PathElement'\nimport { FeGaussianBlurElement } from './FeGaussianBlurElement'\n\nexport class FilterElement extends Element {\n  static ignoreStyles = [\n    'filter',\n    'transform',\n    'clip-path'\n  ]\n\n  override type = 'filter'\n\n  apply(ctx: RenderingContext2D, element: Element | PathElement) {\n    // render as temp svg\n    const {\n      document,\n      children\n    } = this\n    const boundingBox = 'getBoundingBox' in element\n      ? element.getBoundingBox(ctx)\n      : null\n\n    if (!boundingBox) {\n      return\n    }\n\n    let px = 0\n    let py = 0\n\n    children.forEach((child: FeGaussianBlurElement) => {\n      const efd = child.extraFilterDistance || 0\n\n      px = Math.max(px, efd)\n      py = Math.max(py, efd)\n    })\n\n    const width = Math.floor(boundingBox.width)\n    const height = Math.floor(boundingBox.height)\n    const tmpCanvasWidth = width + 2 * px\n    const tmpCanvasHeight = height + 2 * py\n\n    if (tmpCanvasWidth < 1 || tmpCanvasHeight < 1) {\n      return\n    }\n\n    const x = Math.floor(boundingBox.x)\n    const y = Math.floor(boundingBox.y)\n    const ignoredStyles = this.removeStyles(element, FilterElement.ignoreStyles)\n    const tmpCanvas = document.createCanvas(tmpCanvasWidth, tmpCanvasHeight)\n    const tmpCtx = tmpCanvas.getContext('2d')\n\n    document.screen.setDefaults(tmpCtx)\n    tmpCtx.translate(-x + px, -y + py)\n    element.render(tmpCtx)\n\n    // apply filters\n    children.forEach((child: FeGaussianBlurElement) => {\n      if (typeof child.apply === 'function') {\n        child.apply(\n          tmpCtx,\n          0,\n          0,\n          tmpCanvasWidth,\n          tmpCanvasHeight\n        )\n      }\n    })\n\n    // render on me\n    ctx.drawImage(\n      tmpCanvas,\n      0,\n      0,\n      tmpCanvasWidth,\n      tmpCanvasHeight,\n      x - px,\n      y - py,\n      tmpCanvasWidth,\n      tmpCanvasHeight\n    )\n\n    this.restoreStyles(element, ignoredStyles)\n  }\n\n  override render(_: RenderingContext2D) {\n    // NO RENDER\n  }\n}\n","import { RenderingContext2D } from '../types'\nimport { Document } from './Document'\nimport { Element } from './Element'\n\nexport class FeDropShadowElement extends Element {\n  override type = 'feDropShadow'\n\n  constructor(\n    document: Document,\n    node: HTMLElement,\n    captureTextNodes?: boolean\n  ) {\n    super(document, node, captureTextNodes)\n\n    this.addStylesFromStyleDefinition()\n  }\n\n  apply(\n    _: RenderingContext2D,\n    _x: number,\n    _y: number,\n    _width: number,\n    _height: number\n  ) {\n    // TODO: implement\n  }\n}\n","import { RenderingContext2D } from '../types'\nimport { Element } from './Element'\n\nexport class FeMorphologyElement extends Element {\n  override type = 'feMorphology'\n\n  apply(\n    _: RenderingContext2D,\n    _x: number,\n    _y: number,\n    _width: number,\n    _height: number\n  ) {\n    // TODO: implement\n  }\n}\n","import { RenderingContext2D } from '../types'\nimport { Element } from './Element'\n\nexport class FeCompositeElement extends Element {\n  override type = 'feComposite'\n\n  apply(\n    _: RenderingContext2D,\n    _x: number,\n    _y: number,\n    _width: number,\n    _height: number\n  ) {\n    // TODO: implement\n  }\n}\n","import { canvasRGBA } from 'stackblur-canvas'\nimport { RenderingContext2D } from '../types'\nimport { Document } from './Document'\nimport { Element } from './Element'\n\nexport class FeGaussianBlurElement extends Element {\n  override type = 'feGaussianBlur'\n  readonly extraFilterDistance: number\n  protected readonly blurRadius: number\n\n  constructor(\n    document: Document,\n    node: HTMLElement,\n    captureTextNodes?: boolean\n  ) {\n    super(document, node, captureTextNodes)\n\n    this.blurRadius = Math.floor(this.getAttribute('stdDeviation').getNumber())\n    this.extraFilterDistance = this.blurRadius\n  }\n\n  apply(\n    ctx: RenderingContext2D,\n    x: number,\n    y: number,\n    width: number,\n    height: number\n  ) {\n    const {\n      document,\n      blurRadius\n    } = this\n    const body = document.window\n      ? document.window.document.body\n      : null\n    const canvas = ctx.canvas as HTMLCanvasElement\n\n    // StackBlur requires canvas be on document\n    canvas.id = document.getUniqueId()\n\n    if (body) {\n      canvas.style.display = 'none'\n      body.appendChild(canvas)\n    }\n\n    canvasRGBA(canvas, x, y, width, height, blurRadius)\n\n    if (body) {\n      body.removeChild(canvas)\n    }\n  }\n}\n","import { Element } from './Element'\n\nexport class TitleElement extends Element {\n  override type = 'title'\n}\n","import { Element } from './Element'\n\nexport class DescElement extends Element {\n  override type = 'desc'\n}\n","import { Element } from './Element'\nimport { UnknownElement } from './UnknownElement'\nimport { RenderedElement } from './RenderedElement'\nimport { PathElement } from './PathElement'\nimport { SVGElement } from './SVGElement'\nimport { RectElement } from './RectElement'\nimport { CircleElement } from './CircleElement'\nimport { EllipseElement } from './EllipseElement'\nimport { LineElement } from './LineElement'\nimport { PolylineElement } from './PolylineElement'\nimport { PolygonElement } from './PolygonElement'\nimport { PatternElement } from './PatternElement'\nimport { MarkerElement } from './MarkerElement'\nimport { DefsElement } from './DefsElement'\nimport { GradientElement } from './GradientElement'\nimport { LinearGradientElement } from './LinearGradientElement'\nimport { RadialGradientElement } from './RadialGradientElement'\nimport { StopElement } from './StopElement'\nimport { AnimateElement } from './AnimateElement'\nimport { AnimateColorElement } from './AnimateColorElement'\nimport { AnimateTransformElement } from './AnimateTransformElement'\nimport { FontElement } from './FontElement'\nimport { FontFaceElement } from './FontFaceElement'\nimport { MissingGlyphElement } from './MissingGlyphElement'\nimport { GlyphElement } from './GlyphElement'\nimport { TextElement } from './TextElement'\nimport { TSpanElement } from './TSpanElement'\nimport { TRefElement } from './TRefElement'\nimport { AElement } from './AElement'\nimport { TextPathElement } from './TextPathElement'\nimport { ImageElement } from './ImageElement'\nimport { GElement } from './GElement'\nimport { SymbolElement } from './SymbolElement'\nimport { StyleElement } from './StyleElement'\nimport { UseElement } from './UseElement'\nimport { MaskElement } from './MaskElement'\nimport { ClipPathElement } from './ClipPathElement'\nimport { FilterElement } from './FilterElement'\nimport { FeDropShadowElement } from './FeDropShadowElement'\nimport { FeMorphologyElement } from './FeMorphologyElement'\nimport { FeCompositeElement } from './FeCompositeElement'\nimport { FeColorMatrixElement } from './FeColorMatrixElement'\nimport { FeGaussianBlurElement } from './FeGaussianBlurElement'\nimport { TitleElement } from './TitleElement'\nimport { DescElement } from './DescElement'\n\nexport const elements = {\n  'svg': SVGElement,\n  'rect': RectElement,\n  'circle': CircleElement,\n  'ellipse': EllipseElement,\n  'line': LineElement,\n  'polyline': PolylineElement,\n  'polygon': PolygonElement,\n  'path': PathElement,\n  'pattern': PatternElement,\n  'marker': MarkerElement,\n  'defs': DefsElement,\n  'linearGradient': LinearGradientElement,\n  'radialGradient': RadialGradientElement,\n  'stop': StopElement,\n  'animate': AnimateElement,\n  'animateColor': AnimateColorElement,\n  'animateTransform': AnimateTransformElement,\n  'font': FontElement,\n  'font-face': FontFaceElement,\n  'missing-glyph': MissingGlyphElement,\n  'glyph': GlyphElement,\n  'text': TextElement,\n  'tspan': TSpanElement,\n  'tref': TRefElement,\n  'a': AElement,\n  'textPath': TextPathElement,\n  'image': ImageElement,\n  'g': GElement,\n  'symbol': SymbolElement,\n  'style': StyleElement,\n  'use': UseElement,\n  'mask': MaskElement,\n  'clipPath': ClipPathElement,\n  'filter': FilterElement,\n  'feDropShadow': FeDropShadowElement,\n  'feMorphology': FeMorphologyElement,\n  'feComposite': FeCompositeElement,\n  'feColorMatrix': FeColorMatrixElement,\n  'feGaussianBlur': FeGaussianBlurElement,\n  'title': TitleElement,\n  'desc': DescElement\n}\n\ntype Elements = typeof elements\n\nexport type AnyElement = Elements[keyof Elements]\n\nexport {\n  Element,\n  UnknownElement,\n  RenderedElement,\n  PathElement,\n  SVGElement,\n  RectElement,\n  CircleElement,\n  EllipseElement,\n  LineElement,\n  PolylineElement,\n  PolygonElement,\n  PatternElement,\n  MarkerElement,\n  DefsElement,\n  GradientElement,\n  LinearGradientElement,\n  RadialGradientElement,\n  StopElement,\n  AnimateElement,\n  AnimateColorElement,\n  AnimateTransformElement,\n  FontElement,\n  FontFaceElement,\n  MissingGlyphElement,\n  GlyphElement,\n  TextElement,\n  TSpanElement,\n  TRefElement,\n  AElement,\n  TextPathElement,\n  ImageElement,\n  GElement,\n  SymbolElement,\n  StyleElement,\n  UseElement,\n  MaskElement,\n  ClipPathElement,\n  FilterElement,\n  FeDropShadowElement,\n  FeMorphologyElement,\n  FeCompositeElement,\n  FeColorMatrixElement,\n  FeGaussianBlurElement,\n  TitleElement,\n  DescElement\n}\n","/* eslint-disable @typescript-eslint/no-use-before-define */\nimport { Canvg } from '../Canvg'\nimport { IScreenViewBoxConfig, Screen } from '../Screen'\nimport { Property } from '../Property'\nimport { SVGFontLoader } from '../SVGFontLoader'\nimport { Element } from './Element'\nimport { UnknownElement } from './UnknownElement'\nimport { TextNode } from './TextNode'\nimport { ImageElement } from './ImageElement'\nimport { SVGElement } from './SVGElement'\nimport {\n  AnyElement,\n  elements as elementTypes\n} from './elements'\n\n/**\n * Function to create new canvas.\n */\nexport type CreateCanvas = (width: number, height: number) => HTMLCanvasElement | OffscreenCanvas & {\n  getContext(contextId: '2d'): OffscreenCanvasRenderingContext2D\n}\n\n/**\n * Function to create new image.\n */\nexport type CreateImage = (src: string, anonymousCrossOrigin?: boolean) => Promise<CanvasImageSource>\n\nexport interface IDocumentOptions {\n  /**\n   * Default `rem` size.\n   */\n  rootEmSize?: number\n  /**\n   * Default `em` size.\n   */\n  emSize?: number\n  /**\n   * Function to create new canvas.\n   */\n  createCanvas?: CreateCanvas\n  /**\n   * Function to create new image.\n   */\n  createImage?: CreateImage\n  /**\n   * Load images anonymously.\n   */\n  anonymousCrossOrigin?: boolean\n}\n\nexport type IViewBoxConfig = Omit<IScreenViewBoxConfig, 'document'>\n\ntype DOMDocument = typeof window.document\n\nfunction createCanvas(width: number, height: number) {\n  const canvas = document.createElement('canvas')\n\n  canvas.width = width\n  canvas.height = height\n\n  return canvas\n}\n\nasync function createImage(src: string, anonymousCrossOrigin = false) {\n  const image = document.createElement('img')\n\n  if (anonymousCrossOrigin) {\n    image.crossOrigin = 'Anonymous'\n  }\n\n  return new Promise<HTMLImageElement>((resolve, reject) => {\n    image.onload = () => {\n      resolve(image)\n    }\n\n    image.onerror = (_event, _source, _lineno, _colno, error) => {\n      reject(error)\n    }\n\n    image.src = src\n  })\n}\n\nconst DEFAULT_EM_SIZE = 12\n\nexport class Document {\n  static readonly createCanvas = createCanvas\n  static readonly createImage = createImage\n  static readonly elementTypes: Record<string, AnyElement> = elementTypes\n\n  rootEmSize: number\n  documentElement?: SVGElement\n  readonly screen: Screen\n  readonly createCanvas: CreateCanvas\n  readonly createImage: CreateImage\n  readonly definitions: Record<string, Element> = {}\n  readonly styles: Record<string, Record<string, Property>> = {}\n  readonly stylesSpecificity: Record<string, string> = {}\n  readonly images: ImageElement[] = []\n  readonly fonts: SVGFontLoader[] = []\n  private readonly emSizeStack: number[] = []\n  private uniqueId = 0\n\n  constructor(\n    readonly canvg: Canvg,\n    {\n      rootEmSize = DEFAULT_EM_SIZE,\n      emSize = DEFAULT_EM_SIZE,\n      createCanvas = Document.createCanvas,\n      createImage = Document.createImage,\n      anonymousCrossOrigin\n    }: IDocumentOptions = {}\n  ) {\n    this.screen = canvg.screen\n    this.rootEmSize = rootEmSize\n    this.emSize = emSize\n    this.createCanvas = createCanvas\n    this.createImage = this.bindCreateImage(createImage, anonymousCrossOrigin)\n\n    this.screen.wait(() => this.isImagesLoaded())\n    this.screen.wait(() => this.isFontsLoaded())\n  }\n\n  private bindCreateImage(createImage: CreateImage, anonymousCrossOrigin?: boolean) {\n    if (typeof anonymousCrossOrigin === 'boolean') {\n      return (source: string, forceAnonymousCrossOrigin?: boolean) => createImage(\n        source,\n        typeof forceAnonymousCrossOrigin === 'boolean'\n          ? forceAnonymousCrossOrigin\n          : anonymousCrossOrigin\n      )\n    }\n\n    return createImage\n  }\n\n  get window() {\n    return this.screen.window\n  }\n\n  get fetch() {\n    return this.screen.fetch\n  }\n\n  get ctx() {\n    return this.screen.ctx\n  }\n\n  get emSize() {\n    const { emSizeStack } = this\n\n    return emSizeStack[emSizeStack.length - 1] || DEFAULT_EM_SIZE\n  }\n\n  set emSize(value: number) {\n    const { emSizeStack } = this\n\n    emSizeStack.push(value)\n  }\n\n  popEmSize() {\n    const { emSizeStack } = this\n\n    emSizeStack.pop()\n  }\n\n  getUniqueId() {\n    return `canvg${++this.uniqueId}`\n  }\n\n  isImagesLoaded() {\n    return this.images.every(_ => _.loaded)\n  }\n\n  isFontsLoaded() {\n    return this.fonts.every(_ => _.loaded)\n  }\n\n  createDocumentElement(document: DOMDocument) {\n    const documentElement = this.createElement<SVGElement>(document.documentElement)\n\n    documentElement.root = true\n    documentElement.addStylesFromStyleDefinition()\n\n    this.documentElement = documentElement\n\n    return documentElement\n  }\n\n  createElement<T extends Element>(node: HTMLElement) {\n    const elementType = node.nodeName.replace(/^[^:]+:/, '')\n    const ElementType = Document.elementTypes[elementType]\n\n    if (ElementType) {\n      return new ElementType(this, node) as T\n    }\n\n    return new UnknownElement(this, node) as T\n  }\n\n  createTextNode(node: HTMLElement) {\n    return new TextNode(this, node)\n  }\n\n  setViewBox(config: IViewBoxConfig) {\n    this.screen.setViewBox({\n      document: this,\n      ...config\n    })\n  }\n}\n","import { RenderingContext2D } from './types'\nimport { IParserOptions, Parser } from './Parser'\nimport {\n  IScreenOptions,\n  IScreenStartOptions,\n  Screen\n} from './Screen'\nimport {\n  IDocumentOptions,\n  Document,\n  SVGElement\n} from './Document'\n\ntype DOMDocument = typeof window.document\n\nexport interface IOptions extends IParserOptions,\n  IScreenOptions,\n  IScreenStartOptions,\n  IDocumentOptions {}\n\n/**\n * SVG renderer on canvas.\n */\nexport class Canvg {\n  /**\n   * Create Canvg instance from SVG source string or URL.\n   * @param ctx - Rendering context.\n   * @param svg - SVG source string or URL.\n   * @param options - Rendering options.\n   * @returns Canvg instance.\n   */\n  static async from(\n    ctx: RenderingContext2D,\n    svg: string,\n    options: IOptions = {}\n  ) {\n    const parser = new Parser(options)\n    const svgDocument = await parser.parse(svg)\n\n    return new Canvg(ctx, svgDocument, options)\n  }\n\n  /**\n   * Create Canvg instance from SVG source string.\n   * @param ctx - Rendering context.\n   * @param svg - SVG source string.\n   * @param options - Rendering options.\n   * @returns Canvg instance.\n   */\n  static fromString(\n    ctx: RenderingContext2D,\n    svg: string,\n    options: IOptions = {}\n  ) {\n    const parser = new Parser(options)\n    const svgDocument = parser.parseFromString(svg)\n\n    return new Canvg(ctx, svgDocument, options)\n  }\n\n  /**\n   * XML/HTML parser instance.\n   */\n  readonly parser: Parser\n  /**\n   * Screen instance.\n   */\n  readonly screen: Screen\n  /**\n   * Canvg Document.\n   */\n  readonly document: Document\n  private readonly documentElement: SVGElement\n  private readonly options: IOptions\n\n  /**\n   * Main constructor.\n   * @param ctx - Rendering context.\n   * @param svg - SVG Document.\n   * @param options - Rendering options.\n   */\n  constructor(\n    ctx: RenderingContext2D,\n    svg: DOMDocument,\n    options: IOptions = {}\n  ) {\n    this.parser = new Parser(options)\n    this.screen = new Screen(ctx, options)\n    this.options = options\n\n    const document = new Document(this, options)\n    const documentElement = document.createDocumentElement(svg)\n\n    this.document = document\n    this.documentElement = documentElement\n  }\n\n  /**\n   * Create new Canvg instance with inherited options.\n   * @param ctx - Rendering context.\n   * @param svg - SVG source string or URL.\n   * @param options - Rendering options.\n   * @returns Canvg instance.\n   */\n  fork(\n    ctx: RenderingContext2D,\n    svg: string,\n    options: IOptions = {}\n  ) {\n    return Canvg.from(ctx, svg, {\n      ...this.options,\n      ...options\n    })\n  }\n\n  /**\n   * Create new Canvg instance with inherited options.\n   * @param ctx - Rendering context.\n   * @param svg - SVG source string.\n   * @param options - Rendering options.\n   * @returns Canvg instance.\n   */\n  forkString(\n    ctx: RenderingContext2D,\n    svg: string,\n    options: IOptions = {}\n  ) {\n    return Canvg.fromString(ctx, svg, {\n      ...this.options,\n      ...options\n    })\n  }\n\n  /**\n   * Document is ready promise.\n   * @returns Ready promise.\n   */\n  ready() {\n    return this.screen.ready()\n  }\n\n  /**\n   * Document is ready value.\n   * @returns Is ready or not.\n   */\n  isReady() {\n    return this.screen.isReady()\n  }\n\n  /**\n   * Render only first frame, ignoring animations and mouse.\n   * @param options - Rendering options.\n   */\n  async render(options: IScreenStartOptions = {}) {\n    this.start({\n      enableRedraw: true,\n      ignoreAnimation: true,\n      ignoreMouse: true,\n      ...options\n    })\n\n    await this.ready()\n\n    this.stop()\n  }\n\n  /**\n   * Start rendering.\n   * @param options - Render options.\n   */\n  start(options: IScreenStartOptions = {}) {\n    const {\n      documentElement,\n      screen,\n      options: baseOptions\n    } = this\n\n    screen.start(documentElement, {\n      enableRedraw: true,\n      ...baseOptions,\n      ...options\n    })\n  }\n\n  /**\n   * Stop rendering.\n   */\n  stop() {\n    this.screen.stop()\n  }\n\n  /**\n   * Resize SVG to fit in given size.\n   * @param width\n   * @param height\n   * @param preserveAspectRatio\n   */\n  resize(\n    width: number,\n    height = width,\n    preserveAspectRatio: boolean | string = false\n  ) {\n    this.documentElement.resize(width, height, preserveAspectRatio)\n  }\n}\n"],"names":["offscreen","DOMParser","DOMParserFallback","preset","window","ignoreAnimation","ignoreMouse","createCanvas","width","height","OffscreenCanvas","createImage","url","response","fetch","blob","img","createImageBitmap","globalThis","Reflect","deleteProperty","node","canvas","loadImage","compressSpaces","str","replace","trimLeft","trimRight","toNumbers","matches","match","map","parseFloat","toMatrixValue","numbers","matrix","allUppercase","normalizeAttributeName","name","test","toLowerCase","parseExternalUrl","urlMatch","exec","normalizeColor","color","startsWith","rgbParts","normalizedColor","num","isFloat","String","Math","round","attributeRegex","idRegex","classRegex","pseudoElementRegex","pseudoClassWithBracketsRegex","pseudoClassRegex","elementRegex","findSelectorMatch","selector","regex","length","getSelectorSpecificity","specificity","currentSelector","delta","join","PSEUDO_ZERO","vectorMagnitude","v","sqrt","pow","vectorsRatio","u","vectorsAngle","acos","CB1","t","CB2","CB3","CB4","QB1","QB2","QB3","Property","empty","document","textBaselineMapping","isNormalizedColor","constructor","value","split","separator","getString","trim","hasValue","zeroIsValue","isString","regexp","result","isUrlDefinition","isPixels","asString","endsWith","setValue","getValue","def","getNumber","n","getColor","getDpi","getRem","rootEmSize","getEm","emSize","getUnits","getPixels","axisOrIsFontSize","processPercent","axis","isFontSize","undefined","viewPort","screen","min","computeSize","max","getMilliseconds","getRadians","PI","getDefinition","definitions","getFillStyleDefinition","element","opacity","createGradient","ctx","createPattern","getHrefAttribute","patternTransform","getAttribute","getTextBaseline","key","addOpacity","len","commas","i","RGBColor","ok","alpha","toRGBA","ViewPort","DEFAULT_VIEWPORT_WIDTH","DEFAULT_VIEWPORT_HEIGHT","viewPorts","clear","setCurrent","push","removeCurrent","pop","getRoot","root","getDefault","getCurrent","current","d","Point","parse","point","defaultValue","x","y","parseScale","scale","parsePath","path","points","pathPoints","angleTo","atan2","applyTransform","transform","xp","yp","Mouse","working","events","eventElements","onClick","bind","onMouseMove","isWorking","start","onclick","onmousemove","stop","hasEvents","runEvents","style","cursor","forEach","run","parent","checkPath","isPointInPath","checkBoundingBox","boundingBox","isPointInBox","mapXY","offsetLeft","offsetTop","offsetParent","scrollX","scrollY","event","clientX","clientY","type","eventTarget","defaultWindow","defaultFetch","Screen","FRAMERATE","MAX_VIRTUAL_PIXELS","mouse","animations","readyPromise","resolveReady","waits","frameDuration","isReadyLock","isFirstRender","intervalId","Error","wait","checker","ready","Promise","resolve","isReady","every","_","setDefaults","strokeStyle","lineCap","lineJoin","miterLimit","setViewBox","aspectRatio","desiredWidth","desiredHeight","minX","minY","refX","refY","clip","clipX","clipY","cleanAspectRatio","aspectRatioAlign","aspectRatioMeetOrSlice","align","meetOrSlice","scaleX","scaleY","scaleMin","scaleMax","finalDesiredWidth","finalDesiredHeight","refXProp","refYProp","hasRefs","translate","scaledClipX","scaledClipY","beginPath","moveTo","lineTo","closePath","isMeetMinY","isSliceMaxY","isMeetMinX","isSliceMaxX","enableRedraw","ignoreDimensions","ignoreClear","forceRedraw","scaleWidth","scaleHeight","offsetX","offsetY","render","now","Date","then","tick","shouldUpdate","requestAnimationFrame","reduce","animation","update","widthStyle","getStyle","heightStyle","cWidth","clientWidth","cHeight","clientHeight","viewBox","xRatio","yRatio","isNaN","transformStyle","clearRect","DefaultDOMParser","Parser","resource","parseFromString","load","xml","parser","checkDocument","err","parserError","getElementsByTagName","textContent","text","Translate","apply","unapply","applyToPoint","Rotate","angle","originX","originY","cx","cy","rotate","transformOrigin","tx","ty","rad","cos","sin","Scale","scaleSize","Matrix","a","b","c","e","f","g","h","det","Skew","skew","SkewX","tan","SkewY","parseTransforms","parseTransform","Transform","fromElement","transformOriginXProperty","transformOriginYProperty","transformTypes","skewX","skewY","transforms","data","TransformType","Element","ignoreChildTypes","attributes","styles","stylesSpecificity","animationFrozen","animationFrozenValue","children","captureTextNodes","nodeType","Array","from","attribute","nodeName","addStylesFromStyleDefinition","id","childNodes","childNode","addChild","textNode","createTextNode","getText","createIfNotExists","attr","href","skipAncestors","parentStyle","save","mask","applyEffects","filter","setContext","renderChildren","clearContext","restore","clipPathStyleProp","child","createElement","includes","matchesSelector","styleClasses","some","styleClass","styleProp","existingSpecificity","removeStyles","ignoreStyles","toRestore","restoreStyles","isFirstChild","indexOf","UnknownElement","wrapFontFamily","fontFamily","trimmed","prepareFontFamily","process","prepareFontStyle","fontStyle","targetFontStyle","prepareFontWeight","fontWeight","targetFontWeight","Font","font","inherit","fontVariant","fontSize","parts","set","part","variants","weights","inheritFont","toString","BoundingBox","Number","NaN","y1","x2","x1","y2","addPoint","addX","addY","addBoundingBox","sumCubic","p0","p1","p2","p3","bezierCurveAdd","forX","b2ac","t1","t2","addBezierCurve","p0x","p0y","p1x","p1y","p2x","p2y","p3x","p3y","addQuadraticCurve","cp1x","cp1y","cp2x","cp2y","RenderedElement","modifiedEmSizeStack","calculateOpacity","opacityStyle","fromMeasure","fillStyleProp","fillOpacityStyleProp","strokeStyleProp","strokeOpacityProp","fillStyle","strokeWidthStyleProp","newLineWidth","lineWidth","strokeLinecapStyleProp","strokeLinejoinStyleProp","strokeMiterlimitProp","strokeDasharrayStyleProp","strokeDashoffsetProp","gaps","setLineDash","webkitLineDash","mozDash","offset","lineDashOffset","webkitLineDashOffset","mozDashOffset","fontStyleProp","fontStyleStyleProp","fontVariantStyleProp","fontWeightStyleProp","fontSizeStyleProp","fontFamilyStyleProp","globalAlpha","popEmSize","TextElement","leafTexts","textChunkStart","POSITIVE_INFINITY","maxX","NEGATIVE_INFINITY","measureCache","textBaseline","initializeCoordinates","getBoundingBox","getTElementBoundingBox","adjustChildCoordinatesRecursive","childBoundingBox","getChildBoundingBox","getFontSize","inheritFontSize","measureText","getGlyph","char","glyph","isArabic","prevChar","nextChar","arabicForm","arabicGlyphs","glyphs","missingGlyph","getTextFromNode","parentNode","index","lastIndex","renderTElementChildren","renderChild","renderText","customFont","unitsPerEm","fontFace","ctxFont","isRTL","reverse","dx","lw","horizAdvX","fillText","strokeText","applyAnchoring","firstElement","textAnchor","shift","adjustChildCoordinatesRecursiveCore","textParent","adjustChildCoordinates","xAttr","yAttr","dxAttr","dyAttr","Boolean","getInheritedAttribute","measure","measureTargetText","targetText","parentAttr","TSpanElement","TextNode","PathParser","SVGPathData","control","command","commands","previousCommand","angles","reset","isEnd","next","getPoint","xProp","yProp","makeAbsolute","getAsControlPoint","getAsCurrentPoint","getReflectedControlPoint","CURVE_TO","SMOOTH_CURVE_TO","QUAD_TO","SMOOTH_QUAD_TO","ox","oy","relative","addMarker","priorTo","addMarkerAngle","getMarkerPoints","getMarkerAngles","j","PathElement","pathParser","MOVE_TO","pathM","LINE_TO","pathL","HORIZ_LINE_TO","pathH","VERT_LINE_TO","pathV","pathC","pathS","pathQ","pathT","ARC","pathA","CLOSE_PATH","pathZ","_ctx","getMarkers","markers","fillRuleStyleProp","fill","setTransform","stroke","markersLastIndex","markerStartStyleProp","markerMidStyleProp","markerEndStyleProp","marker","controlPoint","currentPoint","bezierCurveTo","quadraticCurveTo","rX","rY","xRot","lArcFlag","sweepFlag","xAxisRotation","currp","l","s","cpp","centp","a1","ad","dir","ah","halfWay","r","sx","sy","arc","SVGElement","getComputedStyle","getPropertyValue","fontSizeProp","refXAttr","refYAttr","viewBoxAttr","resize","preserveAspectRatio","widthAttr","heightAttr","styleAttr","originWidth","originHeight","preserveAspectRatioAttr","RectElement","rxAttr","ryAttr","rx","ry","KAPPA","CircleElement","EllipseElement","LineElement","getPoints","x0","y0","PolylineElement","PolygonElement","PatternElement","parentOpacityProp","patternSvg","patternCanvas","patternCtx","getContext","pattern","MarkerElement","orient","markerUnits","markerSvg","overflow","DefsElement","GElement","GradientElement","attributesToInherit","stops","getGradientUnits","stopsContainer","inheritStopContainer","gradient","getGradient","addParentOpacity","addColorStop","rootView","rect","group","attributeToInherit","colorProp","LinearGradientElement","isBoundingBoxUnits","createLinearGradient","RadialGradientElement","fx","fy","fr","createRadialGradient","StopElement","stopOpacity","stopColor","AnimateElement","begin","maxDuration","to","values","duration","initialValue","initialUnits","removed","frozen","valuesAttr","getProperty","attributeType","attributeName","calcValue","progress","getProgress","newValue","prop","updated","typeAttr","p","lb","floor","ub","ceil","AnimateColorElement","colorFrom","colorTo","AnimateTransformElement","transformFrom","transformTo","FontFaceElement","ascent","descent","GlyphElement","unicode","MissingGlyphElement","FontElement","fontFamilyStyle","arabicGlyph","TRefElement","firstChild","AElement","hasText","open","TextPathElement","textWidth","textHeight","pathLength","glyphInfo","dataArray","letterSpacingCache","equidistantCache","measuresCache","Map","pathElement","parsePathData","theta","dTheta","psi","fs","setTextData","textDecoration","rotation","partialText","getLetterSpacingAt","idx","findSegmentToFitChar","anchor","textFullWidth","fullPathWidth","spacesNumber","inputOffset","dy","charI","glyphWidth","splineStep","getEquidistantPointOnPath","segment","dyX","dyY","has","get","chars","thisSpacing","parentSpacing","letterSpacing","textLen","dxSum","acc","cur","getPathLength","startOffset","nextOffset","pathCommands","startX","startY","nextCommandType","calcLength","commandType","getLineLength","getPointOnCubicBezier","getPointOnQuadraticBezier","end","inc","abs","getPointOnEllipticalArc","getPointOnLine","dist","fromX","fromY","m","rise","pt","ix","iy","pRise","pRun","getPointOnPath","distance","fullLen","cumulativePathLength","currentT","pct","p4x","p4y","cosPsi","sinPsi","buildEquidistantCache","inputStep","inputPrecision","precision","step","targetDistance","dataUriRegex","ImageElement","loaded","image","isSvg","images","loadSvg","console","error","atob","decodeURIComponent","svg","subDocument","canvg","forkString","documentElement","complete","drawImage","SymbolElement","SVGFontLoader","fonts","svgDocument","fontNode","StyleElement","css","cssDefs","cssParts","cssClasses","cssProps","cssClass","props","cssProp","substr","srcs","src","UseElement","cachedElement","tempSvg","oldParent","elementTransform","imGet","_height","rgba","imSet","val","mi","m1","m2","m3","FeColorMatrixElement","includeOpacity","_x","_y","srcData","getImageData","nr","ng","nb","na","putImageData","MaskElement","ignoredStyles","maskCanvas","maskCtx","tmpCanvas","tmpCtx","globalCompositeOperation","fillRect","noop","ClipPathElement","contextProto","getPrototypeOf","FilterElement","px","py","efd","extraFilterDistance","tmpCanvasWidth","tmpCanvasHeight","FeDropShadowElement","_width","FeMorphologyElement","FeCompositeElement","FeGaussianBlurElement","blurRadius","body","getUniqueId","display","appendChild","canvasRGBA","removeChild","TitleElement","DescElement","elements","anonymousCrossOrigin","crossOrigin","reject","onload","onerror","_event","_source","_lineno","_colno","DEFAULT_EM_SIZE","Document","elementTypes","emSizeStack","uniqueId","bindCreateImage","isImagesLoaded","isFontsLoaded","source","forceAnonymousCrossOrigin","createDocumentElement","elementType","ElementType","config","Canvg","options","fromString","fork","baseOptions"],"mappings":"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"}